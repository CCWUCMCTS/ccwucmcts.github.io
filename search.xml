<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2020年冬季PAT甲级</title>
    <url>/posts/49912/</url>
    <content><![CDATA[<p><strong>代码懒得修了，写的特别烂</strong></p>
<span id="more"></span>
<h2 id="section">1</h2>
<h3 id="题目">题目</h3>
<h3 id="思路">思路</h3>
<p>直接求就好了。</p>
<h3 id="代码">代码</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line">ll f[<span class="number">120</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">ll n,dif=<span class="number">1e9</span>,ans=<span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">60</span>;i++)&#123;</span><br><span class="line">		f[i]=f[i<span class="number">-1</span>]+f[i<span class="number">-2</span>];</span><br><span class="line">		<span class="comment">//cout&lt;&lt;f[i]&lt;&lt;endl;</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">60</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">abs</span>(n-f[i])&lt;dif)&#123;</span><br><span class="line">			ans=f[i];</span><br><span class="line">			dif=<span class="built_in">abs</span>(n-f[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="section-1">2</h2>
<h3 id="题目-1">题目</h3>
<h3 id="思路-1">思路</h3>
<p>直接匹配可能超时，从子序列串第一个字母在母串出现的位置开始匹配。</p>
<h3 id="代码-1">代码</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line">string s,q;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;st;</span><br><span class="line">string ans;</span><br><span class="line"><span class="keyword">int</span> len=<span class="number">1e9</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt;s&gt;&gt;q;</span><br><span class="line">	<span class="keyword">if</span>(q.<span class="built_in">size</span>()==<span class="number">1</span>)&#123;</span><br><span class="line">		cout&lt;&lt;q&lt;&lt;endl;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(s[i]==q[<span class="number">0</span>])&#123;</span><br><span class="line">			st.<span class="built_in">push_back</span>(i);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;st.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> l=st[i],p=<span class="number">1</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=l+<span class="number">1</span>;j&lt;s.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(s[j]==q[p])&#123;</span><br><span class="line">				p++;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(p==q.<span class="built_in">size</span>())&#123;</span><br><span class="line">				<span class="keyword">int</span> t=j-l+<span class="number">1</span>;</span><br><span class="line">				<span class="keyword">if</span>(t&lt;len)&#123;</span><br><span class="line">					len=t;</span><br><span class="line">					ans=s.<span class="built_in">substr</span>(l,t);</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(len!=<span class="number">1e9</span>) cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		cout&lt;&lt;endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="section-2">3</h2>
<h3 id="题目-2">题目</h3>
<h3 id="思路-2">思路</h3>
<p>直接建树求。</p>
<h3 id="代码-2">代码</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">int</span> lasdep[<span class="number">1020</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	string s;</span><br><span class="line">	<span class="keyword">int</span> f;</span><br><span class="line">&#125;e[<span class="number">1020</span>];</span><br><span class="line">map&lt;string,<span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> d)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(e[d].f!=<span class="number">-1</span>)&#123;</span><br><span class="line">		<span class="built_in">dfs</span>(e[d].f);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(e[d].f!=<span class="number">-1</span>)&#123;</span><br><span class="line">		cout&lt;&lt;<span class="string">&quot;-&gt;&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;e[d].s;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="built_in">getline</span>(cin,s);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">getline</span>(cin,s);</span><br><span class="line">		<span class="keyword">int</span> l=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(l=<span class="number">0</span>;l&lt;s.<span class="built_in">size</span>();l++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(s[l]!=<span class="string">&#x27; &#x27;</span>) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		string cur=s.<span class="built_in">substr</span>(l);</span><br><span class="line">		mp[cur]=i;</span><br><span class="line">		e[i].s=cur;</span><br><span class="line">		lasdep[l]=i;</span><br><span class="line">		<span class="keyword">if</span>(l==<span class="number">0</span>)&#123;</span><br><span class="line">			e[i].f=<span class="number">-1</span>;</span><br><span class="line">			<span class="keyword">continue</span>;	</span><br><span class="line">		&#125;</span><br><span class="line">		e[i].f=lasdep[l<span class="number">-1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	cin&gt;&gt;m;</span><br><span class="line">	string q;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		cin&gt;&gt;q;</span><br><span class="line">		<span class="keyword">if</span>(!mp[q])&#123;</span><br><span class="line">			cout&lt;&lt;<span class="string">&quot;Error: &quot;</span>&lt;&lt;q&lt;&lt;<span class="string">&quot; is not found.&quot;</span>&lt;&lt;endl;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="built_in">dfs</span>(mp[q]);</span><br><span class="line">			cout&lt;&lt;endl;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="section-3">4</h2>
<h3 id="题目-3">题目</h3>
<h3 id="思路-3">思路</h3>
<p>dfs枚举制造m个所有的情况，然后排序。</p>
<p>一开始读错题，然后猜了一下题意。</p>
<p>==重载写错，改了就过了。</p>
<p>如果是更难的题意，extend应该能骗点分。</p>
<h3 id="代码-3">代码</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">ot</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x&gt;=<span class="number">10</span>)&#123;</span><br><span class="line">		cout&lt;&lt;x;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		cout&lt;&lt;<span class="string">&#x27;0&#x27;</span>&lt;&lt;x;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">num</span><span class="params">(string x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>(x[<span class="number">0</span>]==<span class="string">&#x27;+&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(x[<span class="number">0</span>]==<span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;x.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		ret*=<span class="number">10</span>;</span><br><span class="line">		ret+=x[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">int</span> w[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">int</span> pro[<span class="number">120</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	vector&lt;<span class="keyword">int</span>&gt;v;</span><br><span class="line">	<span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line">		<span class="comment">//sort(v.begin(),v.end());</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(i!=<span class="number">0</span>)&#123;</span><br><span class="line">				cout&lt;&lt;<span class="string">&quot; + &quot;</span>;</span><br><span class="line">			&#125;<span class="built_in">ot</span>(v[i]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> E x)<span class="keyword">const</span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">min</span>(v.<span class="built_in">size</span>(),x.v.<span class="built_in">size</span>());i++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(v[i]==x.v[i]) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">return</span> v[i]&lt;x.v[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> v.<span class="built_in">size</span>()&lt;x.v.<span class="built_in">size</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> E x)<span class="keyword">const</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> v==x.v;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;;</span><br><span class="line">vector&lt;E&gt;pth[<span class="number">120</span>];</span><br><span class="line">vector&lt;vector&lt;E&gt;&gt;ans;</span><br><span class="line">vector&lt;E&gt;tmp;</span><br><span class="line">map&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">	E cur=pth[pro[u]][i];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cur.v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(mp[cur.v[i]]||w[cur.v[i]]==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">mer</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">	E cur=pth[pro[u]][i];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cur.v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		mp[cur.v[i]]++;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">invmer</span><span class="params">(<span class="keyword">int</span> u,<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">	E cur=pth[pro[u]][i];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;cur.v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		mp[cur.v[i]]--;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">	<span class="comment">//cout&lt;&lt;u&lt;&lt;&quot;:\n&quot;;</span></span><br><span class="line">	<span class="keyword">if</span>(u==m+<span class="number">1</span>)&#123;</span><br><span class="line">		ans.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;pth[pro[u]].<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="comment">//cout&lt;&lt;u&lt;&lt;&#x27; &#x27;&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line">		<span class="keyword">if</span>(<span class="built_in">check</span>(u,i))&#123;</span><br><span class="line">			tmp.<span class="built_in">push_back</span>(pth[pro[u]][i]);</span><br><span class="line">			<span class="built_in">mer</span>(u,i);</span><br><span class="line">			<span class="built_in">dfs</span>(u+<span class="number">1</span>);</span><br><span class="line">			<span class="built_in">invmer</span>(u,i);</span><br><span class="line">			tmp.<span class="built_in">pop_back</span>();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(vector&lt;E&gt; x,vector&lt;E&gt; y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;x.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(x[i]==y[i]) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">return</span> x[i]&lt;y[i];</span><br><span class="line">	&#125;	</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">output</span><span class="params">(vector&lt;E&gt; x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">		x[i].<span class="built_in">print</span>();</span><br><span class="line">		cout&lt;&lt;<span class="string">&quot; -&gt; &quot;</span>;</span><br><span class="line">		<span class="built_in">ot</span>(pro[i+<span class="number">1</span>]);</span><br><span class="line">		cout&lt;&lt;endl;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">mg</span><span class="params">(E &amp;x,E &amp;y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> len=x.v.<span class="built_in">size</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;y.v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;len;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(y.v[i]==x.v[j]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		x.v.<span class="built_in">push_back</span>(y.v[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">extd</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">99</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;pth[i].<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;pth[i][j].v.<span class="built_in">size</span>();k++)&#123;</span><br><span class="line">				<span class="keyword">int</span> add=pth[i][j].v[k];</span><br><span class="line">				<span class="keyword">if</span>(pth[add].<span class="built_in">size</span>()==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">				<span class="keyword">for</span>(<span class="keyword">int</span> l=<span class="number">0</span>;l&lt;pth[add].<span class="built_in">size</span>();l++)&#123;</span><br><span class="line">					E nex=pth[i][j];</span><br><span class="line">					<span class="keyword">int</span> p=nex.v[k];</span><br><span class="line">					nex.v.<span class="built_in">erase</span>(nex.v.<span class="built_in">begin</span>()+k);</span><br><span class="line">					<span class="keyword">if</span>(<span class="built_in">mg</span>(nex,pth[add][l]))&#123;</span><br><span class="line">						<span class="built_in">sort</span>(nex.v.<span class="built_in">begin</span>(),nex.v.<span class="built_in">end</span>());</span><br><span class="line">						pth[i].<span class="built_in">push_back</span>(nex);</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//io_opt;</span></span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;s;</span><br><span class="line">		c[i]=<span class="built_in">num</span>(s);</span><br><span class="line">		w[c[i]]++;</span><br><span class="line">	&#125;</span><br><span class="line">	cin&gt;&gt;m;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		cin&gt;&gt;s;</span><br><span class="line">		pro[i]=<span class="built_in">num</span>(s);</span><br><span class="line">	&#125;</span><br><span class="line">	cin&gt;&gt;k;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">		E cur;</span><br><span class="line">		<span class="keyword">while</span>(cin&gt;&gt;s)&#123;</span><br><span class="line">			<span class="keyword">int</span> t=<span class="built_in">num</span>(s);</span><br><span class="line">			<span class="keyword">if</span>(t==<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">			<span class="keyword">if</span>(t==<span class="number">-2</span>) <span class="keyword">continue</span>;</span><br><span class="line">			cur.v.<span class="built_in">push_back</span>(t);</span><br><span class="line">		&#125;</span><br><span class="line">		cin&gt;&gt;s;</span><br><span class="line">		<span class="keyword">int</span> t=<span class="built_in">num</span>(s);</span><br><span class="line">		pth[t].<span class="built_in">push_back</span>(cur);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//extd();</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">99</span>;i++)&#123;</span><br><span class="line">		E cur;</span><br><span class="line">		cur.v.<span class="built_in">push_back</span>(i);</span><br><span class="line">		pth[i].<span class="built_in">push_back</span>(cur);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">	<span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(),ans.<span class="built_in">end</span>(),cmp);</span><br><span class="line">	<span class="comment">//if(ans.size()&gt;1) while(1);</span></span><br><span class="line">	<span class="built_in">output</span>(ans[<span class="number">0</span>]);</span><br><span class="line">	<span class="comment">/*for(int i=0;i&lt;ans.size();i++)&#123;</span></span><br><span class="line"><span class="comment">		output(ans[i]);</span></span><br><span class="line"><span class="comment">	&#125;*/</span></span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>ACM比赛/总结</category>
      </categories>
  </entry>
  <entry>
    <title>No. 0 收拾行装，再次出发——2019.4.1总结</title>
    <url>/posts/14270/</url>
    <content><![CDATA[<h2 id="一队伍训练情况">一、队伍训练情况</h2>
<p>　　no response</p>
<h2 id="二个人训练情况">二、个人训练情况</h2>
<p>　　刷了PTA和51Nod的一些题。</p>
<h2 id="三近况总结">三、近况总结</h2>
<p>　　开学比赛状况不是很理想，之后自己刷了一些题。后面蓝桥杯省一，天梯赛151，尚可，需要准备蓝桥杯国赛和江苏省省赛。</p>
<h2 id="四遇到的问题可行的解决方案">四、遇到的问题&amp;可行的解决方案</h2>
<p>　　第一，开学以来刷题疯狂减少，第一二周刷了几十道题，但这几周几乎没怎么刷题。解决方案为重新规划日常安排。</p>
<p>　　第二，开学后的几场比赛可能对心态有影响。要意识到这些比赛能够打出成绩是由于大部分题是简单的模拟，而自己对于很多算法还没有掌握，这些比赛并不能说明自己的水平。</p>
<h2 id="五对未来的规划">五、对未来的规划</h2>
<p>　　在日常规划方面，抽出时间来学习算法和做题，一到两周后准备队伍的磨合和训练。</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>ACM比赛/总结</category>
      </categories>
  </entry>
  <entry>
    <title>No. 1 论目标——2019.4.7总结</title>
    <url>/posts/50582/</url>
    <content><![CDATA[<h2 id="一队伍训练情况">一、队伍训练情况</h2>
<p>　　计划下周开始到实验室训练</p>
<h2 id="二个人训练情况">二、个人训练情况</h2>
<p>　　计蒜客<span class="exturl" data-url="aHR0cHM6Ly93d3cuamlzdWFua2UuY29tL2NvbnRlc3QvMjMxNg==">ACM训练联盟周赛第二场<i class="fa fa-external-link-alt"></i></span></p>
<p>　　Codeforces<span class="exturl" data-url="aHR0cDovL2NvZGVmb3JjZXMuY29tL2Jsb2cvZW50cnkvNjYzNTg=">Codeforces Global Round 2<i class="fa fa-external-link-alt"></i></span></p>
<p>　　51Nod</p>
<p>　　止步于简单题</p>
<h2 id="三遇到的问题可行的解决方案">三、遇到的问题&amp;可行的解决方案</h2>
<p>　　目标是什么？正在解决。</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>ACM比赛/总结</category>
      </categories>
  </entry>
  <entry>
    <title>No. 2 contest++——2019.4.14总结</title>
    <url>/posts/46120/</url>
    <content><![CDATA[<h2 id="一队伍训练情况">一、队伍训练情况</h2>
<p>　　浙大校赛网络同步赛，5题。</p>
<h2 id="二个人训练情况">二、个人训练情况</h2>
<p>　　<span class="exturl" data-url="aHR0cDovL2NvZGVmb3JjZXMuY29tL2Jsb2cvZW50cnkvNjY1MDU=">Codeforces Round #551 (Div. 2)<i class="fa fa-external-link-alt"></i></span></p>
<p>　 <span class="exturl" data-url="aHR0cDovLzIwNTAuYWNtY2x1Yi5jbi8=">2050编程竞赛<i class="fa fa-external-link-alt"></i></span></p>
<p>　　4+3+5还是只能做一些非dp的思维题。</p>
<h2 id="三遇到的问题可行的解决方案">三、遇到的问题&amp;可行的解决方案</h2>
<p>　　掌握的知识太少。</p>
<p>　　无解，能力有限，近几周需要加强学习，竞赛仅作基础训练。</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>ACM比赛/总结</category>
      </categories>
  </entry>
  <entry>
    <title>No. 3 南昌邀请赛网络赛——2019.4.21总结</title>
    <url>/posts/22891/</url>
    <content><![CDATA[<h2 id="一队伍训练">一、队伍训练</h2>
<p>　　The Preliminary Contest for ICPC China Nanchang National Invitational 　　南昌邀请赛网络赛4题</p>
<h2 id="二个人训练情况">二、个人训练情况</h2>
<p>　　Time Limited，总结一下南昌网络赛，去晚了，去了一会队友做出来A，跟榜暴力写M第一遍T了，然后短路优化还有各种瞎搞勉强过了，发现H的结论，队友写了，最后一直在搞K，写了三个函数模拟，弄了一个类似杨辉三角的三角形，复制到word找规律，一开始暴力找T了，发现异或前缀和，mod分成4类，还是WA，后来规范了一下过程A了，还有不到十分钟，就看队友算别的题了。。。</p>
<h2 id="三遇到的问题可行的解决方案">三、遇到的问题&amp;可行的解决方案</h2>
<p>　　Time Limited</p>
<p>　　No response</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>ACM比赛/总结</category>
      </categories>
  </entry>
  <entry>
    <title>No. 4 最近三场比赛总结及展望——2019.6.3总结</title>
    <url>/posts/11271/</url>
    <content><![CDATA[<h2 id="一队伍训练">一、队伍训练</h2>
<p>　　可以称得上去训练的算是两场邀请赛及其热身赛吧。</p>
<p>　　这两次发挥的不理想，具体问题在于西安的没写出bfs题，南昌的我推错了结论。但根本原因却不在这，稍后分析。</p>
<h2 id="二个人训练情况">二、个人训练情况</h2>
<p>　　两场邀请赛，蓝桥杯国赛。</p>
<p>　　其它都是简单题，没啥好说的。</p>
<h2 id="三综合分析">三、综合分析</h2>
<p>　　1. 比赛情况</p>
<p>　　西安邀请赛：打铁，离铜牌差了几十分钟，对于我个人而言，几乎算没有上机，而且在旁边做出的贡献也不大，这一点我检讨，和英文水平低也有关系。</p>
<p>　　蓝桥杯国赛：听说比去年加大难度，打暴力得了二等，很多东西都是乱搞，心态也受到旁边人影响（不给学长递过去东西还释放不明气体），因此比赛结果和解题能力关系不大。</p>
<p>　　南昌邀请赛：打铁，差一道题（并且如果这道题在最后过也没奖），原因是我推错了结论（和网络赛很像），由于太肯定队友也没继续推，第一次写线段树一直以为是线段树出错，最后几分钟试试换方法遇到了CB闪退（即使不闪退，结论也是错的从做不出来）。这个锅我也背。</p>
<p>　　2. 遇到的问题</p>
<p>　　简单来说，太菜，具体分为以下几个方面：</p>
<p>　　对比赛环境不熟悉，不会调试，其他编译器，不熟悉系统。</p>
<p>　　对比赛不适应，团队协调性不好，英文题目读错，不上机贡献小（就我个人而言，这个问题很大，可能队友也有一点）。</p>
<p>　　个人水平太差，能做的只有暴力和简单智力题，遇到板子题也不知道。</p>
<p>　　3. 解决方案</p>
<p>　　使用比赛系统编译器做题。</p>
<p>　　提升英文水平，做题时不着急交多想，提升纸上功夫。</p>
<p>　　全面提升算法水平，这个会在个人的规划中有。</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>ACM比赛/总结</category>
      </categories>
  </entry>
  <entry>
    <title>2019 ACM-TINA实验室10.12训练赛</title>
    <url>/posts/44103/</url>
    <content><![CDATA[<h2 id="a-codeforces-1238a-prime-subtraction">A CodeForces 1238A Prime Subtraction</h2>
<p>水题，除了差1都行。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll T,x,y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        <span class="keyword">if</span>(x-y==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;YES\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="b-codeforces-1238b-kill-em-all">B CodeForces 1238B Kill 'Em All</h2>
<p>排序去重，从右向左炸。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll T,n,r;</span><br><span class="line">ll a[<span class="number">100020</span>];</span><br><span class="line">ll cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;n,&amp;r);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">        n=<span class="built_in">unique</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n)-(a+<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]-cnt*r&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="c-codeforces-1238c-standard-free2play">C CodeForces 1238C Standard Free2play</h2>
<p>比赛想成dp了，还没补。</p>
<h2 id="d-codeforces-540c-ice-cave">D CodeForces 540C Ice Cave</h2>
<p>染色，分类讨论。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">5</span>][<span class="number">5</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1e8</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">520</span>][<span class="number">520</span>];</span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">int</span> sx,sy,tx,ty,cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cx,<span class="keyword">int</span> cy)</span></span>&#123;</span><br><span class="line">    a[cx][cy]=cnt;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> xx=cx+f[i][<span class="number">0</span>],yy=cy+f[i][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(xx&gt;=<span class="number">1</span>&amp;&amp;xx&lt;=n&amp;&amp;yy&gt;=<span class="number">1</span>&amp;&amp;yy&lt;=m&amp;&amp;a[xx][yy]==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">dfs</span>(xx,yy);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;s.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[j]==<span class="string">&#x27;X&#x27;</span>)&#123;</span><br><span class="line">                a[i][j+<span class="number">1</span>]=<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                a[i][j+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cin&gt;&gt;sx&gt;&gt;sy&gt;&gt;tx&gt;&gt;ty;</span><br><span class="line">    <span class="keyword">if</span>(sx==tx&amp;&amp;sy==ty)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> xx=sx+f[i][<span class="number">0</span>],yy=sy+f[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(xx&gt;=<span class="number">1</span>&amp;&amp;xx&lt;=n&amp;&amp;yy&gt;=<span class="number">1</span>&amp;&amp;yy&lt;=m&amp;&amp;a[xx][yy]==<span class="number">0</span>)&#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(a[tx][ty]==<span class="number">-1</span>)&#123;</span><br><span class="line">        k=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    a[sx][sy]=a[tx][ty]=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i][j]==<span class="number">0</span>)&#123;</span><br><span class="line">                cnt++;</span><br><span class="line">                <span class="built_in">dfs</span>(i,j);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(a[sx][sy]!=a[tx][ty])&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(k==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> xx=tx+f[i][<span class="number">0</span>],yy=ty+f[i][<span class="number">1</span>];</span><br><span class="line">                <span class="keyword">if</span>(xx&gt;=<span class="number">1</span>&amp;&amp;xx&lt;=n&amp;&amp;yy&gt;=<span class="number">1</span>&amp;&amp;yy&lt;=m&amp;&amp;a[xx][yy]!=<span class="number">-1</span>)&#123;</span><br><span class="line">                    tmp++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(tmp&gt;<span class="number">1</span>)&#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="e-codeforces-545c-woodcutters">E CodeForces 545C Woodcutters</h2>
<p>宽度为3的dp。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1e8</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">100020</span>][<span class="number">4</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,h;</span><br><span class="line">&#125;e[<span class="number">100020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;e[i].x,&amp;e[i].h);</span><br><span class="line">    &#125;</span><br><span class="line">    e[<span class="number">0</span>].x=<span class="number">-2e9</span><span class="number">-10</span>;</span><br><span class="line">    e[<span class="number">0</span>].h=<span class="number">0</span>;</span><br><span class="line">    e[n+<span class="number">1</span>].x=<span class="number">2e9</span>+<span class="number">10</span>;</span><br><span class="line">    e[n+<span class="number">1</span>].h=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        f[i][<span class="number">0</span>]=<span class="built_in">max</span>(f[i<span class="number">-1</span>][<span class="number">0</span>],<span class="built_in">max</span>(f[i<span class="number">-1</span>][<span class="number">1</span>],f[i<span class="number">-1</span>][<span class="number">2</span>]));</span><br><span class="line">        <span class="keyword">if</span>(e[i].x-e[i].h&gt;e[i<span class="number">-1</span>].x+e[i<span class="number">-1</span>].h)&#123;</span><br><span class="line">            f[i][<span class="number">1</span>]=f[i][<span class="number">0</span>]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(e[i].x-e[i].h&gt;e[i<span class="number">-1</span>].x)&#123;</span><br><span class="line">            f[i][<span class="number">1</span>]=<span class="built_in">max</span>(f[i][<span class="number">2</span>],<span class="built_in">max</span>(f[i<span class="number">-1</span>][<span class="number">0</span>],f[i<span class="number">-1</span>][<span class="number">1</span>])+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            f[i][<span class="number">1</span>]=f[i][<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(e[i].x+e[i].h&lt;e[i+<span class="number">1</span>].x)&#123;</span><br><span class="line">            f[i][<span class="number">2</span>]=f[i][<span class="number">0</span>]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,<span class="built_in">max</span>(f[n][<span class="number">0</span>],<span class="built_in">max</span>(f[n][<span class="number">1</span>],f[n][<span class="number">2</span>])));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="f-codeforces-1230a-dawid-and-bags-of-candies">F CodeForces 1230A Dawid and Bags of Candies</h2>
<p>之前组队打过，当时没注意1，3个也行，wa了好久。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> sum, tot;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        sum += a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (a[<span class="number">0</span>] + a[<span class="number">1</span>] == a[<span class="number">2</span>] + a[<span class="number">3</span>] || a[<span class="number">0</span>] + a[<span class="number">2</span>] == a[<span class="number">1</span>] + a[<span class="number">3</span>] || a[<span class="number">0</span>] + a[<span class="number">3</span>] == a[<span class="number">1</span>] + a[<span class="number">2</span>] ||</span><br><span class="line">        a[<span class="number">0</span>] == a[<span class="number">1</span>] + a[<span class="number">2</span>] + a[<span class="number">3</span>] || a[<span class="number">1</span>] == a[<span class="number">0</span>] + a[<span class="number">2</span>] + a[<span class="number">3</span>] || a[<span class="number">2</span>] == a[<span class="number">0</span>] + a[<span class="number">1</span>] + a[<span class="number">3</span>] ||</span><br><span class="line">        a[<span class="number">3</span>] == a[<span class="number">0</span>] + a[<span class="number">1</span>] + a[<span class="number">2</span>]) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="g-codeforces-1230b-ania-and-minimizing">G CodeForces 1230B Ania and Minimizing</h2>
<p>贪心。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(arr) memset(arr,0,sizeof(arr))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a, ll b)</span> </span>&#123; <span class="keyword">return</span> b == <span class="number">0</span> ? a : <span class="built_in">gcd</span>(b, a % b); &#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll data = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) data = data * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>, ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e5</span> + <span class="number">10</span>;</span><br><span class="line">ll n, k;</span><br><span class="line">string s;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    cin &gt;&gt; s;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">0</span>) cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">1</span>) cout &lt;&lt; <span class="string">&#x27;0&#x27;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (s[<span class="number">0</span>] != <span class="string">&#x27;1&#x27;</span>) s[<span class="number">0</span>] = <span class="string">&#x27;1&#x27;</span>, --k;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; s.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (k == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (s[i] != <span class="string">&#x27;0&#x27;</span>) &#123;</span><br><span class="line">                s[i] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">                --k;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="h-codeforces-1228b-filling-the-grid">H CodeForces 1228B Filling the Grid</h2>
<p>一开始以为那个是数量...</p>
<p>如果匹配，剩下的2的个数幂。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1e8</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> h,w;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1020</span>][<span class="number">1020</span>];</span><br><span class="line"><span class="keyword">int</span> x,cnt;</span><br><span class="line"><span class="function">ll <span class="title">lowspeed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;</span><br><span class="line">    ll cur=a,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans+cur)%p;</span><br><span class="line">        cur=(cur+cur)%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">speed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;</span><br><span class="line">    ll cur=a,ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=<span class="built_in">lowspeed</span>(ans,cur,p)%p;</span><br><span class="line">        cur=<span class="built_in">lowspeed</span>(cur,cur,p)%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(a,<span class="number">-1</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(a));</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;h,&amp;w);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=h;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=x;j++)&#123;</span><br><span class="line">            a[i][j]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a[i][x+<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=w;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=x;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j][i]==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            a[j][i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a[x+<span class="number">1</span>][i]==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a[x+<span class="number">1</span>][i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=h;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=w;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i][j]==<span class="number">-1</span>) cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ans=<span class="built_in">speed</span>(<span class="number">2</span>,cnt,mod);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="i-codeforces-1228c-primes-and-multiplication">I CodeForces 1228C Primes and Multiplication</h2>
<p>题不难，就是麻烦，算就行。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1e8</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">ll <span class="title">lowspeed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;</span><br><span class="line">    ll cur=a,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans+cur)%p;</span><br><span class="line">        cur=(cur+cur)%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">speed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;</span><br><span class="line">    ll cur=a,ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=<span class="built_in">lowspeed</span>(ans,cur,p)%p;</span><br><span class="line">        cur=<span class="built_in">lowspeed</span>(cur,cur,p)%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">4e4</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//∞£ Ω…∏∑®</span></span><br><span class="line">    <span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">    <span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">                ipr[j]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            pri[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ll x,n,ans=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> inx[<span class="number">40020</span>],ct=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">prime</span>();</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;x&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt&amp;&amp;x!=<span class="number">1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x%pri[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            inx[++ct]=pri[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(x%pri[i]==<span class="number">0</span>)&#123;</span><br><span class="line">            x/=pri[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x!=<span class="number">1</span>)&#123;</span><br><span class="line">        inx[++ct]=x;</span><br><span class="line">    &#125;</span><br><span class="line">    ll tmp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ct;i++)&#123;</span><br><span class="line">        tmp=n;</span><br><span class="line">        <span class="keyword">while</span>(tmp)&#123;</span><br><span class="line">            tmp/=inx[i];</span><br><span class="line">            ans=(ans*<span class="built_in">speed</span>(inx[i],tmp,mod))%mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="j-codeforces-1210b-marcin-and-training-camp">J CodeForces 1210B Marcin and Training Camp</h2>
<p>反向拓扑，用链表mle，用short的邻接矩阵存的。后来才知道有简单结论。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1e8</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> ag[<span class="number">7020</span>];</span><br><span class="line"><span class="keyword">short</span> ae[<span class="number">7020</span>][<span class="number">7020</span>];</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> val[<span class="number">7020</span>];</span><br><span class="line">ll ski[<span class="number">7020</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">7020</span>];</span><br><span class="line"><span class="keyword">int</span> du[<span class="number">7020</span>];</span><br><span class="line"><span class="keyword">int</span> s;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur)</span></span>&#123;</span><br><span class="line">    <span class="comment">//printf(&quot;%d\n&quot;,cur);</span></span><br><span class="line">    s--;</span><br><span class="line">    f[cur]=<span class="literal">true</span>;</span><br><span class="line">    ans-=val[cur];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ae[cur][i])&#123;</span><br><span class="line">            du[i]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!f[i]&amp;&amp;du[i]==s)&#123;</span><br><span class="line">            <span class="built_in">dfs</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    s=n<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;ski[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;val[i];</span><br><span class="line">        ans+=val[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">short</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">short</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            ll tmp=ski[i]^ski[j];</span><br><span class="line">            <span class="keyword">if</span>(tmp&amp;ski[i])&#123;</span><br><span class="line">                <span class="comment">//e[++cnt]=(E)&#123;i,j,g[i]&#125;;g[i]=cnt;</span></span><br><span class="line">                <span class="comment">//ae[++cnt]=(E)&#123;i,ag[j]&#125;;ag[j]=cnt;</span></span><br><span class="line">                ae[j][i]=<span class="number">1</span>;</span><br><span class="line">                <span class="comment">//printf(&quot;%d %d\n&quot;,i,j);</span></span><br><span class="line">                du[i]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(tmp&amp;ski[j])&#123;</span><br><span class="line">                <span class="comment">//e[++cnt]=(E)&#123;j,i,g[j]&#125;;g[j]=cnt;</span></span><br><span class="line">                <span class="comment">//ae[++cnt]=(E)&#123;j,ag[i]&#125;;ag[i]=cnt;</span></span><br><span class="line">                ae[i][j]=<span class="number">1</span>;</span><br><span class="line">                <span class="comment">//printf(&quot;%d %d\n&quot;,j,i);</span></span><br><span class="line">                du[j]++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot;???&quot;&lt;&lt;endl;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot;???&quot;&lt;&lt;endl;</span></span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot;!!!&quot;&lt;&lt;du[5]&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">bool</span> fg;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        fg=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;&quot;du&quot;&lt;&lt;du[i]&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">if</span>(du[i]==s&amp;&amp;!f[i])&#123;</span><br><span class="line">                fg=<span class="literal">true</span>;</span><br><span class="line">                <span class="built_in">dfs</span>(i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">while</span>(fg);</span><br><span class="line">    <span class="comment">//cout&lt;&lt;s&lt;&lt;endl;</span></span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="k-codeforces-1157d-n-problems-during-k-days">K CodeForces 1157D N Problems During K Days</h2>
<h2 id="l-codeforces-1157e-minimum-array">L CodeForces 1157E Minimum Array</h2>
<p>multiset，找不到就找后面一个，后面没了就找第一个。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">5</span>][<span class="number">5</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1e8</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">multiset&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">200020</span>];</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">200020</span>];</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        q.<span class="built_in">insert</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> tmp=n-a[i];</span><br><span class="line">        <span class="keyword">auto</span> cur=q.<span class="built_in">lower_bound</span>(tmp);</span><br><span class="line">        <span class="keyword">if</span>(cur!=q.<span class="built_in">end</span>()&amp;&amp;*cur==tmp)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;0 &quot;</span>;</span><br><span class="line">            q.<span class="built_in">erase</span>(cur);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(cur==q.<span class="built_in">end</span>())&#123;</span><br><span class="line">                cout&lt;&lt;(a[i]+*q.<span class="built_in">begin</span>())%n&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                q.<span class="built_in">erase</span>(q.<span class="built_in">begin</span>());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                cout&lt;&lt;(a[i]+*cur)%n&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">                q.<span class="built_in">erase</span>(cur);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="m-codeforces-633h-fibonacci-ish-ii">M CodeForces 633H Fibonacci-ish II</h2>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>ACM比赛/总结</category>
      </categories>
  </entry>
  <entry>
    <title>新博客正式启用</title>
    <url>/posts/27000/</url>
    <content><![CDATA[<p>新博客正式启用！</p>
<p>这几天在搞github pages上的博客，之前也搭过，但功能不是很满意，就没有继续用。换了NexT主题后发现可以实现的功能还是很多的，也把 <span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc3otd2NjLw==">博客园上的博客<i class="fa fa-external-link-alt"></i></span> 迁移了过来，尽量修改了格式，有些格式不对的可以回去看。</p>
<p>以后可能会发一些技术类的和论文阅读类的，偶尔也会继续做题发题解。</p>
<p>感谢阅读~</p>
]]></content>
      <categories>
        <category>hello-world</category>
      </categories>
  </entry>
  <entry>
    <title>test</title>
    <url>/posts/63534/</url>
    <content><![CDATA[<h2 id="problem"><a href="">Problem</a></h2>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p><img src="2021-11-30-test/希灵帝国2.jpg" /></p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span></span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>未分类</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1006 最长公共子序列Lcs</title>
    <url>/posts/56788/</url>
    <content><![CDATA[<p>给出两个字符串A B，求A与B的最长公共子序列（子序列不要求是连续的）。</p>
<p>比如两个串为：</p>
<p>abcicba</p>
<p>abdkscab</p>
<p>ab是两个串的子序列，abc也是，abca也是，其中abca是这两个字符串最长的子序列。</p>
<h1 id="输入">输入</h1>
<pre><code>第1行：字符串A
第2行：字符串B
(A,B的长度 &lt;= 1000)</code></pre>
<h1 id="输出">输出</h1>
<pre><code>输出最长的子序列，如果有多个，随意输出1个。</code></pre>
<span id="more"></span>
<h1 id="输入样例">输入样例</h1>
<pre><code>abcicba
abdkscab</code></pre>
<h1 id="输出样例">输出样例</h1>
<pre><code>abca  
  


```
 1 #include&lt;cstdio&gt;
 2 #include&lt;iostream&gt;
 3 #include&lt;cstring&gt;
 4 #include&lt;algorithm&gt;
 5 using namespace std;
 6 char a[1020],b[1020];
 7 int f[1020][1020];
 8 int ans[1020][1020];
 9 void dfs(int x,int y)&#123;
10     if(x==0||y==0) return;
11     if(ans[x][y]==0)&#123;
12         dfs(x-1,y-1);
13         cout&lt;&lt;b[y];
14     &#125;
15     else if(ans[x][y]==1)&#123;
16         dfs(x-1,y);
17     &#125;
18     else&#123;
19         dfs(x,y-1);
20     &#125;
21 &#125;
22 int main()&#123;
23     cin&gt;&gt;a&gt;&gt;b;
24     int l1=strlen(a),l2=strlen(b);
25     for(int i=l1;i&gt;=1;i--) a[i]=a[i-1];
26     for(int i=l2;i&gt;=1;i--) b[i]=b[i-1];
27     for(int i=1;i&lt;=l1;i++)&#123;
28         for(int j=1;j&lt;=l2;j++)&#123;
29             if(a[i]==b[j])&#123;
30                 f[i][j]=f[i-1][j-1]+1;
31                 ans[i][j]=0;
32             &#125;
33             else if(f[i-1][j]&gt;=f[i][j-1])&#123;
34                 f[i][j]=f[i-1][j];
35                 ans[i][j]=1;
36             &#125;
37             else&#123;
38                 f[i][j]=f[i][j-1];
39                 ans[i][j]=-1;
40             &#125;
41         &#125;
42     &#125;
43     //cout&lt;&lt;f[l1][l2];
44     dfs(l1,l2);
45     return 0;
46 &#125;```</code></pre>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1020 逆序排列</title>
    <url>/posts/22856/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>在一个排列中，如果一对数的前后位置与大小顺序相反，即前面的数大于后面的数，那么它们就称为一个逆序。一个排列中逆序的总数就称为这个排列的逆序数。</p>
<p>如2 4 3 1中，2 1，4 3，4 1，3 1是逆序，逆序数是4。</p>
<p>1-n的全排列中，逆序数最小为0（正序），最大为n*(n-1) / 2（倒序）</p>
<p>给出2个数n和k，求1-n的全排列中，逆序数为k的排列有多少种？</p>
<p>例如：n = 4 k = 3。</p>
<p>1 2 3 4的排列中逆序为3的共有6个，分别是：</p>
<p>1 4 3 2</p>
<p>2 3 4 1</p>
<p>2 4 1 3</p>
<p>3 1 4 2</p>
<p>3 2 1 4</p>
<p>4 1 2 3</p>
<p>由于逆序排列的数量非常大，因此只需计算并输出该数 Mod 10^9 + 7的结果就可以了。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>递推公式为f(n,k)=f(n,k−1)+f(n−1,k)−f(n−1,k−n)。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> max(x,y) ((x)&gt;(y)?(x):(y))</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> T,nn,kk;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> n,k;</span><br><span class="line">&#125;e[<span class="number">10020</span>];</span><br><span class="line"><span class="keyword">int</span> mxn;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1010</span>][<span class="number">20020</span>];</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> mx[<span class="number">1010</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x&gt;=mod?x%mod:x&gt;=<span class="number">0</span>?x:<span class="built_in">mo</span>(x+mod);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;e[i].n,&amp;e[i].k);</span><br><span class="line">		mxn=<span class="built_in">max</span>(mxn,e[i].n);</span><br><span class="line">		mx[e[i].n]=<span class="built_in">max</span>(mx[e[i].n],e[i].k);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=mxn;i++)&#123;</span><br><span class="line">		f[i][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=mxn;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">		<span class="keyword">if</span>(mx[i]&gt;mx[i<span class="number">-1</span>]) mx[i<span class="number">-1</span>]=mx[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=mxn;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=mx[i];j++)&#123;</span><br><span class="line">			<span class="keyword">int</span> t=j-i&gt;=<span class="number">0</span>?f[i<span class="number">-1</span>][j-i]:<span class="number">0</span>;</span><br><span class="line">			f[i][j]=<span class="built_in">mo</span>(f[i][j<span class="number">-1</span>]+f[i<span class="number">-1</span>][j]-t);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;i++)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,f[e[i].n][e[i].k]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1021 石子归并</title>
    <url>/posts/57514/</url>
    <content><![CDATA[<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffffffffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a, x) memset(a,x,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Pii;</span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;ll, ll&gt; Pll;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a, ll b,ll p)</span> </span>&#123; ll res = <span class="number">1</span>; <span class="keyword">for</span> (; b &gt; <span class="number">0</span>; b &gt;&gt;= <span class="number">1</span>) &#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * a % p; &#125; <span class="keyword">return</span> res; &#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll p, ll q)</span> </span>&#123; <span class="keyword">return</span> q == <span class="number">0</span> ? p : <span class="built_in">gcd</span>(q, p % q); &#125;</span><br><span class="line">ll _abs(ll x)&#123;<span class="keyword">return</span> x &lt; <span class="number">0</span> ? -x : x;&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">120</span>],sum[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">120</span>][<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            dp[i][j]=<span class="number">10000000</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        dp[i][i]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        sum[i]=sum[i<span class="number">-1</span>]+a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>;len&lt;=n;len++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i+len<span class="number">-1</span>&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=i;k&lt;=j;k++)&#123;</span><br><span class="line">                dp[i][j]=<span class="built_in">min</span>(dp[i][k]+dp[k+<span class="number">1</span>][j]+sum[j]-sum[i<span class="number">-1</span>],dp[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;dp[<span class="number">1</span>][n]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>51 Nod1029 大数除法</title>
    <url>/posts/53233/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>给出2个大整数A,B，计算A / B和A Mod B的结果。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">a=<span class="built_in"><span class="keyword">int</span></span>(<span class="built_in">input</span>())</span><br><span class="line">b=<span class="built_in"><span class="keyword">int</span></span>(<span class="built_in">input</span>())</span><br><span class="line">c=a<span class="comment">//b</span></span><br><span class="line"><span class="built_in">print</span>(c)</span><br><span class="line"><span class="built_in">print</span>(a-c*b)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>51 Nod1050 循环数组最大子段和</title>
    <url>/posts/64211/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>N个整数组成的循环序列a[1],a[2],a[3],…,a[n]，求该序列如a[i]+a[i+1]+…+a[j]的连续的子段和的最大值（循环序列是指n个数围成一个圈，因此需要考虑a[n-1],a[n],a[1],a[2]这样的序列）。当所给的整数均为负数时和为0。 例如：-2,11,-4,13,-5,-2，和最大的子段为：11,-4,13。和为20。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>最大字段和最大，或者去掉中间某个最小字段和剩下的最大。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll a[<span class="number">50020</span>];</span><br><span class="line">ll fmn[<span class="number">50020</span>],fmx[<span class="number">50020</span>],mn=<span class="number">0</span>,mx=<span class="number">0</span>,sum;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        sum+=a[i];</span><br><span class="line">        fmx[i]=<span class="built_in">max</span>(a[i],fmx[i<span class="number">-1</span>]+a[i]);</span><br><span class="line">        mx=<span class="built_in">max</span>(mx,fmx[i]);</span><br><span class="line">        fmn[i]=<span class="built_in">min</span>(a[i],fmn[i<span class="number">-1</span>]+a[i]);</span><br><span class="line">        mn=<span class="built_in">min</span>(mn,fmn[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">max</span>(mx,sum-mn);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>51 Nod1051 最大子矩阵和</title>
    <url>/posts/17548/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>一个M*N的矩阵，找到此矩阵的一个子矩阵，并且这个子矩阵的元素的和是最大的，输出这个最大的值。</p>
<p>例如：3*3的矩阵：</p>
<p>-1 3 -1</p>
<p>2 -1 3</p>
<p>-3 1 2</p>
<p>和最大的子矩阵是：</p>
<p>3 -1</p>
<p>-1 3</p>
<p>1 2</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>枚举上下边界，竖着加起来，横向算最大字段和。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="comment">//#include&lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="comment">//#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line">ll a[<span class="number">520</span>][<span class="number">520</span>];</span><br><span class="line">ll f[<span class="number">520</span>];</span><br><span class="line">ll sum[<span class="number">520</span>][<span class="number">520</span>];</span><br><span class="line">ll mx=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i][j]);</span><br><span class="line">            sum[i][j]=sum[i<span class="number">-1</span>][j]+a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">1</span>;k&lt;=m;k++)&#123;</span><br><span class="line">                f[k]=<span class="built_in">max</span>(<span class="number">0LL</span>,f[k<span class="number">-1</span>]+sum[j][k]-sum[i<span class="number">-1</span>][k]);</span><br><span class="line">                mx=<span class="built_in">max</span>(mx,f[k]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,mx);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1065 最小正子段和</title>
    <url>/posts/37901/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>N个整数组成的序列a[1],a[2],a[3],…,a[n]，从中选出一个子段（a[i],a[i+1],…a[j]），使这个子段的和&gt;0，并且这个和是所有和&gt;0的子序列中最小的。</p>
<p>例如：4，-1，5，-2，-1，2，6，-2。-1，5，-2，-1，序列和为1，是最小的。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>求前缀和，用map存每个数出现的最小最大坐标，去重，相邻两个能组成的话，差取最小，注意加入0。</p>
<blockquote>
<p>解释一下为什么只需检查相邻2个数就可以，设ABC是排序后的结果，如果A同B不能组成序列，而A同C可以组成序列，那么B同C也可以组成序列，并且BC会是一个更优的解。</p>
</blockquote>
<p>%一下远古巨佬</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353LL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> data=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) ch=<span class="built_in">getchar</span>();<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) data=data*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=<span class="built_in">getchar</span>();<span class="keyword">return</span> data;&#125;</span><br><span class="line"><span class="function">ll <span class="title">lowspeed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;ll cur=a,ans=<span class="number">0</span>;<span class="keyword">while</span>(b)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans+cur)%p;cur=(cur+cur)%p;b&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> ans%p;&#125;</span><br><span class="line"><span class="function">ll <span class="title">speed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;ll cur=a,ans=<span class="number">1</span>;<span class="keyword">while</span>(b)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=<span class="built_in">lowspeed</span>(ans,cur,p)%p;cur=<span class="built_in">lowspeed</span>(cur,cur,p)%p;b&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> ans%p;&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll a[<span class="number">50020</span>];</span><br><span class="line">ll ans=<span class="number">1e15</span>;</span><br><span class="line">map&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;mx;</span><br><span class="line">map&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;mn;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        a[i]+=a[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!mn[a[i]])&#123;</span><br><span class="line">            mn[a[i]]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        mx[a[i]]=i;</span><br><span class="line">    &#125;<span class="built_in">sort</span>(a,a+<span class="number">1</span>+n);</span><br><span class="line">    ll m=<span class="built_in">unique</span>(a,a+<span class="number">1</span>+n)-(a+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;m;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(mn[a[i]]&lt;mx[a[i+<span class="number">1</span>]])&#123;</span><br><span class="line">            ans=<span class="built_in">min</span>(ans,a[i+<span class="number">1</span>]-a[i]);</span><br><span class="line">            <span class="comment">//cout&lt;&lt;a[i]&lt;&lt;&#x27; &#x27;&lt;&lt;a[i+1]&lt;&lt;endl;</span></span><br><span class="line">            <span class="comment">//cout&lt;&lt;mn[a[i]]&lt;&lt;&#x27; &#x27;&lt;&lt;mx[a[i+1]]&lt;&lt;endl;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans==<span class="number">1e15</span>)&#123;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;0&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1067 Bash游戏 V2</title>
    <url>/posts/24116/</url>
    <content><![CDATA[<h2 id="题意">题意</h2>
<p>有一堆石子共有N个。A B两个人轮流拿，A先拿。每次只能拿1，3，4颗，拿到最后1颗石子的人获胜。假设A B都非常聪明，拿石子的过程中不会出现失误。给出N，问最后谁能赢得比赛。</p>
<h2 id="思路">思路</h2>
<p>博弈论，从零开始推状态，方法详见<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc3otd2NjL3AvMTEwNzE5MTQuaHRtbA==">欧几里得游戏(博弈论启蒙)<i class="fa fa-external-link-alt"></i></span>。 最后发现%7为0和2的数是必败态，其它是必胜态。</p>
<span id="more"></span>
<h2 id="代码">代码</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll T,n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="keyword">if</span>(n%<span class="number">7</span>==<span class="number">2</span>||n%<span class="number">7</span>==<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;B\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;A\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
      </tags>
  </entry>
  <entry>
    <title>51Nod 1068 Bash游戏 V3</title>
    <url>/posts/39610/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有一堆石子共有N个。A B两个人轮流拿，A先拿。每次拿的数量只能是2的正整数次幂，比如(1,2,4,8,16....)，拿到最后1颗石子的人获胜。假设A B都非常聪明，拿石子的过程中不会出现失误。给出N，问最后谁能赢得比赛。</p>
<p>例如N = 3。A只能拿1颗或2颗，所以B可以拿到最后1颗石子。（输入的N可能为大数）</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>打表发现3的倍数时为必败点，B赢。如果不是3的倍数可以-1或-2转移到3的倍数，必胜，考虑有没有可能后面出现一个3的倍数可以通过减2的幂转移到前面必败点，即3的更小倍数，化为表达式(3x-2^t)%3==0，很明显不能，那3的倍数就是必败点，其他是必胜点。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffffffffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a, x) memset(a,x,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Pii;</span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;ll, ll&gt; Pll;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a, ll b,ll p)</span> </span>&#123; ll res = <span class="number">1</span>; <span class="keyword">for</span> (; b &gt; <span class="number">0</span>; b &gt;&gt;= <span class="number">1</span>) &#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * a % p; &#125; <span class="keyword">return</span> res; &#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll p, ll q)</span> </span>&#123; <span class="keyword">return</span> q == <span class="number">0</span> ? p : <span class="built_in">gcd</span>(q, p % q); &#125;</span><br><span class="line">ll _abs(ll x)&#123;<span class="keyword">return</span> x &lt; <span class="number">0</span> ? -x : x;&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        ll cur=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            cur*=<span class="number">10</span>;</span><br><span class="line">            cur+=s[i]-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">            cur%=<span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cur==<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;B&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;A&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
      </tags>
  </entry>
  <entry>
    <title>51Nod 1070 Bash游戏 V4</title>
    <url>/posts/52786/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有一堆石子共有N个。A B两个人轮流拿，A先拿。每次拿的数量最少1个，最多不超过对手上一次拿的数量的2倍（A第1次拿时要求不能全拿走）。拿到最后1颗石子的人获胜。假设A B都非常聪明，拿石子的过程中不会出现失误。给出N，问最后谁能赢得比赛。</p>
<p>例如N = 3。A只能拿1颗或2颗，所以B可以拿到最后1颗石子。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>打表写了半天，等我看明白怎么证回来补。 ## Code <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffffffffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a, x) memset(a,x,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Pii;</span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;ll, ll&gt; Pll;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a, ll b,ll p)</span> </span>&#123; ll res = <span class="number">1</span>; <span class="keyword">for</span> (; b &gt; <span class="number">0</span>; b &gt;&gt;= <span class="number">1</span>) &#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * a % p; &#125; <span class="keyword">return</span> res; &#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll p, ll q)</span> </span>&#123; <span class="keyword">return</span> q == <span class="number">0</span> ? p : <span class="built_in">gcd</span>(q, p % q); &#125;</span><br><span class="line">ll _abs(ll x)&#123;<span class="keyword">return</span> x &lt; <span class="number">0</span> ? -x : x;&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> T,n;</span><br><span class="line"><span class="keyword">bool</span> fg;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur,<span class="keyword">int</span> cnt)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cur==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(cur==<span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(cur==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">bool</span> fg2=fg;</span><br><span class="line">    fg=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="built_in">min</span>(<span class="number">2</span>*cnt,cur);i++)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(fg2&amp;&amp;i==cur) <span class="keyword">break</span>;<span class="comment">//cout&lt;&lt;&quot;*&quot;&lt;&lt;i&lt;&lt;&quot;*&quot;&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="built_in">dfs</span>(cur - i, i)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">ll s[<span class="number">120</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    <span class="comment">/*for(int i=1;i&lt;=100;i++)&#123;</span></span><br><span class="line"><span class="comment">        //if(i==3)cout&lt;&lt;&quot;!!!&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">        fg=true;</span></span><br><span class="line"><span class="comment">        if(i!=2) cout&lt;&lt;i&lt;&lt;&quot;:&quot;&lt;&lt;dfs(i,9999)&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">        else&#123;</span></span><br><span class="line"><span class="comment">            cout&lt;&lt;&quot;2:0\n&quot;;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        //if(i==3) cout&lt;&lt;&quot;!!!&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">5</span>;i&lt;=<span class="number">100</span>&amp;&amp;s[i<span class="number">-1</span>]&lt;<span class="number">10000000000</span>;i++)&#123;</span><br><span class="line">        s[i]=s[i<span class="number">-1</span>]+s[i<span class="number">-2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="keyword">bool</span> k=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">100</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==n)&#123;</span><br><span class="line">                k=<span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(k)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;B\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;A\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
      </tags>
  </entry>
  <entry>
    <title>51Nod 1072 威佐夫游戏</title>
    <url>/posts/46915/</url>
    <content><![CDATA[<h2 id="题意">题意</h2>
<p>有2堆石子。A B两个人轮流拿，A先拿。每次可以从一堆中取任意个或从2堆中取相同数量的石子，但不可不取。拿到最后1颗石子的人获胜。假设A B都非常聪明，拿石子的过程中不会出现失误。给出2堆石子的数量，问最后谁能赢得比赛。</p>
<span id="more"></span>
<h2 id="思路">思路</h2>
<p>枚举小数字的a,b，发现必败态有如下规律：</p>
<ul>
<li>每组必败态两数之差为1，2，3...</li>
<li>必败态任意数字不重复</li>
</ul>
<p>于是可以递推(1,2),(3,5)(4,7),(6,10)...</p>
<p>暴力可做，另有公式较小数a==(b-a)*1.618时为必败态。</p>
<p>1.618具体为(sqrt(5)+1)/2，V2必须用这个公式和高精，未做，日后再做。</p>
<h2 id="代码">代码</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll T,a,b;</span><br><span class="line"><span class="keyword">int</span> c[<span class="number">5000020</span>];</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">50000200</span>];</span><br><span class="line"><span class="function">ll <span class="title">abs</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&gt;<span class="number">0</span>?x:-x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(f,<span class="literal">false</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(f));</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">5000000</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!f[i]&amp;&amp;!f[i+cnt])&#123;</span><br><span class="line">            c[i]=i+cnt;</span><br><span class="line">            f[i]=f[i+cnt]=<span class="literal">true</span>;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">fun</span>();</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">if</span>(b&lt;a) <span class="built_in">swap</span>(a,b);</span><br><span class="line">        <span class="keyword">if</span>(c[a]==b) cout&lt;&lt;<span class="string">&quot;B\n&quot;</span>;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;A\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
      </tags>
  </entry>
  <entry>
    <title>51Nod 1073 约瑟夫环</title>
    <url>/posts/60741/</url>
    <content><![CDATA[<h2 id="题意">题意</h2>
<p>编号1~N，每数K个出局，范围1e6</p>
<span id="more"></span>
<h2 id="代码">代码</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll n,k;</span><br><span class="line">ll cur;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    cur=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cur=(cur+k)%i;</span><br><span class="line">    &#125;</span><br><span class="line">    cur++;</span><br><span class="line">    cout&lt;&lt;cur&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1074 约瑟夫环 V2</title>
    <url>/posts/2897/</url>
    <content><![CDATA[<h2 id="题意">题意</h2>
<p>约瑟夫环，N-1e18，K-1000</p>
<h2 id="思路">思路</h2>
<p>由于K远小于N，后面i大了之后某些时候不用取模，可以加速。</p>
<span id="more"></span>
<h2 id="代码">代码</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll n,k;</span><br><span class="line">ll cur,t;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    cur=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">2</span>;i&lt;=n;i+=t+<span class="number">1</span>)&#123;</span><br><span class="line">        t=(i-cur)/k<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">0</span>) t=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(i+t+<span class="number">1</span>&gt;n) t=n-i;</span><br><span class="line">        cur=(cur+(t+<span class="number">1</span>)*k)%(i+t);</span><br><span class="line">    &#125; </span><br><span class="line">    cur++;</span><br><span class="line">    cout&lt;&lt;cur&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1089 最长回文子串 V2（Manacher算法）</title>
    <url>/posts/1160/</url>
    <content><![CDATA[<p>俗称马拉车算法-&gt;_-&gt;</p>
<p>处理最长回文字串复杂度O(n)</p>
<p>这里菜鸡不会证，简单说一下思路。</p>
<p>由于回文串有奇有偶，所以将串之间和两边加上'#'，为了防止后面某个地方超边界，新串0位置加上$。这样每个回文子串为#a#b#a#形式，必定奇数个，且原子串长度为新字串半径减一，求这个半径p[i]。（即p[i]是以i为中心的最长回文字串的半径）</p>
<p>i从1到n，过程中维护一个id点(id&lt;i，i拉着id走，马拉车)，它是某个回文子串的中心，这个字串右边界是当前最大的。（p[i]是半径，故i+p[i]为边界）</p>
<p>那么当右边界比i还大时，就可以根据对称性，找到i关于id的对称点j=2*id-i，来优化找字串的过程。怎么优化呢？在id管辖范围内，p[i]和p[j]情况是相同的。由于超出id右边界的的地方不符合对称性，因此p[i]=p[j]当且仅当p[j]小于等于j-(id-p[id])（即j串的左边界不超出id串的左边界），否则只能直接到id右边界，p[i]=mx-i，之后的手动算。</p>
<p>如果id右边界太小，不能做优化，也得手动算。</p>
<p>以下代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">100020</span>],sn[<span class="number">200020</span>];</span><br><span class="line"><span class="keyword">int</span> p[<span class="number">200020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">strlen</span>(s);</span><br><span class="line">    sn[<span class="number">0</span>]=<span class="string">&#x27;$&#x27;</span>;sn[<span class="number">1</span>]=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        sn[j++]=s[i];</span><br><span class="line">        sn[j++]=<span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sn[j]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Manacher</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="built_in">init</span>();</span><br><span class="line">    <span class="keyword">int</span> mx_len=<span class="number">-1</span>,id,mx=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i&lt;mx)&#123;</span><br><span class="line">        p[i]=<span class="built_in">min</span>(p[<span class="number">2</span>*id-i],mx-i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        p[i]=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(sn[i-p[i]]==sn[i+p[i]]) p[i]++;</span><br><span class="line">        <span class="keyword">if</span>(p[i]+i&gt;mx)&#123;</span><br><span class="line">            id=i;</span><br><span class="line">            mx=p[i]+i;</span><br><span class="line">        &#125;</span><br><span class="line">        mx_len=<span class="built_in">max</span>(mx_len,p[i]<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> mx_len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">Manacher</span>();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>字符串</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1094 和为k的连续区间</title>
    <url>/posts/52328/</url>
    <content><![CDATA[<h2 id="题目">题目</h2>
<p>一整数数列a1, a2, ... , an（有正有负），以及另一个整数k，求一个区间[i, j]，(1 &lt;= i &lt;= j &lt;= n)，使得a[i] + ... + a[j] = k。</p>
<h2 id="思路">思路</h2>
<p>前缀和+n方查找，1e8如果数据小也是可以过的，毕竟1级题，也可以求前缀和，对前缀和排序，枚举i位置，二分查找j位置。</p>
<span id="more"></span>
<h2 id="代码">代码</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> db double</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll a[<span class="number">10020</span>],sum[<span class="number">10020</span>];</span><br><span class="line">ll n,k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">        sum[i]=sum[i<span class="number">-1</span>]+a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(sum[j]-sum[i<span class="number">-1</span>]==k)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,i,j);</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;No Solution\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1095 Anigram单词</title>
    <url>/posts/23609/</url>
    <content><![CDATA[<h2 id="题目">题目</h2>
<p>一个单词a如果通过交换单词中字母的顺序可以得到另外的单词b，那么定义b是a的Anigram，例如单词army和mary互为Anigram。另：相同的2个单词不算Anigram。现在给定一个字典，输入Q个单词，从给出的字典中找出这些单词的Anigram。</p>
<h2 id="思路">思路</h2>
<p>一个map保存原串出现次数，一个map保存排序串出现次数，减一下</p>
<span id="more"></span>
<h2 id="代码">代码</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> db double</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n,q;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">20</span>],sp[<span class="number">20</span>];</span><br><span class="line">map&lt;string,<span class="keyword">int</span>&gt;mp1;</span><br><span class="line">map&lt;string,<span class="keyword">int</span>&gt;mp2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        <span class="built_in">strcpy</span>(sp,s);</span><br><span class="line">        <span class="built_in">sort</span>(sp,sp+<span class="built_in">strlen</span>(sp));</span><br><span class="line">        mp1[s]++;<span class="comment">//cout&lt;&lt;s&lt;&lt;&#x27;;&#x27;&lt;&lt;mp[s]&lt;&lt;endl;</span></span><br><span class="line">        mp2[sp]++;</span><br><span class="line">    &#125;</span><br><span class="line">    cin&gt;&gt;q;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=q;i++)&#123;</span><br><span class="line">        cin&gt;&gt;s;</span><br><span class="line">        <span class="built_in">strcpy</span>(sp,s);</span><br><span class="line">        <span class="built_in">sort</span>(sp,sp+<span class="built_in">strlen</span>(sp));</span><br><span class="line">        <span class="comment">//cout&lt;&lt;sp&lt;&lt;&#x27;:&#x27;&lt;&lt;mp[sp]&lt;&lt;&#x27; &#x27;&lt;&lt;s&lt;&lt;&#x27;:&#x27;&lt;&lt;mp[s]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">        cout&lt;&lt;mp2[sp]-mp1[s]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>简单题</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1097 拼成最小的数</title>
    <url>/posts/3869/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>设有n个正整数，将它们联接成一排，组成一个最小的多位整数。</p>
<p>例如： n=2时，2个整数32，321连接成的最小整数为：32132， n=4时，4个整数55，31，312, 33 联接成的最小整数为：312313355</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>最优的情况字符串a+b&lt;b+a，排序即可。</p>
<p>设置num(x)为字符串x代表的数字，num(a)<em>10^|b|+num(b) &lt; num(b)</em>10^|a|+num(a) -&gt; num(a)/(10^|a|-1) &lt; num(b)/(10^|b|-1)，排序即可。</p>
<h2 id="code1">Code1</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line">string s[<span class="number">10020</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(string x,string y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x+y&lt;y+x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	io_opt;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;s[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(s+<span class="number">1</span>,s+<span class="number">1</span>+n,cmp);</span><br><span class="line">	string ans=<span class="string">&quot;&quot;</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		ans+=s[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;ans.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(i!=<span class="number">0</span>&amp;&amp;i%<span class="number">1000</span>==<span class="number">0</span>) cout&lt;&lt;endl;</span><br><span class="line">		cout&lt;&lt;ans[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="code2">Code2</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> x,len;</span><br><span class="line">&#125;e[<span class="number">10020</span>];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> t[<span class="number">20</span>]=&#123;<span class="number">1</span>,<span class="number">10</span>,<span class="number">100</span>,<span class="number">1000</span>,<span class="number">10000</span>,<span class="number">100000</span>,<span class="number">1000000</span>,<span class="number">10000000</span>,<span class="number">100000000</span>,<span class="number">1000000000</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> (ld)x.x/(t[x.len]<span class="number">-1</span>)&lt;(ld)y.x/(t[y.len]<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cur=<span class="number">0</span>,tmp[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	io_opt;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;e[i].x;</span><br><span class="line">		e[i].len=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">int</span> xx=e[i].x;</span><br><span class="line">		<span class="keyword">while</span>(xx)&#123;</span><br><span class="line">			e[i].len++;</span><br><span class="line">			xx/=<span class="number">10</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+n,cmp);</span><br><span class="line">	<span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		cur=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span>(e[i].x)&#123;</span><br><span class="line">			tmp[++cur]=e[i].x%<span class="number">10</span>;</span><br><span class="line">			e[i].x/=<span class="number">10</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=cur;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line">			cout&lt;&lt;tmp[j];</span><br><span class="line">			cnt++;</span><br><span class="line">			<span class="keyword">if</span>(cnt%<span class="number">1000</span>==<span class="number">0</span>)&#123;</span><br><span class="line">				cout&lt;&lt;endl;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1103 N的倍数</title>
    <url>/posts/24612/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>一个长度为N的数组A，从A中选出若干个数，使得这些数的和是N的倍数。</p>
<p>例如：N = 8，数组A包括：2 5 6 3 18 7 11 19，可以选2 6，因为2 + 6 = 8，是8的倍数。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>前缀和取模，相同的都行，注意下标0。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll a[<span class="number">50020</span>];</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; v[<span class="number">50020</span>];</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">50020</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        num[i]=a[i];</span><br><span class="line">        a[i] += a[i - <span class="number">1</span>];</span><br><span class="line">        a[i] %= n;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;a[i]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">    &#125;</span><br><span class="line">     <span class="comment">//cout&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (v[a[i]].<span class="built_in">empty</span>()) &#123;</span><br><span class="line">            v[a[i]].<span class="built_in">push_back</span>(i);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> l = v[a[i]][<span class="number">0</span>], r = i;</span><br><span class="line">            <span class="comment">//cout &lt;&lt; l &lt;&lt; &#x27; &#x27; &lt;&lt; r &lt;&lt; endl;</span></span><br><span class="line">            cout&lt;&lt;r-l&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = l+<span class="number">1</span>; j &lt;= r; j++) &#123;</span><br><span class="line">                cout &lt;&lt; num[j] &lt;&lt; endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>简单题</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1105 第K大的数</title>
    <url>/posts/56095/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>数组A和数组B，里面都有n个整数。</p>
<p>数组C共有n^2个整数，分别是：</p>
<p>A[0] * B[0],A[0] * B[1] ...... A[0] * B[n-1]</p>
<p>A[1] * B[0],A[1] * B[1] ...... A[1] * B[n-1]</p>
<p>......</p>
<p>A[n - 1] * B[0],A[n - 1] * B[1] ...... A[n - 1] * B[n - 1]</p>
<p>是数组A同数组B的组合,求数组C中第K大的数。</p>
<p>例如：</p>
<p>A：1 2 3，B：2 3 4。</p>
<p>A与B组合成的C为</p>
<pre><code>     A[0]  A[1]  A[2]</code></pre>
<p>B[0] 2 3 4</p>
<p>B[1] 4 6 8</p>
<p>B[2] 6 9 12</p>
<p>共9个数。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>一种二分套二分，二分答案，check的时候对每个数二分找更小的，有一些细节需要处理。</p>
<p>仔细考虑发现，找比二分的数小的数，只要扫一遍，另一个指针随时减。省掉一个log</p>
<h2 id="code1">Code1</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">50020</span>;</span><br><span class="line">ll n,k,a[MAXN],b[MAXN];</span><br><span class="line"><span class="function">ll <span class="title">cont</span><span class="params">(<span class="keyword">int</span> cur,ll num)</span></span>&#123;</span><br><span class="line">    ll t=a[cur],ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=n,mid;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(t*b[mid]&lt;=num)&#123;</span><br><span class="line">            l=mid+<span class="number">1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            r=mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        ans+=<span class="built_in">cont</span>(i,x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans&gt;=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    k=n*n-k+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    <span class="built_in">sort</span>(b+<span class="number">1</span>,b+<span class="number">1</span>+n);</span><br><span class="line">    ll l=a[<span class="number">1</span>]*b[<span class="number">1</span>],r=a[n]*b[n],mid,ans;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid))&#123;</span><br><span class="line">            r=mid<span class="number">-1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            l=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="code2">Code2</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="comment">//#include&lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">50020</span>;</span><br><span class="line">ll n,k,a[MAXN],b[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">cont</span><span class="params">(<span class="keyword">int</span> cur,ll num)</span></span>&#123;</span><br><span class="line">    ll t=a[cur],ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=n,mid;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(t*b[mid]&lt;=num)&#123;</span><br><span class="line">            l=mid+<span class="number">1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            r=mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">bool</span> <span class="title">check</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> j=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(a[i]*b[j]&gt;x) j--;</span><br><span class="line">        ans+=j;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans&gt;=k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    k=n*n-k+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;a[i],&amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    std::<span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    std::<span class="built_in">sort</span>(b+<span class="number">1</span>,b+<span class="number">1</span>+n);</span><br><span class="line">    ll l=a[<span class="number">1</span>]*b[<span class="number">1</span>],r=a[n]*b[n],mid,ans=r;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid))&#123;</span><br><span class="line">            r=mid<span class="number">-1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            l=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1109 01组成的N的倍数</title>
    <url>/posts/56907/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>给定一个自然数N，找出一个M，使得M &gt; 0且M是N的倍数，并且M的10进制表示只包含0或1。求最小的M。 例如：N = 4，M = 100。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>bfs，有点难写。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> cur,cnt;</span><br><span class="line">	vector&lt;<span class="keyword">int</span>&gt;v;</span><br><span class="line">	<span class="built_in">E</span>(<span class="keyword">int</span> cu,<span class="keyword">int</span> cn):<span class="built_in">cur</span>(cu),<span class="built_in">cnt</span>(cn)&#123;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(x)&#123;</span><br><span class="line">		<span class="keyword">if</span>(x%<span class="number">10</span>!=<span class="number">0</span>&amp;&amp;x%<span class="number">10</span>!=<span class="number">1</span>)&#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">			</span><br><span class="line">		&#125;</span><br><span class="line">		x/=<span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">10000</span>;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;ans;</span><br><span class="line">queue&lt;E&gt;q;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;<span class="built_in">minn</span>(vector&lt;<span class="keyword">int</span>&gt; &amp;x,vector&lt;<span class="keyword">int</span>&gt; &amp;y)&#123;</span><br><span class="line">	<span class="keyword">if</span>(x.<span class="built_in">size</span>()&gt;y.<span class="built_in">size</span>()) <span class="keyword">return</span> y;</span><br><span class="line">	<span class="keyword">if</span>(x.<span class="built_in">size</span>()&lt;y.<span class="built_in">size</span>()) <span class="keyword">return</span> x;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=x.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">		<span class="keyword">if</span>(x[i]&gt;y[i])&#123;</span><br><span class="line">			<span class="keyword">return</span> y;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(x[i]&lt;y[i])&#123;</span><br><span class="line">			<span class="keyword">return</span> x;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(<span class="built_in">check</span>(n))&#123;</span><br><span class="line">		sum=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">while</span>(n)&#123;</span><br><span class="line">			ans.<span class="built_in">push_back</span>(n%<span class="number">10</span>);</span><br><span class="line">			n/=<span class="number">10</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	q.<span class="built_in">push</span>(<span class="built_in">E</span>(<span class="number">0</span>,<span class="number">0</span>));</span><br><span class="line">	<span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">		E cur=q.<span class="built_in">front</span>();q.<span class="built_in">pop</span>();</span><br><span class="line">		<span class="keyword">if</span>(cur.cnt+<span class="number">1</span>&gt;sum) <span class="keyword">return</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">			E nex=cur;</span><br><span class="line">			nex.cur=cur.cur+i*n;</span><br><span class="line">			nex.cnt++;</span><br><span class="line">			<span class="keyword">if</span>(nex.cur%<span class="number">10</span>==<span class="number">0</span>||nex.cur%<span class="number">10</span>==<span class="number">1</span>)&#123;</span><br><span class="line">				nex.v.<span class="built_in">push_back</span>(nex.cur%<span class="number">10</span>);</span><br><span class="line">				nex.cur/=<span class="number">10</span>;</span><br><span class="line">				<span class="keyword">if</span>(<span class="built_in">check</span>(nex.cur)&amp;&amp;i!=<span class="number">0</span>)&#123;</span><br><span class="line">					<span class="keyword">while</span>(nex.cur)&#123;</span><br><span class="line">						nex.v.<span class="built_in">push_back</span>(nex.cur%<span class="number">10</span>);</span><br><span class="line">						nex.cur/=<span class="number">10</span>;</span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">if</span>(sum==<span class="number">10000</span>)&#123;</span><br><span class="line">						ans=nex.v;</span><br><span class="line">						sum=nex.cnt;</span><br><span class="line">						<span class="comment">/*for(int i=nex.v.size()-1;i&gt;=0;i--)&#123;</span></span><br><span class="line"><span class="comment">							printf(&quot;%d&quot;,nex.v[i]);</span></span><br><span class="line"><span class="comment">						&#125;</span></span><br><span class="line"><span class="comment">						printf(&quot;\n&quot;);*/</span></span><br><span class="line">					&#125;</span><br><span class="line">					<span class="keyword">else</span>&#123;</span><br><span class="line">						ans=<span class="built_in">minn</span>(ans,nex.v);</span><br><span class="line">						<span class="comment">/*for(int i=nex.v.size()-1;i&gt;=0;i--)&#123;</span></span><br><span class="line"><span class="comment">							printf(&quot;%d&quot;,nex.v[i]);</span></span><br><span class="line"><span class="comment">						&#125;</span></span><br><span class="line"><span class="comment">						printf(&quot;\n&quot;);*/</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span>&#123;</span><br><span class="line">					q.<span class="built_in">push</span>(nex);</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="built_in">bfs</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=ans.<span class="built_in">size</span>()<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1110 距离之和最小 V3</title>
    <url>/posts/38949/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>X轴上有N个点，每个点除了包括一个位置数据X[i]，还包括一个权值W[i]。点P到点P[i]的带权距离 = 实际距离 * P[i]的权值。求X轴上一点使它到这N个点的带权距离之和最小，输出这个最小的带权距离之和。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>中位数最小，加权可以看成多个点。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo(d,s,t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo0(d,s,t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> __int128 lll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> data=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) ch=<span class="built_in">getchar</span>();<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) data=data*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=<span class="built_in">getchar</span>();<span class="keyword">return</span> data;&#125;</span><br><span class="line">ll n,cnt1,cnt2,ansx,ans;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,w;</span><br><span class="line">&#125;e[<span class="number">10020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.x&lt;y.x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">        cin&gt;&gt;e[i].x&gt;&gt;e[i].w;</span><br><span class="line">        cnt1+=e[i].w;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+n,cmp);</span><br><span class="line">    cnt1=cnt1/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">        cnt2+=e[i].w;</span><br><span class="line">        <span class="keyword">if</span>(cnt2&gt;=cnt1)&#123;</span><br><span class="line">            ansx=e[i].x;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">        ans+=<span class="built_in">abs</span>(ansx-e[i].x)*e[i].w;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1127 最短的包含字符串</title>
    <url>/posts/12499/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>给出一个字符串，求该字符串的一个子串s，s包含A-Z中的全部字母，并且s是所有符合条件的子串中最短的，输出s的长度。如果给出的字符串中并不包括A-Z中的全部字母，则输出No Solution。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>二分。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="comment">//#include&lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">int</span> len,ans;</span><br><span class="line"><span class="keyword">int</span> zm[<span class="number">30</span>],cnt;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(zm,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(zm));</span><br><span class="line">    cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;x;i++)&#123;</span><br><span class="line">        zm[s[i]-<span class="string">&#x27;A&#x27;</span>]++;</span><br><span class="line">        <span class="keyword">if</span>(zm[s[i]-<span class="string">&#x27;A&#x27;</span>]==<span class="number">1</span>) cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt==<span class="number">26</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=x;i&lt;len;i++)&#123;</span><br><span class="line">        zm[s[i]-<span class="string">&#x27;A&#x27;</span>]++;</span><br><span class="line">        <span class="keyword">if</span>(zm[s[i]-<span class="string">&#x27;A&#x27;</span>]==<span class="number">1</span>) cnt++;</span><br><span class="line">        zm[s[i-x]-<span class="string">&#x27;A&#x27;</span>]--;</span><br><span class="line">        <span class="keyword">if</span>(zm[s[i-x]-<span class="string">&#x27;A&#x27;</span>]==<span class="number">0</span>) cnt--;</span><br><span class="line">        <span class="comment">//printf(&quot;%d : %d\n&quot;,i,cnt);</span></span><br><span class="line">        <span class="keyword">if</span>(cnt==<span class="number">26</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s);</span><br><span class="line">    len=<span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">0</span>,r=len,mid;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line"></span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;<span class="comment">//printf(&quot;%d %d\n&quot;,mid,check(mid));</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid))&#123;</span><br><span class="line">            r=mid<span class="number">-1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            l=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No Solution\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
      <tags>
        <tag>二分</tag>
      </tags>
  </entry>
  <entry>
    <title>51Nod 1120 机器人走方格 V3</title>
    <url>/posts/33732/</url>
    <content><![CDATA[<h2 id="题目">题目</h2>
<p>N * N的方格，从左上到右下画一条线。一个机器人从左上走到右下，只能向右或向下走。并要求只能在这条线的上面或下面走，不能穿越这条线，有多少种不同的走法？由于方法数量可能很大，只需要输出Mod 10007的结果。 N&lt;=1e9</p>
<h2 id="思路">思路</h2>
<p>卡特兰数+卢卡斯定理+乘法逆元算组合数</p>
<p>卡特兰数：某百科卡特兰数词条讲过这种情况。</p>
<p>卢卡斯定理：组合数，模数很小，逐次拆分</p>
<p><img src="https://img2018.cnblogs.com/blog/1575943/201907/1575943-20190729224246253-1400059291.png" /></p>
<p>乘法逆元，见前面，此处n+1不能保证和p互质，建议用卡特兰数两组合数相减的公式。（不过数据很弱我写的/(n+1)）</p>
<span id="more"></span>
<h2 id="代码">代码</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> db double</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 10007</span></span><br><span class="line">ll n;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">speed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;</span><br><span class="line">    ll cur=a,ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=ans*cur%p;</span><br><span class="line">        cur=cur*cur%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">inv</span><span class="params">(ll t,ll p)</span> </span>&#123;<span class="comment">//Inverse element,求t关于p的逆元,注意:t要小于p,最好传参前先把t%p一下 </span></span><br><span class="line">    <span class="keyword">return</span> t==<span class="number">1</span>?<span class="number">1</span>:(p-p/t)*<span class="built_in">inv</span>(p%t,p)%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Scomb</span><span class="params">(ll _n,ll _m,ll p)</span></span>&#123;<span class="comment">//SmallCombination n,m可以线性求出 </span></span><br><span class="line">    <span class="keyword">if</span>(_m==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//return Factorial(_n,p)*inv(Factorial(m,p)%p,p)%p*inv(Factorial(n-m,p)%p,p)%p;</span></span><br><span class="line">    ll ans=<span class="number">1</span>,tmp=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=_m+<span class="number">1</span>;i&lt;=_n;i++)&#123;</span><br><span class="line">        ans=(ans*i)%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=_n-_m;i++)&#123;</span><br><span class="line">        tmp=(tmp*i)%p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;tmp&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">return</span> ans*<span class="built_in">inv</span>(tmp%p,p)%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Bcomb</span><span class="params">(ll _n,ll _m,ll p)</span></span>&#123;<span class="comment">//BigCombination</span></span><br><span class="line">    <span class="keyword">if</span>(_n&lt;p&amp;&amp;_m&lt;p) <span class="keyword">return</span> <span class="built_in">Scomb</span>(_n,_m,p)%p;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">Bcomb</span>(_n/p,_m/p,p)*<span class="built_in">Scomb</span>(_n%p,_m%p,p)%p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    n--;</span><br><span class="line">    ll ans=<span class="number">2</span>*<span class="built_in">Bcomb</span>(<span class="number">2</span>*n,n,mod)*<span class="built_in">speed</span>(n+<span class="number">1</span>,mod<span class="number">-2</span>,mod)%mod;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;speed(2,mod-2,mod)%mod;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1130 斯特林近似</title>
    <url>/posts/17812/</url>
    <content><![CDATA[<p><img src="https://img2018.cnblogs.com/blog/1575943/201902/1575943-20190227195117036-288323810.jpg" /></p>
<p>log10(n!)=log10(2<em>pi</em>n)<em>0.5+n</em>log10(n/e)</p>
<p>注意long long</p>
<span id="more"></span>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> pi 3.1415926535</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> E 2.718281828459</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,x;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="keyword">double</span> s=<span class="built_in">log10</span>(<span class="number">2</span>*pi*x)*<span class="number">0.5</span>+x*(<span class="built_in">log10</span>(x/E));</span><br><span class="line">        cout&lt;&lt;(<span class="keyword">long</span> <span class="keyword">long</span>)(s)+<span class="number">1</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>阶乘</tag>
      </tags>
  </entry>
  <entry>
    <title>51Nod 1140 矩阵相乘结果的判断</title>
    <url>/posts/44245/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>给出三个N*N的矩阵A, B, C，问A * B是否等于C？</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>随机找或者用向量压缩。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">520</span>][<span class="number">520</span>],b[<span class="number">520</span>][<span class="number">520</span>],c[<span class="number">520</span>][<span class="number">520</span>];</span><br><span class="line"><span class="keyword">int</span> r[<span class="number">520</span>],r2[<span class="number">520</span>];</span><br><span class="line"><span class="keyword">int</span> cr[<span class="number">520</span>],rc[<span class="number">520</span>],br[<span class="number">520</span>],ra[<span class="number">520</span>],abr[<span class="number">520</span>],rab[<span class="number">520</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">rd</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="keyword">int</span> y;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">30000</span>;i++)&#123;</span><br><span class="line">		x=<span class="built_in">rand</span>()%n+<span class="number">1</span>;</span><br><span class="line">		y=<span class="built_in">rand</span>()%n+<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">int</span> sum=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">			sum+=a[x][j]*b[j][y];</span><br><span class="line">		&#125; </span><br><span class="line">		<span class="keyword">if</span>(sum!=c[x][y]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;b[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;c[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		r[i]=i*i%<span class="number">101</span>;</span><br><span class="line">		r2[i]=(i+<span class="number">3</span>)*i%<span class="number">111</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">			cr[i]+=c[i][j]*r[j];</span><br><span class="line">			rc[i]+=c[j][i]*r2[j];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">			br[i]+=b[i][j]*r[j];</span><br><span class="line">			ra[i]+=a[j][i]*r2[j];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">			abr[i]+=a[i][j]*br[j];</span><br><span class="line">			rab[i]+=b[j][i]*ra[j];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">bool</span> f=<span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(abr[i]!=cr[i]||rab[i]!=rc[i])&#123;</span><br><span class="line">			f=<span class="literal">false</span>;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//cout&lt;&lt;rd();</span></span><br><span class="line">	<span class="keyword">if</span>(!f)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="comment">//f=f&amp;rd();</span></span><br><span class="line">		<span class="comment">//if(f)&#123;</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line">		<span class="comment">//&#125;</span></span><br><span class="line">		<span class="comment">//else&#123;</span></span><br><span class="line">			<span class="comment">//printf(&quot;No\n&quot;);</span></span><br><span class="line">		<span class="comment">//&#125;</span></span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1154 回文串划分</title>
    <url>/posts/45854/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有一个字符串S，求S最少可以被划分为多少个回文串。 例如：abbaabaa，有多种划分方式。</p>
<p>a|bb|aabaa - 3 个回文串 a|bb|a|aba|a - 5 个回文串 a|b|b|a|a|b|a|a - 8 个回文串</p>
<p>其中第1种划分方式的划分数量最少。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>先预处理，然后见官方攻略：</p>
<p>𝑑𝑝[𝑖]表示以𝑖结尾的划分数量的最小值，𝑑𝑝[𝑖]=𝑚𝑖𝑛(𝑑𝑝[𝑖],𝑑𝑝[𝑗]+1) 当𝑗&lt;𝑖且从𝑗到𝑖是一个回文串时。所以对于字符𝑆，逐个处理𝑆的字符，枚举以𝑆𝑖为中心的所有回文串，做状态转移即可。复杂度𝑂(𝑛2)。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y==<span class="number">0</span>?x:<span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">speed</span><span class="params">(ll a,ll b,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    ll cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur%p;</span><br><span class="line">        cur=cur*cur%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="comment">/*int cnt,pri[MAXN/5];</span></span><br><span class="line"><span class="comment">void prime()&#123;//埃式筛法</span></span><br><span class="line"><span class="comment">    int N=sqrt(MAXN)+0.5,mul;</span></span><br><span class="line"><span class="comment">    memset(ipr,true,sizeof(ipr));</span></span><br><span class="line"><span class="comment">    ipr[1]=false;</span></span><br><span class="line"><span class="comment">    for(int i=2;i&lt;=N;i++)&#123;</span></span><br><span class="line"><span class="comment">        if(ipr[i]==true)&#123;</span></span><br><span class="line"><span class="comment">            i==2?mul=1:mul=2;</span></span><br><span class="line"><span class="comment">            for(int j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span></span><br><span class="line"><span class="comment">                ipr[j]=false;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    for(int i=2;i&lt;=MAXN;i++)&#123;</span></span><br><span class="line"><span class="comment">        if(ipr[i]==true)&#123;</span></span><br><span class="line"><span class="comment">            pri[++cnt]=i;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">5020</span>];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">5020</span>][<span class="number">5020</span>];</span><br><span class="line"><span class="keyword">int</span> dp2[<span class="number">5020</span>];</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;vec;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s);</span><br><span class="line">    len=<span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        dp[i][i]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;len;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==s[j])&#123;</span><br><span class="line">                <span class="keyword">if</span>(i+<span class="number">1</span>&gt;=j<span class="number">-1</span>) dp[i][j]=<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> dp[i][j]=dp[i+<span class="number">1</span>][j<span class="number">-1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        dp2[i]=dp[<span class="number">0</span>][i]?<span class="number">1</span>:i+<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(dp2[i]&gt;<span class="number">1</span>) <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;i;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dp[j+<span class="number">1</span>][i]&amp;&amp;dp2[j]+<span class="number">1</span>&lt;dp2[i]) dp2[i]=dp2[j]+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,dp2[len<span class="number">-1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>字符串</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1163 最高的奖励</title>
    <url>/posts/45564/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有N个任务，每个任务有一个最晚结束时间以及一个对应的奖励。在结束时间之前完成该任务，就可以获得对应的奖励。完成每一个任务所需的时间都是1个单位时间。有时候完成所有任务是不可能的，因为时间上可能会有冲突，这需要你来取舍。求能够获得的最高奖励。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>时间排序，小根堆，每次加入，如果数量小于时间就加入，否则弹出一个加入。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo0(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a, ll b)</span> </span>&#123; <span class="keyword">return</span> b == <span class="number">0</span> ? a : <span class="built_in">gcd</span>(b, a % b); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function">db <span class="title">fab</span><span class="params">(db x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; <span class="number">0</span> ? x : -x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> t, w;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> E &amp;x) <span class="keyword">const</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>-&gt;w &gt; x.w;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; e[<span class="number">50020</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(E x, E y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.t &lt; y.t;</span><br><span class="line">&#125;</span><br><span class="line">priority_queue&lt;E&gt;q;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line">ll ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="built_in">fo</span>(i, <span class="number">1</span>, n) &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;e[i].t, &amp;e[i].w);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(e + <span class="number">1</span>, e + <span class="number">1</span> + n, cmp);</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt&lt;e[i].t)&#123;</span><br><span class="line">            q.<span class="built_in">push</span>(e[i]);</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(e[i].w&gt;q.<span class="built_in">top</span>().w)&#123;</span><br><span class="line">                q.<span class="built_in">pop</span>();</span><br><span class="line">                q.<span class="built_in">push</span>(e[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        ans+=q.<span class="built_in">top</span>().w;</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1166 大数开平方</title>
    <url>/posts/6211/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>给出一个大整数N，求不大于N的平方根的最大整数。例如：N = 8，2 * 2 &lt; 8，3 * 3 &gt; 8，所以输出2。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">from math <span class="keyword">import</span> *</span></span><br><span class="line"><span class="function">from decimal <span class="keyword">import</span> *</span></span><br><span class="line"><span class="function"><span class="title">getcontext</span><span class="params">()</span>.prec</span>=<span class="number">10</span>**<span class="number">5</span></span><br><span class="line">a=<span class="built_in">input</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in"><span class="keyword">int</span></span>(<span class="built_in">Decimal</span>(a).<span class="built_in">sqrt</span>()))</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>51Nod 1179 最大的最大公约数</title>
    <url>/posts/18398/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>给出N个正整数，找出N个数两两之间最大公约数的最大值。例如：N = 4，4个数为：9 15 25 16，两两之间最大公约数的最大值是15同25的最大公约数5。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>把每个数所有因数搞出来，如果第二次出现就停止。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">168</span>;</span><br><span class="line"><span class="keyword">int</span> pri[<span class="number">200</span>]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>,<span class="number">11</span>,<span class="number">13</span>,<span class="number">17</span>,<span class="number">19</span>,<span class="number">23</span>,<span class="number">29</span>,<span class="number">31</span>,<span class="number">37</span>,<span class="number">41</span>,<span class="number">43</span>,<span class="number">47</span>,</span><br><span class="line">        <span class="number">53</span>,<span class="number">59</span>,<span class="number">61</span>,<span class="number">67</span>,<span class="number">71</span>,<span class="number">73</span>,<span class="number">79</span>,<span class="number">83</span>,<span class="number">89</span>,<span class="number">97</span>,</span><br><span class="line">        <span class="number">101</span>,<span class="number">103</span>,<span class="number">107</span>,<span class="number">109</span>,<span class="number">113</span>,<span class="number">127</span>,<span class="number">131</span>,<span class="number">137</span>,<span class="number">139</span>,<span class="number">149</span>,</span><br><span class="line">        <span class="number">151</span>,<span class="number">157</span>,<span class="number">163</span>,<span class="number">167</span>,<span class="number">173</span>,<span class="number">179</span>,<span class="number">181</span>,<span class="number">191</span>,<span class="number">193</span>,<span class="number">197</span>,<span class="number">199</span>,</span><br><span class="line">        <span class="number">211</span>,<span class="number">223</span>,<span class="number">227</span>,<span class="number">229</span>,<span class="number">233</span>,<span class="number">239</span>,<span class="number">241</span>,</span><br><span class="line">        <span class="number">251</span>,<span class="number">257</span>,<span class="number">263</span>,<span class="number">269</span>,<span class="number">271</span>,<span class="number">277</span>,<span class="number">281</span>,<span class="number">283</span>,<span class="number">293</span>,</span><br><span class="line">        <span class="number">307</span>,<span class="number">311</span>,<span class="number">313</span>,<span class="number">317</span>,<span class="number">331</span>,<span class="number">337</span>,<span class="number">347</span>,<span class="number">349</span>,</span><br><span class="line">        <span class="number">353</span>,<span class="number">359</span>,<span class="number">367</span>,<span class="number">373</span>,<span class="number">379</span>,<span class="number">383</span>,<span class="number">389</span>,<span class="number">397</span>,</span><br><span class="line">        <span class="number">401</span>,<span class="number">409</span>,<span class="number">419</span>,<span class="number">421</span>,<span class="number">431</span>,<span class="number">433</span>,<span class="number">439</span>,<span class="number">443</span>,<span class="number">449</span>,</span><br><span class="line">        <span class="number">457</span>,<span class="number">461</span>,<span class="number">463</span>,<span class="number">467</span>,<span class="number">479</span>,<span class="number">487</span>,<span class="number">491</span>,<span class="number">499</span>,</span><br><span class="line">        <span class="number">503</span>,<span class="number">509</span>,<span class="number">521</span>,<span class="number">523</span>,<span class="number">541</span>,<span class="number">547</span>,</span><br><span class="line">        <span class="number">557</span>,<span class="number">563</span>,<span class="number">569</span>,<span class="number">571</span>,<span class="number">577</span>,<span class="number">587</span>,<span class="number">593</span>,<span class="number">599</span>,</span><br><span class="line">        <span class="number">601</span>,<span class="number">607</span>,<span class="number">613</span>,<span class="number">617</span>,<span class="number">619</span>,<span class="number">631</span>,<span class="number">641</span>,<span class="number">643</span>,<span class="number">647</span>,</span><br><span class="line">        <span class="number">653</span>,<span class="number">659</span>,<span class="number">661</span>,<span class="number">673</span>,<span class="number">677</span>,<span class="number">683</span>,<span class="number">691</span>,</span><br><span class="line">        <span class="number">701</span>,<span class="number">709</span>,<span class="number">719</span>,<span class="number">727</span>,<span class="number">733</span>,<span class="number">739</span>,<span class="number">743</span>,</span><br><span class="line">        <span class="number">751</span>,<span class="number">757</span>,<span class="number">761</span>,<span class="number">769</span>,<span class="number">773</span>,<span class="number">787</span>,<span class="number">797</span>,</span><br><span class="line">        <span class="number">809</span>,<span class="number">811</span>,<span class="number">821</span>,<span class="number">823</span>,<span class="number">827</span>,<span class="number">829</span>,<span class="number">839</span>,</span><br><span class="line">        <span class="number">853</span>,<span class="number">857</span>,<span class="number">859</span>,<span class="number">863</span>,<span class="number">877</span>,<span class="number">881</span>,<span class="number">883</span>,<span class="number">887</span>,</span><br><span class="line">        <span class="number">907</span>,<span class="number">911</span>,<span class="number">919</span>,<span class="number">929</span>,<span class="number">937</span>,<span class="number">941</span>,<span class="number">947</span>,</span><br><span class="line">        <span class="number">953</span>,<span class="number">967</span>,<span class="number">971</span>,<span class="number">977</span>,<span class="number">983</span>,<span class="number">991</span>,<span class="number">997</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">50020</span>][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> ct[<span class="number">50020</span>][<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> n,tmp,mx;</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">50020</span>];</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">1000020</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">speed</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur;</span><br><span class="line">        cur=cur*cur;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> t,<span class="keyword">int</span> cur,<span class="keyword">int</span> anx)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cur==a[t][<span class="number">0</span>]+<span class="number">1</span>)&#123;</span><br><span class="line">        ans[anx]++;</span><br><span class="line">        <span class="keyword">if</span>(ans[anx]&gt;<span class="number">1</span>) mx=<span class="built_in">max</span>(mx,anx);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=ct[t][cur];i++)&#123;</span><br><span class="line">        <span class="built_in">dfs</span>(t,cur+<span class="number">1</span>,anx*<span class="built_in">speed</span>(a[t][cur],i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;num[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(num+<span class="number">1</span>,num+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        tmp=num[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=cnt;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(num[i]%pri[j]==<span class="number">0</span>)&#123;</span><br><span class="line">                a[i][++a[i][<span class="number">0</span>]]=pri[j];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(num[i]%pri[j]==<span class="number">0</span>)&#123;</span><br><span class="line">                ct[i][a[i][<span class="number">0</span>]]++;</span><br><span class="line">                num[i]/=pri[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num[i]&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            a[i][++a[i][<span class="number">0</span>]]=num[i];</span><br><span class="line">            ct[i][a[i][<span class="number">0</span>]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mx&gt;=tmp)&#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;<span class="built_in">dfs</span>(i,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,mx);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>数论</tag>
      </tags>
  </entry>
  <entry>
    <title>51Nod 1225 余数之和</title>
    <url>/posts/24053/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>F(n) = (n % 1) + (n % 2) + (n % 3) + ...... (n % n)。其中%表示Mod，也就是余数。 例如F(6) = 6 % 1 + 6 % 2 + 6 % 3 + 6 % 4 + 6 % 5 + 6 % 6 = 0 + 0 + 0 + 2 + 1 + 0 = 3。 给出n，计算F(n), 由于结果很大，输出Mod 1000000007的结果即可。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>好像叫分块？不过写的不大好。。。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> __int128 ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll n;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(ll cur,ll cnt)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(cur&lt;=<span class="number">4000000</span>)&#123;</span><br><span class="line">		ll ret=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cur;i++)&#123;</span><br><span class="line">			ret=(ret+n%i)%mod;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> ret;</span><br><span class="line">	&#125;</span><br><span class="line">	ll nex=n/(cnt+<span class="number">1</span>);</span><br><span class="line">	ll chu=<span class="number">2</span>,num=cur-nex;</span><br><span class="line">	<span class="keyword">if</span>(num%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">		chu=<span class="number">1</span>;</span><br><span class="line">		num/=<span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ((n%cur+n%(nex+<span class="number">1</span>))/chu%mod*num%mod+<span class="built_in">dfs</span>(nex,cnt+<span class="number">1</span>))%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;s);</span><br><span class="line">	n=s;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> ans=<span class="built_in">dfs</span>(n,<span class="number">1</span>)%mod;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans); </span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
      <tags>
        <tag>分块</tag>
      </tags>
  </entry>
  <entry>
    <title>51Nod 1247 可能的路径</title>
    <url>/posts/32111/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>在一个无限大的二维网格上，你站在(a,b)点上，下一步你可以移动到(a + b, b), (a, a + b), (a - b, b), 或者 (a, a - b)这4个点。 给出起点坐标(a,b)，以及终点坐标(x,y)，问你能否从起点移动到终点。如果可以，输出&quot;Yes&quot;，否则输出&quot;No&quot;。 例如：(1,1) 到 (2,3)，(1,1) -&gt; (2,1) -&gt; (2,3)。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>1,3操作互逆，2,4同样如此，4，3，2操作可以交换位置，假设前一个大于后一个，前一个可以不断减去后一个知道比后一个小。</p>
<p>这就是一个求gcd，可知gcd相等就能走到。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> __int128 lll;</span><br><span class="line"><span class="keyword">const</span> lll mod=<span class="number">1e36</span>+<span class="number">1</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> data=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) ch=<span class="built_in">getchar</span>();<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) data=data*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=<span class="built_in">getchar</span>();<span class="keyword">return</span> data;&#125;</span><br><span class="line">ll T,a,b,x,y;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;x&gt;&gt;y;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">gcd</span>(a,b)==<span class="built_in">gcd</span>(x,y))&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1255 字典序最小的子序列</title>
    <url>/posts/5931/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>给出一个由a-z组成的字符串S，求他的一个子序列，满足如下条件：</p>
<p>1、包含字符串中所有出现过的字符各1个。</p>
<p>2、是所有满足条件1的串中，字典序最小的。</p>
<p>例如：babbdcc，出现过的字符为：abcd，而包含abcd的所有子序列中，字典序最小的为abdc。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>一个栈，当前没有在栈内，栈顶不是最后一个，且当前更小，就出1个入1个。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a, ll b)</span> </span>&#123; <span class="keyword">return</span> b == <span class="number">0</span> ? a : <span class="built_in">gcd</span>(b, a % b); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ll data = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) data = data * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>, ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line">stack&lt;<span class="keyword">char</span>&gt;s;</span><br><span class="line"><span class="keyword">int</span> len;</span><br><span class="line"><span class="keyword">char</span> x[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">30</span>];</span><br><span class="line"><span class="keyword">int</span> las[<span class="number">30</span>];</span><br><span class="line"><span class="keyword">char</span> ans[<span class="number">30</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,x);</span><br><span class="line">    len=<span class="built_in">strlen</span>(x);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        las[x[i]-<span class="string">&#x27;a&#x27;</span>]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!s.<span class="built_in">empty</span>()&amp;&amp;x[i]&lt;s.<span class="built_in">top</span>()&amp;&amp;las[s.<span class="built_in">top</span>()-<span class="string">&#x27;a&#x27;</span>]&gt;i&amp;&amp;!f[x[i]-<span class="string">&#x27;a&#x27;</span>])&#123;</span><br><span class="line">            f[s.<span class="built_in">top</span>()-<span class="string">&#x27;a&#x27;</span>]=<span class="literal">false</span>;</span><br><span class="line">            s.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!f[x[i]-<span class="string">&#x27;a&#x27;</span>])&#123;</span><br><span class="line">            s.<span class="built_in">push</span>(x[i]);</span><br><span class="line">            f[x[i]-<span class="string">&#x27;a&#x27;</span>]=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(!s.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        ans[++t]=s.<span class="built_in">top</span>();</span><br><span class="line">        s.<span class="built_in">pop</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=t;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1265 四点共面</title>
    <url>/posts/34516/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>给出三维空间上的四个点（点与点的位置均不相同），判断这4个点是否在同一个平面内（4点共线也算共面）。如果共面，输出&quot;Yes&quot;，否则输出&quot;No&quot;。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>叉积。。。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1e8</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Vector</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y,z;</span><br><span class="line">    <span class="built_in">Vector</span>()&#123;</span><br><span class="line">        x=<span class="number">0</span>,y=<span class="number">0</span>,z=<span class="number">0</span>;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y,z;</span><br><span class="line">    <span class="built_in">Point</span>()&#123;</span><br><span class="line">        x=<span class="number">0</span>,y=<span class="number">0</span>,z=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Input</span><span class="params">()</span></span>&#123;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function">Vector <span class="title">cromul</span><span class="params">(Vector a1,Vector a2)</span></span>&#123;</span><br><span class="line">    Vector tmp;</span><br><span class="line">    tmp.x=a1.y*a2.z-a1.z*a2.y;</span><br><span class="line">    tmp.y=a1.z*a2.x-a1.x*a2.z;</span><br><span class="line">    tmp.z=a1.x*a2.y-a1.y*a2.x;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">Vector <span class="title">ptv</span><span class="params">(Point a1,Point a2)</span></span>&#123;</span><br><span class="line">    Vector tmp;</span><br><span class="line">    tmp.x=a2.x-a1.x;</span><br><span class="line">    tmp.y=a2.y-a1.y;</span><br><span class="line">    tmp.z=a2.z-a1.z;</span><br><span class="line">    <span class="keyword">return</span> tmp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">pmul</span><span class="params">(Vector a1,Vector a2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a1.x*a2.x+a1.y*a2.y+a1.z*a2.z;</span><br><span class="line">&#125;</span><br><span class="line">Point p[<span class="number">6</span>];</span><br><span class="line">Vector v[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">            p[i].<span class="built_in">Input</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        v[<span class="number">1</span>]=<span class="built_in">ptv</span>(p[<span class="number">1</span>],p[<span class="number">2</span>]);</span><br><span class="line">        v[<span class="number">2</span>]=<span class="built_in">ptv</span>(p[<span class="number">1</span>],p[<span class="number">3</span>]);</span><br><span class="line">        v[<span class="number">3</span>]=<span class="built_in">ptv</span>(p[<span class="number">1</span>],p[<span class="number">4</span>]);</span><br><span class="line">        v[<span class="number">4</span>]=<span class="built_in">cromul</span>(v[<span class="number">1</span>],v[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">pmul</span>(v[<span class="number">3</span>],v[<span class="number">4</span>])==<span class="number">0</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No\n&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>计算几何</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1267 4个数和为0</title>
    <url>/posts/57573/</url>
    <content><![CDATA[<h2 id="题目">题目</h2>
<p>给出N个整数，你来判断一下是否能够选出4个数，他们的和为0，可以则输出&quot;Yes&quot;，否则输出&quot;No&quot;。 n&lt;=1e3</p>
<span id="more"></span>
<h2 id="思路">思路</h2>
<p>《挑战程序设计竞赛》的经典题，预处理两层+二分</p>
<h2 id="代码">代码</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll n,a[<span class="number">1020</span>],ct;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    ll w;</span><br><span class="line">    <span class="keyword">int</span> p1,p2;</span><br><span class="line">&#125;e[<span class="number">600020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.w&lt;y.w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            e[++ct]=(E)&#123;a[i]+a[j],i,j&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+ct,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> l=<span class="number">1</span>,r=ct,mid;</span><br><span class="line">            <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">                mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(a[i]+a[j]+e[mid].w&lt;<span class="number">0</span>)&#123;</span><br><span class="line">                    l=mid+<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    r=mid<span class="number">-1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> k=l;a[i]+a[j]+e[k].w==<span class="number">0</span>;k++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i!=e[k].p1&amp;&amp;i!=e[k].p2&amp;&amp;j!=e[k].p1&amp;&amp;j!=e[k].p2)&#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line">                    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1272 最大距离</title>
    <url>/posts/25243/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>给出一个长度为N的整数数组A，对于每一个数组元素，如果他后面存在大于等于该元素的数，则这两个数可以组成一对。每个元素和自己也可以组成一对。例如：{5, 3, 6, 3, 4, 2}，可以组成11对，如下（数字为下标）： (0,0), (0, 2), (1, 1), (1, 2), (1, 3), (1, 4), (2, 2), (3, 3), (3, 4), (4, 4), (5, 5)。其中(1, 4)是距离最大的一对，距离为3。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>二分距离，后缀最大值优化检验。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="comment">//#include&lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">50020</span>],ans;</span><br><span class="line"><span class="keyword">int</span> mx[<span class="number">50020</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="comment">//printf(&quot;%d\n&quot;,x);</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i+x&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;=mx[i+x])&#123;</span><br><span class="line">            <span class="comment">//printf(&quot;%d %d\n&quot;,i,i+x);</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&gt;y?x:y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        mx[i]=<span class="built_in">max</span>(mx[i+<span class="number">1</span>],a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">0</span>,r=n<span class="number">-1</span>,mid;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid))&#123;</span><br><span class="line">            l=mid+<span class="number">1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            r=mid<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1274 最长递增路径</title>
    <url>/posts/28054/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>一个无向图，可能有自环，有重边，每条边有一个边权。你可以从任何点出发，任何点结束，可以经过同一个点任意次。但是不能经过同一条边2次，并且你走过的路必须满足所有边的权值严格单调递增，求最长能经过多少条边。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>排序，然后dp[i]代表到达这个点时的最大路径长度，每次更新，由于长度严格递增，所以暂时把新的值放到一个地方，等长度增加时再更新。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">50020</span>;</span><br><span class="line"><span class="keyword">int</span> dp[MAXN];</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> u,v,w;</span><br><span class="line">&#125;e[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">P</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> x,val;</span><br><span class="line">&#125;;</span><br><span class="line">queue&lt;P&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x.w&lt;y.w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">	<span class="keyword">int</span> x,y,z;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">		e[i]=(E)&#123;x,y,z&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+m,cmp);</span><br><span class="line">	P tmp1,tmp2;</span><br><span class="line">	e[<span class="number">0</span>].w=<span class="number">-1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(e[i].w!=e[i<span class="number">-1</span>].w)&#123;</span><br><span class="line">			<span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">				P p=q.<span class="built_in">front</span>();q.<span class="built_in">pop</span>();</span><br><span class="line">				dp[p.x]=<span class="built_in">max</span>(dp[p.x],p.val);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> u=e[i].u,v=e[i].v,w=e[i].w;</span><br><span class="line">		tmp1=(P)&#123;u,<span class="built_in">max</span>(dp[u],dp[v]+<span class="number">1</span>)&#125;;</span><br><span class="line">		tmp2=(P)&#123;v,<span class="built_in">max</span>(dp[v],dp[u]+<span class="number">1</span>)&#125;;</span><br><span class="line">		q.<span class="built_in">push</span>(tmp1);</span><br><span class="line">		q.<span class="built_in">push</span>(tmp2);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">		P p=q.<span class="built_in">front</span>();q.<span class="built_in">pop</span>();</span><br><span class="line">		dp[p.x]=<span class="built_in">max</span>(dp[p.x],p.val);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> mx=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		mx=<span class="built_in">max</span>(mx,dp[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,mx);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1278 相离的圆</title>
    <url>/posts/42603/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>平面上有N个圆，他们的圆心都在X轴上，给出所有圆的圆心和半径，求有多少对圆是相离的。</p>
<p>例如：4个圆分别位于1, 2, 3, 4的位置，半径分别为1, 1, 2, 1，那么{1, 2}, {1, 3} {2, 3} {2, 4} {3, 4}这5对都有交点，只有{1, 4}是相离的。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>注意圆心在坐标轴上，之前因为没看到这句话把题跳了。 然后就可以转化为线段，按照左端点排序，i代表线段循环，二分求左端点在第i条线段右端点左边的最后一个线段，他后面的线段就是相离的，加入答案。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt std::ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">int</span> n,ans;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> s,t;</span><br><span class="line">&#125;e[<span class="number">50020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(x.s==y.s) <span class="keyword">return</span> x.t&lt;y.t;</span><br><span class="line">	<span class="keyword">return</span> x.s&lt;y.s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//io_opt;</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> x,r;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;r);</span><br><span class="line">		e[i].s=x-r;</span><br><span class="line">		e[i].t=x+r;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+n,cmp);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> l=i,r=n,mid,tmp=i;</span><br><span class="line">		<span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">			mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span>(e[mid].s&lt;=e[i].t)&#123;</span><br><span class="line">				l=mid+<span class="number">1</span>;</span><br><span class="line">				tmp=mid;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				r=mid<span class="number">-1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		ans+=n-tmp;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>计算几何</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1279 扔盘子</title>
    <url>/posts/33095/</url>
    <content><![CDATA[<h2 id="题目">题目</h2>
<p>有一口井，井的高度为N，每隔1个单位它的宽度有变化。现在从井口往下面扔圆盘，如果圆盘的宽度大于井在某个高度的宽度，则圆盘被卡住（恰好等于的话会下去）。</p>
<p>盘子有几种命运：1、掉到井底。2、被卡住。3、落到别的盘子上方。</p>
<p>盘子的高度也是单位高度。给定井的宽度和每个盘子的宽度，求最终落到井内的盘子数量。</p>
<span id="more"></span>
<h2 id="思路">思路</h2>
<p>小口下面的大口没用，让井变递减，n+m匹配</p>
<h2 id="代码">代码</h2>
<p><code>c++ #include&lt;bits/stdc++.h&gt; #define ll long long #define db double using namespace std; int n,m; int w[50020],d[50020]; int main()&#123;     scanf(&quot;%d%d&quot;,&amp;n,&amp;m);     scanf(&quot;%d&quot;,&amp;w[1]);     for(int i=2;i&lt;=n;i++)&#123;         scanf(&quot;%d&quot;,&amp;w[i]);         if(w[i]&gt;w[i-1]) w[i]=w[i-1];     &#125;     for(int i=1;i&lt;=m;i++)&#123;         scanf(&quot;%d&quot;,&amp;d[i]);     &#125;     int p=n,ans=0;     for(int i=1;i&lt;=m&amp;&amp;p&gt;0;i++)&#123;         while(p&gt;0)&#123;             if(d[i]&lt;=w[p])&#123;                 break;             &#125;             else&#123;                 p--;             &#125;         &#125;         if(p==0) break;         ans++;         p--;     &#125;     cout&lt;&lt;ans&lt;&lt;endl;     return 0; &#125;</code></p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>简单题</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1285 山峰和分段</title>
    <url>/posts/53545/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>用一个长度为N的整数数组A，描述山峰和山谷的高度。山峰需要满足如下条件， 0 &lt; P &lt; N - 1 且 A[P - 1] &lt; A[P] &gt; A[P + 1]。</p>
<p>现在要将整个山分为K段，要求每段的点数都一样，且每段中都至少存在一个山峰，问最多可以分为多少段。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>枚举因数，前缀和优化查询。</p>
<p>复杂度是因子之和，试了一下，1e6之内一个大于5*n的也没有，最大比率4.5多一点。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">50020</span>];</span><br><span class="line"><span class="keyword">int</span> sum[<span class="number">50020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;a[i<span class="number">-1</span>]&amp;&amp;a[i]&gt;a[i+<span class="number">1</span>])&#123;</span><br><span class="line">            sum[i]=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        sum[i]+=sum[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    sum[n]=sum[n<span class="number">-1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">bool</span> fg=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">int</span> l=n/i;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(sum[j*l]-sum[(j<span class="number">-1</span>)*l]&lt;<span class="number">1</span>)&#123;</span><br><span class="line">                    fg=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(fg)&#123;</span><br><span class="line">                cout&lt;&lt;i&lt;&lt;endl;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;0&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1287 加农炮</title>
    <url>/posts/43926/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>一个长度为M的正整数数组A，表示从左向右的地形高度。测试一种加农炮，炮弹平行于地面从左向右飞行，高度为H，如果某处地形的高度大于等于炮弹飞行的高度H（A[i] &gt;= H），炮弹会被挡住并落在i - 1处，则A[i - 1] + 1。如果H &lt;= A[0]，则这个炮弹无效，如果H &gt; 所有的A[i]，这个炮弹也无效。现在给定N个整数的数组B代表炮弹高度，计算出最后地形的样子。</p>
<p>例如：地形高度A = {1, 2, 0, 4, 3, 2, 1, 5, 7}, 炮弹高度B = {2, 8, 0, 7, 6, 5, 3, 4, 5, 6, 5}，最终得到的地形高度为：{2, 2, 2, 4, 3, 3, 5, 6, 7}。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>1e6数组存每个高度的炮弹能打到的位置，每次更新。</p>
<p>另一种是维护前缀最大值，因为每次前一个+1之后仍然&lt;=后一个，O（1）维护即可。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">1e8</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">50020</span>],b[<span class="number">50020</span>];</span><br><span class="line"><span class="keyword">int</span> t[<span class="number">1000020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=a[i];j&gt;=<span class="number">0</span>&amp;&amp;t[j]==<span class="number">0</span>;j--)&#123;</span><br><span class="line">            t[j]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;b[i];</span><br><span class="line">        <span class="keyword">if</span>(b[i]&gt;a[<span class="number">1</span>])&#123;</span><br><span class="line">            a[t[b[i]]<span class="number">-1</span>]++;</span><br><span class="line">            <span class="keyword">if</span>(t[b[i]]<span class="number">-1</span>&lt;t[a[t[b[i]]<span class="number">-1</span>]])&#123;</span><br><span class="line">                t[a[t[b[i]]<span class="number">-1</span>]]=t[b[i]]<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        cout&lt;&lt;a[i]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1307 绳子与重物</title>
    <url>/posts/872/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有N条绳子编号 0 至 N - 1，每条绳子后面栓了一个重物重量为Wi，绳子的最大负重为Ci。每条绳子或挂在别的绳子下或直接挂在钩子上（编号-1）。如果绳子下所有重物的重量大于绳子的最大负重就会断掉（等于不会断）。依次给出每条绳子的负重Ci、重物的重量Wi以及绳子会挂在之前的哪条绳子的下面，问最多挂多少个绳子而不会出现绳子断掉的情况。</p>
<p>例如下图：</p>
<p>5, 2, -1 3, 3, 0 6, 1, -1 3, 1, 0 3, 2, 3</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>从n向1循环，设置一个n的尾指针，每次查询看是否超重，超重就尾指针向前，当前的减去去掉的那个，最后并查集合并到更高位。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> c,w,p;</span><br><span class="line">&#125;e[<span class="number">50020</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">50020</span>];</span><br><span class="line">ll sum[<span class="number">50020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> f[x]==x?x:f[x]=<span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//io_opt;</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">int</span> x,y,z;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		f[i]=i;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;x,&amp;y,&amp;z);</span><br><span class="line">		e[i]=(E)&#123;x,y,z+<span class="number">1</span>&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> ans=n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">		sum[i]+=e[i].w;</span><br><span class="line">		<span class="keyword">while</span>(sum[i]&gt;e[i].c)&#123;</span><br><span class="line">			sum[<span class="built_in">find</span>(ans)]-=e[ans].w;</span><br><span class="line">			ans--;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">int</span> u=i,v=e[i].p;</span><br><span class="line">		sum[v]+=sum[u];</span><br><span class="line">		f[u]=v;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1350 斐波那契表示</title>
    <url>/posts/13693/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>每一个正整数都可以表示为若干个斐波那契数的和，一个整数可能存在多种不同的表示方法，例如：14 = 13 + 1 = 8 + 5 + 1，其中13 + 1是最短的表示（只用了2个斐波那契数）。定义F(n) = n的最短表示中的数字个数，F(14) = 2，F(100) = 3（100 = 3 + 8 + 89），F(16) = 2（16 = 8 + 8 = 13 + 3）。定义G(n) = F(1) + F(2) + F(3) + ...... F(n)，G(6) = 1 + 1 + 1 + 2 + 1 + 2 = 8。给出若干个数字n，求对应的G(n)。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>以fib个为一组找规律，发现当前fib[i]个数是前fib[i-1]个数照搬，然后前前fib[i-2]个数搬过来再+1，于是预处理fib和fib前缀和，还有sum和sum前缀和，sum[i]代表一组数，有fib[i]个，他们的F之和，然后二分找到前面成组的数，不成组的按照规律，递归求解。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y==<span class="number">0</span>?x:<span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">speed</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur;</span><br><span class="line">        cur=cur*cur;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//埃式筛法</span></span><br><span class="line">    <span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">    <span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">                ipr[j]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            pri[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line">ll n;</span><br><span class="line">ll fib[<span class="number">120</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>&#125;,sfib[<span class="number">120</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line">ll sum[<span class="number">120</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>&#125;,ssum[<span class="number">120</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="function">ll <span class="title">dfs</span><span class="params">(ll layer,ll cur)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(layer&lt;=<span class="number">0</span>||cur&lt;=<span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(cur==fib[layer]) <span class="keyword">return</span> sum[layer];</span><br><span class="line">    <span class="keyword">if</span>(cur&lt;=fib[layer<span class="number">-1</span>]) <span class="keyword">return</span> <span class="built_in">dfs</span>(layer<span class="number">-1</span>,cur);</span><br><span class="line">    <span class="keyword">return</span> sum[layer<span class="number">-1</span>]+<span class="built_in">dfs</span>(layer<span class="number">-2</span>,cur-fib[layer<span class="number">-1</span>])+cur-fib[layer<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">91</span>;i++)&#123;</span><br><span class="line">        fib[i]=fib[i<span class="number">-1</span>]+fib[i<span class="number">-2</span>];</span><br><span class="line">        sfib[i]=sfib[i<span class="number">-1</span>]+fib[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=<span class="number">91</span>;i++)&#123;</span><br><span class="line">        sum[i]=sum[i<span class="number">-1</span>]+sum[i<span class="number">-2</span>]+fib[i<span class="number">-2</span>];</span><br><span class="line">        ssum[i]=ssum[i<span class="number">-1</span>]+sum[i];</span><br><span class="line">        <span class="comment">//81&gt;0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">        n--;</span><br><span class="line">        ll ans=<span class="number">1</span>,cur=n;</span><br><span class="line">        ll p=<span class="built_in">lower_bound</span>(sfib+<span class="number">1</span>,sfib+<span class="number">1</span>+<span class="number">81</span>,cur)-sfib<span class="number">-1</span>;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;&quot;!&quot;&lt;&lt;p&lt;&lt;endl;</span></span><br><span class="line">        cur-=sfib[p];</span><br><span class="line">        ans+=ssum[p];</span><br><span class="line">        p++;</span><br><span class="line">        ans+=<span class="built_in">dfs</span>(p,cur);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1388 六边形平面</title>
    <url>/posts/59654/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>现在有一个N<em>N的六边形网格平面（这种平面类似蜂窝形状）。下图是N=1,2,3,4条件下的具体形状，根据它们可以依次类推N=5,6,....。 现在你需要对N</em>N网格中一些格子进行上色，在给定的输入中这些格子被标记上字符‘X’，而不用上色的网格被标记为‘-’。上色时需要注意，如果两个被上色的格子有公共边，那么这两个格子需要被涂成不同的颜色。问最少需要多少种颜色来完成任务？</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>结论，最多三种颜色，判断一种两种行不行即可。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> T,n;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">120</span>][<span class="number">120</span>];</span><br><span class="line"><span class="keyword">int</span> col[<span class="number">120</span>][<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ck1</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x<span class="number">-1</span>&gt;<span class="number">0</span>&amp;&amp;a[x<span class="number">-1</span>][y];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ck2</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x<span class="number">-1</span>&gt;<span class="number">0</span>&amp;&amp;y+<span class="number">1</span>&lt;=n&amp;&amp;a[x<span class="number">-1</span>][y+<span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ck3</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> y<span class="number">-1</span>&gt;<span class="number">0</span>&amp;&amp;a[x][y<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">10</span>][<span class="number">10</span>]=&#123;&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> xx=x+f[i][<span class="number">0</span>],yy=y+f[i][<span class="number">1</span>];</span><br><span class="line">		<span class="keyword">if</span>(xx&lt;<span class="number">1</span>||yy&lt;<span class="number">1</span>||xx&gt;n||yy&gt;n||!a[xx][yy]) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">if</span>(col[x][y]==col[xx][yy]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">int</span> c)</span></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(t) <span class="keyword">return</span>;</span><br><span class="line">	col[x][y]=c;</span><br><span class="line">	<span class="keyword">if</span>(!<span class="built_in">check</span>(x,y))&#123;</span><br><span class="line">		t=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> xx=x+f[i][<span class="number">0</span>],yy=y+f[i][<span class="number">1</span>];</span><br><span class="line">		<span class="keyword">if</span>(xx&lt;<span class="number">1</span>||yy&lt;<span class="number">1</span>||xx&gt;n||yy&gt;n||col[xx][yy]||!a[xx][yy]) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="built_in">dfs</span>(x+f[i][<span class="number">0</span>],y+f[i][<span class="number">1</span>],c^<span class="number">3</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">		t=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">memset</span>(col,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(col));</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">		<span class="keyword">char</span> s[<span class="number">60</span>];</span><br><span class="line">		<span class="keyword">int</span> fg=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s);</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(s[j<span class="number">-1</span>]==<span class="string">&#x27;X&#x27;</span>)&#123;</span><br><span class="line">					a[i][j]=<span class="number">1</span>;</span><br><span class="line">					fg=<span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> a[i][j]=<span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!fg)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;0\n&quot;</span>);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		fg=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(a[i][j]==<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">				<span class="keyword">int</span> cur=<span class="built_in">ck1</span>(i,j)|<span class="built_in">ck2</span>(i,j)|<span class="built_in">ck3</span>(i,j);</span><br><span class="line">				<span class="keyword">if</span>(cur&gt;<span class="number">0</span>) fg=<span class="number">0</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(fg)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(a[i][j]&amp;&amp;!col[i][j]) <span class="built_in">dfs</span>(i,j,<span class="number">1</span>);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!t)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;2\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;3\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1403 有趣的堆栈</title>
    <url>/posts/15049/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>大家都熟悉堆栈操作。一个堆栈一般有两种操作，push和pop。假设所有操作都是合法的并且最终堆栈为空。我们可以有很多方法记录堆栈的操作， （1） 对每个pop操作，我们记录它之前一共有多少个push操作。 （2） 对每个pop操作，我们记录这个被Pop的元素曾经被压上了几个。 例如：操作push, push, pop, push, push, pop, push, pop, pop, pop 用第一种方法 记录为 2, 4, 5, 5, 5 用第二种方法 记录为 0, 0, 0, 2, 4 这两种记录方法可以互相转化，我们的问题是，给定第二种记录方法的序列，请求出第一种记录方法的序列。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>第i个位置变成i，然后扫到几，就在他前面几个数上加1，我也不知道为啥，推出来的。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="comment">//#include&lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,x;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1000020</span>];</span><br><span class="line"><span class="keyword">char</span> pbuf[<span class="number">100000</span>],*pp=pbuf;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(pp-pbuf==<span class="number">100000</span>) <span class="built_in">fwrite</span>(pbuf,<span class="number">1</span>,<span class="number">100000</span>,stdout),pp=pbuf;</span><br><span class="line">    *pp++=c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">write</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> sta[<span class="number">35</span>];</span><br><span class="line">    <span class="keyword">int</span> top=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span>&#123;sta[top++]=x%<span class="number">10</span>,x/=<span class="number">10</span>;&#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">while</span>(top) <span class="built_in">push</span>(sta[--top]+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">    <span class="built_in">push</span>(<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    n=<span class="built_in">rd</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        x=<span class="built_in">rd</span>();</span><br><span class="line">        <span class="keyword">if</span>(x)&#123;</span><br><span class="line">            f[i-x<span class="number">-1</span>]++;</span><br><span class="line">            f[i<span class="number">-1</span>]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">register</span> <span class="keyword">int</span> las=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">register</span> <span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        las=<span class="number">1</span>+las+f[i<span class="number">-1</span>];</span><br><span class="line">        <span class="built_in">write</span>(las);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fwrite</span>(pbuf,<span class="number">1</span>,pp-pbuf,stdout);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1412 AVL树的种类</title>
    <url>/posts/52032/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>平衡二叉树(AVL树），是指左右子树高度差至多为1的二叉树，并且该树的左右两个子树也均为AVL树。 现在问题来了，给定AVL树的节点个数n，求有多少种形态的AVL树恰好有n个节点。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>f[n][h]代表n个节点，高度为h的AVL树的种数。</p>
<p>f[n][h]=f[n-i-1][h-1]×f[i][h-1]+2×f[n-i-1][h-2]×f[i][h-1] 0&lt;=k&lt;n</p>
<p>左右子树都是h-1层，或者左右子树一个是h-1层，一个是h-2层，由于不对称要×2。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll f[<span class="number">2020</span>][<span class="number">22</span>],ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">	f[<span class="number">1</span>][<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=<span class="number">20</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=n;j++)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;j;k++)&#123;</span><br><span class="line">				f[j][i]=(f[j][i]+f[j<span class="number">-1</span>-k][i<span class="number">-1</span>]*f[k][i<span class="number">-1</span>])%mod;</span><br><span class="line">				f[j][i]=(f[j][i]+<span class="number">2</span>*f[j<span class="number">-1</span>-k][i<span class="number">-2</span>]*f[k][i<span class="number">-1</span>])%mod;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">20</span>;i++)&#123;</span><br><span class="line">		ans=(ans+f[n][i])%mod;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1417 天堂里的游戏</title>
    <url>/posts/25513/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>正当Noder惊魂未定的时候，走来一个美女，要求和他一起玩个数学游戏。美女提议：“让我们各自亮出硬币的一面，或正或反。如果我们都是正面，那么我给你A元，如果我们都是反面，我给你B元（A + B为偶数）。剩下的情况你给我（A + B） / 2元就可以了。</p>
<p>Noder知道这个游戏他多半要输，可他并不在乎，他只想让自己输的慢一点。</p>
<p>那么你来帮美女计算一下，她选择出正面的概率应该是多少（以最简分数形式输出）？</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>混合策略纳什平衡，详见<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTclQkElQjMlRTQlQkIlODAlRTUlQjklQjMlRTglQTElQTEvMTMyNTkxMD9mcj1hbGFkZGlu">纳什平衡-百度百科<i class="fa fa-external-link-alt"></i></span></p>
<p>设你出正面和反面概率是x,(1-x)，美女出正面和反面概率是y,(1-y)。列表，写出美女出正面，你的期望收益，美女出反面，你的期望收益，让两者相等，否则美女可以通过改变她的概率来使你的期望收益降低。</p>
<table>
<thead>
<tr class="header">
<th style="text-align: center;">美女</th>
<th style="text-align: center;">正面</th>
<th style="text-align: center;">反面</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td style="text-align: center;">正面</td>
<td style="text-align: center;">A</td>
<td style="text-align: center;">-(A+B)/2</td>
</tr>
<tr class="even">
<td style="text-align: center;">反面</td>
<td style="text-align: center;">-(A+B)/2</td>
<td style="text-align: center;">B</td>
</tr>
</tbody>
</table>
<p>A * x - (A+B)/2 * (1-x) = -(A+B)/2 * x + B * ( 1-x )</p>
<p>解出x = (a+3b) / 4(a+b)</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353LL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> data=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) ch=<span class="built_in">getchar</span>();<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) data=data*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=<span class="built_in">getchar</span>();<span class="keyword">return</span> data;&#125;</span><br><span class="line"><span class="function">ll <span class="title">lowspeed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;ll cur=a,ans=<span class="number">0</span>;<span class="keyword">while</span>(b)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans+cur)%p;cur=(cur+cur)%p;b&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> ans%p;&#125;</span><br><span class="line"><span class="function">ll <span class="title">speed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;ll cur=a,ans=<span class="number">1</span>;<span class="keyword">while</span>(b)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=<span class="built_in">lowspeed</span>(ans,cur,p)%p;cur=<span class="built_in">lowspeed</span>(cur,cur,p)%p;b&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> ans%p;&#125;</span><br><span class="line">ll T,A,B;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        cin&gt;&gt;A&gt;&gt;B;</span><br><span class="line">        ll x=A+<span class="number">3</span>*B;</span><br><span class="line">        ll y=<span class="number">4</span>*(A+B);</span><br><span class="line">        ll gd=<span class="built_in">gcd</span>(x,y);</span><br><span class="line">        cout&lt;&lt;x/gd&lt;&lt;<span class="string">&#x27;/&#x27;</span>&lt;&lt;y/gd&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1420 数袋鼠好有趣</title>
    <url>/posts/27492/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有n只袋鼠。每只袋鼠的大小用一个整数表示。一只小袋鼠能装进一只大袋鼠的条件是，大袋鼠的大小至少是小袋鼠的两倍。 每只大袋鼠最多可以装一只袋鼠。小袋鼠被装进大袋鼠之后就不能再装其它的袋鼠了。 小袋鼠被装进大袋鼠之后就不能被我们看见了。请找出一个装袋鼠的方案，使得被看见的袋鼠最少。</p>
<p>（袋鼠不能3只套在一起）</p>
<p>输出一个整数，即最少能看见的袋鼠数量。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>排序，分成两半，前面和后面的匹配。一开始多了个等号一直错。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">500020</span>],ans;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	std::<span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">	ans=n;</span><br><span class="line">	<span class="keyword">int</span> p1=<span class="number">1</span>,p2=n/<span class="number">2</span>+<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(p1&lt;=n/<span class="number">2</span>&amp;&amp;p2&lt;=n)&#123;</span><br><span class="line">		<span class="keyword">while</span>(p1&lt;=n/<span class="number">2</span>&amp;&amp;p2&lt;=n&amp;&amp;a[p1]*<span class="number">2</span>&gt;a[p2]) p2++;</span><br><span class="line">		<span class="keyword">if</span>(p1&lt;=n/<span class="number">2</span>&amp;&amp;p2&lt;=n)&#123;</span><br><span class="line">			ans--;</span><br><span class="line">		&#125;</span><br><span class="line">		p1++;</span><br><span class="line">		p2++;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1421 最大MOD值</title>
    <url>/posts/57254/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有一个a数组，里面有n个整数。现在要从中找到两个数字(可以是同一个) ai,aj ，使得 ai mod aj 最大并且 ai ≥ aj。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>遍历模数，枚举倍数，对于每一个倍数，找到比倍数小的最大值。这个最大值之前预处理出来，注意细节。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> db double</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>) &#123;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">	<span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">200020</span>],mx,ans;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1000020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//io_opt;</span></span><br><span class="line">	n=<span class="built_in">rd</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		a[i]=<span class="built_in">rd</span>();</span><br><span class="line">		mx=<span class="built_in">max</span>(mx,a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">	n=<span class="built_in">unique</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n)-(a+<span class="number">1</span>);</span><br><span class="line">	a[n+<span class="number">1</span>]=<span class="number">1000000</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=a[i]+<span class="number">1</span>;j&lt;=a[i+<span class="number">1</span>];j++)&#123;</span><br><span class="line">			f[j]=a[i];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">2</span>;;k++)&#123;</span><br><span class="line">			<span class="keyword">int</span> sum=k*a[i]&gt;<span class="number">1000000</span>?mx:f[k*a[i]];</span><br><span class="line">			ans=<span class="built_in">max</span>(ans,sum%a[i]);</span><br><span class="line">			<span class="keyword">if</span>(k*a[i]&gt;<span class="number">1000000</span>) <span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1429 巧克力</title>
    <url>/posts/29472/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>现在有两个块巧克力一块大小是𝑎1 × 𝑏1 的，另外一块大小是𝑎2 × 𝑏2 的。</p>
<p>现在要把两块巧克力变成面积一样大小，可以使用下列两种方法：</p>
<p>· 可以沿横向或纵向的网格线分成两等分，然后吃掉其中的一份。</p>
<p>· 可以沿横向或纵向的网格线分成2/3,1/3的两份，吃掉小的那一份。</p>
<p>因此使用第一种方法会留一半巧克力，用第二种方法会留下2/3巧克力。</p>
<p>两种方法并不总是可行的，有些时候两种方法都不能再用了。比如巧克力大小是16 × 23的时候，可以使用第一种方法，但是不能使用第二种方法。当大小是20 × 18的时候，可以使用第一种方法或者第二种方法。如果大小是5 × 7的时候，两种方法都不能使用。</p>
<p>问最少要操作几次才能使得两块巧克力的面积是一样的。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>要求面积相等，看面积里面有多少2和3的因子，有2做操作1，有3做操作1和2，去掉2、3之后得到的数一样就可行，答案是两块巧克力的操作一、操作二分别做差，绝对值之和。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y==<span class="number">0</span>?x:<span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">speed</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur;</span><br><span class="line">        cur=cur*cur;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//埃式筛法</span></span><br><span class="line">    <span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">    <span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">                ipr[j]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            pri[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ll x,y,s1,s2;</span><br><span class="line">ll n1,m1,n2,m2;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">    s1=x*y;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">    s2=x*y;</span><br><span class="line">    <span class="keyword">while</span>(s1%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        n1++;</span><br><span class="line">        s1&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(s1%<span class="number">3</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        n1++,m1++;</span><br><span class="line">        s1/=<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(s2%<span class="number">2</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        n2++;</span><br><span class="line">        s2&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(s2%<span class="number">3</span>==<span class="number">0</span>)&#123;</span><br><span class="line">        n2++,m2++;</span><br><span class="line">        s2/=<span class="number">3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(s1!=s2)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">abs</span>(n1-n2)+<span class="built_in">abs</span>(m1-m2));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1435 位数阶乘</title>
    <url>/posts/13832/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>X是一个n位数的正整数 (𝑥=𝑎0𝑎1...𝑎𝑛−1)</p>
<p>现在定义 F(x)=∏𝑖=0𝑛−1(𝑎𝑖!) ， 比如F(135)=1!<em>3!</em>5!=720.</p>
<p>我们给定一个n位数的整数X(至少有一位数大于1，X中可能有前导0)，</p>
<p>然后我们去找一个正整数(s)符合以下条件：</p>
<p>1.这个数尽可能大，</p>
<p>2.这个数中不能含有数字0或1。</p>
<p>3.F(s)=F(x)</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>把2到9阶乘拆开，发现质因子7的时候必选7或8或9，但8和9能拆开，这样数位更多，更优，向下同理，因此拆成2，3，5，7组成的即可。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll tp,n;</span><br><span class="line"><span class="keyword">int</span> sum[<span class="number">7</span>];</span><br><span class="line"><span class="keyword">int</span> num[<span class="number">7</span>]=&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">7</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">7</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;tp&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        <span class="keyword">int</span> tmp=n%<span class="number">10</span>;</span><br><span class="line">        <span class="built_in"><span class="keyword">switch</span></span>(tmp)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:sum[<span class="number">0</span>]+=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">3</span>:sum[<span class="number">0</span>]+=<span class="number">1</span>;sum[<span class="number">1</span>]+=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:sum[<span class="number">0</span>]+=<span class="number">3</span>;sum[<span class="number">1</span>]+=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">5</span>:sum[<span class="number">0</span>]+=<span class="number">3</span>;sum[<span class="number">1</span>]+=<span class="number">1</span>;sum[<span class="number">2</span>]+=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">6</span>:sum[<span class="number">0</span>]+=<span class="number">4</span>;sum[<span class="number">1</span>]+=<span class="number">2</span>;sum[<span class="number">2</span>]+=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">7</span>:sum[<span class="number">0</span>]+=<span class="number">4</span>;sum[<span class="number">1</span>]+=<span class="number">2</span>;sum[<span class="number">2</span>]+=<span class="number">1</span>;sum[<span class="number">3</span>]+=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:sum[<span class="number">0</span>]+=<span class="number">7</span>;sum[<span class="number">1</span>]+=<span class="number">2</span>;sum[<span class="number">2</span>]+=<span class="number">1</span>;sum[<span class="number">3</span>]+=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">9</span>:sum[<span class="number">0</span>]+=<span class="number">7</span>;sum[<span class="number">1</span>]+=<span class="number">4</span>;sum[<span class="number">2</span>]+=<span class="number">1</span>;sum[<span class="number">3</span>]+=<span class="number">1</span>;<span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        n/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans[<span class="number">3</span>]+=sum[<span class="number">3</span>];</span><br><span class="line">    sum[<span class="number">2</span>]-=sum[<span class="number">3</span>];</span><br><span class="line">    sum[<span class="number">1</span>]-=sum[<span class="number">3</span>]*<span class="number">2</span>;</span><br><span class="line">    sum[<span class="number">0</span>]-=sum[<span class="number">3</span>]*<span class="number">4</span>;</span><br><span class="line">    ans[<span class="number">2</span>]+=sum[<span class="number">2</span>];</span><br><span class="line">    sum[<span class="number">1</span>]-=sum[<span class="number">2</span>];</span><br><span class="line">    sum[<span class="number">0</span>]-=sum[<span class="number">2</span>]*<span class="number">3</span>;</span><br><span class="line">    ans[<span class="number">1</span>]+=sum[<span class="number">1</span>];</span><br><span class="line">    sum[<span class="number">0</span>]-=sum[<span class="number">1</span>];</span><br><span class="line">    ans[<span class="number">0</span>]+=sum[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=ans[i];j++)&#123;</span><br><span class="line">            cout&lt;&lt;num[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>简单题</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1434 区间LCM</title>
    <url>/posts/36826/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>一个整数序列S的LCM（最小公倍数）是指最小的正整数X使得它是序列S中所有元素的倍数，那么LCM(S)=X。</p>
<p>例如，LCM(2)=2,LCM(4,6)=12,LCM(1,2,3,4,5)=60。</p>
<p>现在给定一个整数N（1&lt;=N&lt;=1000000）,需要找到一个整数M，满足M&gt;N，同时LCM(1,2,3,4,...,N-1,N) 整除 LCM(N+1,N+2,....,M-1,M)，即LCM(N+1,N+2,....,M-1,M)是LCM(1,2,3,4,...,N-1,N) 的倍数.求最小的M值。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>提供几种等价的做法。</p>
<p>官方：保证[1,N]区间每个质数的指数最大值在[N+1,M]间至少出现一次。</p>
<p>题解1：2*n必然满足条件，且如果n和LCM(1,2,3,...n-1)的gcd=n，则LCM(1,2,3,...,n-1)=LCM(1,2,3,...,n-1,n)，那么n--，找到最小的n即可。发现n和LCM(1,2,3,...n-1)的gcd=n在n不是单个质数幂次时成立，就从n一路质因数分解下来。</p>
<p>我的做法：对小于等于n的每个质数查找幂次，找到最大的*2即可。</p>
<blockquote>
<p>我参考的做法：对小于n的每个质数q： 计算最高次幂r, q^r &lt; n 计算最大倍数k， k* q^r &lt; n ret = max(ret, (k+1)* q^r)</p>
</blockquote>
<p>思路从这里来的，不过没明白这位老哥的做法，猜测一下，如果k&gt;1必然会存在qr&lt;st&lt;n，所以求出来的k必然等于1，就是我这个做法。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e6</span>; </span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//埃式筛法 </span></span><br><span class="line">	<span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">	<span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">	ipr[<span class="number">1</span>]=<span class="literal">false</span>;	</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">			i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">				ipr[j]=<span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">			pri[++cnt]=i;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> T,n;</span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">	ll ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)&#123;</span><br><span class="line">		ll cur=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;cur&lt;=n;j++)&#123;</span><br><span class="line">			cur*=pri[i];</span><br><span class="line">		&#125;</span><br><span class="line">		cur/=pri[i];</span><br><span class="line">		ans=<span class="built_in">max</span>(ans,cur);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">prime</span>();</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,<span class="built_in">solve</span>(n));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1453 抽彩球</title>
    <url>/posts/52120/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>一个袋子中有n个彩球，他们用k种不同的颜色染色。颜色被从1到k编号。同一种颜色的球看成是一样的。现在从袋中一个一个的拿出球来，直到拿完所有的球。对于所有颜色为i (1&lt;=i&lt;=k-1)的球，他的最后一个球总是在编号比他大的球拿完之前拿完，问这样情况有多少种。</p>
<p>样例解释：这个样例中有2个1号颜色的球，2个2号颜色的球，1个3号颜色的球。三种方案是： 1 2 1 2 3 1 1 2 2 3 2 1 1 2 3</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>我们先每种颜色各取出来一个，然后按顺序摆放，假设这就是最后一个球，然后按顺序摆其他球。</p>
<p>比如我要摆i号球，i号球一共有a[i]个，i号球的最后一个球，前面已经有sum[i-1]个球，那我们在摆第1个i号球时，有sum[i-1]+1种选择，第2个有sum[i-1]+2种，第a[i]-1个有sum[i-1]+a[i]-1，即sum[i]-1种，最后要除以(a[i]-1)!，因为没有顺序。就是说(sum[i-1]+1)(sum[i-1]+2)...(sum[i-1]+a[i]-1)/(a[i]-1)!，即C[sum[i]-1][a[i]-1]种可能，相乘即可，可以用费马小定理来处理除法。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line">ll mod=<span class="number">1000000007</span>;</span><br><span class="line">ll k,a[<span class="number">1020</span>],ans=<span class="number">1</span>,f1[<span class="number">1020</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>&#125;,f2[<span class="number">1020</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="function">ll <span class="title">speed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;</span><br><span class="line">	ll cur=a,ans=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(b)&#123;</span><br><span class="line">		<span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=ans*cur%p;</span><br><span class="line">		cur=cur*cur%p;</span><br><span class="line">		b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">1000</span>;i++)&#123;</span><br><span class="line">		f1[i]=f1[i<span class="number">-1</span>]*i%mod;</span><br><span class="line">		f2[i]=f2[i<span class="number">-1</span>]*<span class="built_in">speed</span>(i,mod<span class="number">-2</span>,mod)%mod;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;k);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;a[i]);</span><br><span class="line">		a[i]+=a[i<span class="number">-1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> sum=a[i]<span class="number">-1</span>,part=a[i]-a[i<span class="number">-1</span>]<span class="number">-1</span>;</span><br><span class="line">		ans=ans*f1[sum]%mod*f2[part]%mod*f2[sum-part]%mod;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1464 半回文</title>
    <url>/posts/32449/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>一个字符串t是半回文的条件是，对于所有的奇数𝑖(1≤𝑖≤|𝑡|+12)，𝑡𝑖 = 𝑡|𝑡| − 𝑖 + 1 始终成立，|t|表示字符串t的长度。下标从1开始。例如&quot;abaa&quot;, &quot;a&quot;, &quot;bb&quot;, &quot;abbbaa&quot;都是半回文，而&quot;ab&quot;, &quot;bba&quot;和&quot;aaabaa&quot;则不是。</p>
<p>现在有一个字符串s，只由小写字母a,b构成，还有一个数字k。现在要求找出s的半回文子串中字典序排在第k位的串，字符串可以是一样，只要所在的位置不同就是不一样的串。</p>
<p>样例解释：</p>
<p>这个样例中半回文子串是 a, a, a, a, aa, aba, abaa, abba, abbabaa, b, b, b, b, baab,bab, bb, bbab, bbabaab (按照字典序排序).</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>dp预处理出i到j是不是半回文，然后字典树上遍历。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y==<span class="number">0</span>?x:<span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">speed</span><span class="params">(ll a,ll b,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    ll cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur%p;</span><br><span class="line">        cur=cur*cur%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="comment">/*int cnt,pri[MAXN/5];</span></span><br><span class="line"><span class="comment">void prime()&#123;//埃式筛法</span></span><br><span class="line"><span class="comment">    int N=sqrt(MAXN)+0.5,mul;</span></span><br><span class="line"><span class="comment">    memset(ipr,true,sizeof(ipr));</span></span><br><span class="line"><span class="comment">    ipr[1]=false;</span></span><br><span class="line"><span class="comment">    for(int i=2;i&lt;=N;i++)&#123;</span></span><br><span class="line"><span class="comment">        if(ipr[i]==true)&#123;</span></span><br><span class="line"><span class="comment">            i==2?mul=1:mul=2;</span></span><br><span class="line"><span class="comment">            for(int j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span></span><br><span class="line"><span class="comment">                ipr[j]=false;</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    for(int i=2;i&lt;=MAXN;i++)&#123;</span></span><br><span class="line"><span class="comment">        if(ipr[i]==true)&#123;</span></span><br><span class="line"><span class="comment">            pri[++cnt]=i;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="keyword">int</span> k,len,cnt;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">5020</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> d,t;</span><br><span class="line">    <span class="keyword">int</span> nex[<span class="number">2</span>];</span><br><span class="line">&#125;e[<span class="number">5500020</span>];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">5020</span>][<span class="number">5020</span>];</span><br><span class="line"><span class="keyword">int</span> vis[<span class="number">5020</span>];</span><br><span class="line"><span class="keyword">int</span> ct=<span class="number">0</span>,ansn;</span><br><span class="line"><span class="keyword">bool</span> fg=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">char</span> ans[<span class="number">5020</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur,<span class="keyword">int</span> layer)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fg) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(layer!=<span class="number">0</span>)&#123;</span><br><span class="line">        ans[layer]=e[cur].d+<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ct+=e[cur].t;</span><br><span class="line">    <span class="keyword">if</span>(ct&gt;=k)&#123;</span><br><span class="line">        fg=<span class="literal">true</span>;</span><br><span class="line">        ansn=layer;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">1</span>;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(e[cur].nex[i])&#123;</span><br><span class="line">            <span class="built_in">dfs</span>(e[cur].nex[i],layer+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">    len=<span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=len<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        dp[i][i]=<span class="number">1</span>;</span><br><span class="line">        vis[i]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;len;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i]==s[j])&#123;</span><br><span class="line">                <span class="keyword">if</span>(i+<span class="number">2</span>&gt;=j<span class="number">-2</span>)&#123;</span><br><span class="line">                    dp[i][j]=<span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    dp[i][j]=dp[i+<span class="number">2</span>][j<span class="number">-2</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(dp[i][j]) vis[i]=j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cur;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;len;i++)&#123;</span><br><span class="line">        cur=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=vis[i];j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> c=s[j]-<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span>(!e[cur].nex[c])&#123;</span><br><span class="line">                e[cur].nex[c]=++cnt;</span><br><span class="line">            &#125;</span><br><span class="line">            cur=e[cur].nex[c];</span><br><span class="line">            e[cur].d=c;</span><br><span class="line">            <span class="keyword">if</span>(dp[i][j]) e[cur].t++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ansn;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,ans[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>字符串</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1486 大大走格子</title>
    <url>/posts/31286/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有一个h行w列的棋盘，里面有一些格子是不能走的，现在要求从左上角走到右下角的方案数。（只能向右和向下走）</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>黑点里加入右下的点，每个点求一个ans[i]，代表走到这个点的方案数。</p>
<p>ans[i]初始为C(n+m-2,m-1)，对于所有在它左上的点，都减去那个点的ans[j]乘i、j之间的方案数。</p>
<p>（每个黑点，求ans的时候是求：不经过其左上所有的黑点，到它的方案数；用的时候是减去：经过这个点到右下的所有可能，此时路径没有经过当前黑点左上的黑点，因此每个黑点的ans是独立的。）</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y==<span class="number">0</span>?x:<span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">speed</span><span class="params">(ll a,ll b,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    ll cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur%p;</span><br><span class="line">        cur=cur*cur%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//埃式筛法</span></span><br><span class="line">    <span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">    <span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">                ipr[j]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            pri[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,t;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    ll ans;</span><br><span class="line">&#125;e[<span class="number">2020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.x==y.x) <span class="keyword">return</span> x.y&lt;y.y;</span><br><span class="line">    <span class="keyword">return</span> x.x&lt;y.x;</span><br><span class="line">&#125;</span><br><span class="line">ll jc[<span class="number">200020</span>]=&#123;<span class="number">1</span>&#125;;</span><br><span class="line">ll fjc[<span class="number">200020</span>]=&#123;<span class="number">1</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">C</span><span class="params">(<span class="keyword">int</span> nn,<span class="keyword">int</span> mm)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">mo</span>(<span class="built_in">mo</span>(jc[nn+mm]*fjc[nn],mod)*fjc[mm],mod);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">200000</span>;i++)&#123;</span><br><span class="line">        jc[i]=jc[i<span class="number">-1</span>]*i%mod;</span><br><span class="line">        fjc[i]=<span class="built_in">speed</span>(jc[i],mod<span class="number">-2</span>,mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;t);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;e[i].x,&amp;e[i].y);</span><br><span class="line">        e[i].ans=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    e[t+<span class="number">1</span>]=(E)&#123;n,m,<span class="number">0LL</span>&#125;;</span><br><span class="line">    <span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+t,cmp);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t+<span class="number">1</span>;i++)&#123;</span><br><span class="line">        e[i].ans=<span class="built_in">C</span>(e[i].x<span class="number">-1</span>,e[i].y<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(e[j].x&lt;=e[i].x&amp;&amp;e[j].y&lt;=e[i].y)&#123;</span><br><span class="line">                e[i].ans-=e[j].ans*<span class="built_in">C</span>(e[i].x-e[j].x,e[i].y-e[j].y);</span><br><span class="line">            &#125;</span><br><span class="line">            e[i].ans=(e[i].ans+mod*(ll)mod)%mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,e[t+<span class="number">1</span>].ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1456 小K的技术</title>
    <url>/posts/29169/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>苏塞克王国是世界上创新技术的领先国家，在王国中有n个城市，标记为1到n。</p>
<p>由于小K的研究，我们最终能过在两个城市之间建立传输管道，一个传输管道能单向连接两个城市，即，一个从城市x到城市y的传输管道不能被用于从城市y传输到城市x。在每个城市之间的运输系统已经建立完善，因此，如果从城市x到城市y的管道和从城市y到城市z的管道都被已经被建立，人们能够立即从x到z。</p>
<p>小K也研究了国家政治，他认为在这m对城市(ai, bi) (1 ≤ i ≤ m)之间的传输尤其重要。他正在计划为每个重要城市对(ai, bi)建立传输管道，通过使用一个或多个传输管道，我们可以从城市ai到城市bi（但不需要从城市bi到城市ai）。我们要找出必须建立的传输管道的最小数。至今，还没有传输管道被建立，在每个城市之间也没有其他有效的传输方式。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>一个弱连通图，如果不包含强连通分量，可以按照拓扑排序连边，则对答案的贡献为n-1，如果包含强连通分量，拓扑以后还有环，对答案的贡献是n，因此先用Tarjan缩点，然后并查集合并弱连通图求个数，再把包含强连通分量的弱连通图个数求出来，答案是点数-(弱连通图个数-含有强连通分量的弱连通图个数)。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">100020</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXM=<span class="number">100020</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,idx,cnt,mm;</span><br><span class="line"><span class="keyword">int</span> g[MAXN],dfn[MAXN],low[MAXN],p2p[MAXN];</span><br><span class="line"><span class="keyword">bool</span> instack[MAXN];</span><br><span class="line">stack&lt;<span class="keyword">int</span>&gt;s;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;belong[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> u,v,nex;</span><br><span class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> E x)<span class="keyword">const</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(u==x.u) <span class="keyword">return</span> v&lt;x.v;</span><br><span class="line">		<span class="keyword">return</span> u&lt;x.u;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> E x)<span class="keyword">const</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> u==x.u&amp;&amp;v==x.v&amp;&amp;nex==x.nex;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;e[MAXM];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">	dfn[u]=low[u]=++idx;</span><br><span class="line">	s.<span class="built_in">push</span>(u);</span><br><span class="line">	instack[u]=<span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=g[u];i&gt;<span class="number">0</span>;i=e[i].nex)&#123;</span><br><span class="line">		<span class="keyword">int</span> v=e[i].v;</span><br><span class="line">		<span class="keyword">if</span>(!dfn[v])&#123;</span><br><span class="line">			<span class="built_in">Tarjan</span>(v);</span><br><span class="line">			low[u]=<span class="built_in">min</span>(low[u],low[v]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(instack[v])&#123;</span><br><span class="line">			low[u]=<span class="built_in">min</span>(low[u],dfn[v]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(dfn[u]==low[u])&#123;</span><br><span class="line">		++cnt;</span><br><span class="line">		<span class="keyword">int</span> cur;</span><br><span class="line">		<span class="keyword">do</span>&#123;</span><br><span class="line">			cur=s.<span class="built_in">top</span>();s.<span class="built_in">pop</span>();</span><br><span class="line">			instack[cur]=<span class="literal">false</span>;</span><br><span class="line">			belong[cnt].<span class="built_in">push_back</span>(cur);</span><br><span class="line">			p2p[cur]=cnt;</span><br><span class="line">		&#125;<span class="keyword">while</span>(cur!=u);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">bool</span> ltk[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">int</span> ltk_num;</span><br><span class="line"><span class="keyword">bool</span> havltk[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">int</span> havltk_num;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> f[x]==<span class="number">0</span>?x:f[x]=<span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	io_opt;</span><br><span class="line">	cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">	<span class="keyword">int</span> x,y;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">		e[i]=(E)&#123;x,y,g[x]&#125;;g[x]=i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!dfn[i]) <span class="built_in">Tarjan</span>(i);	</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> u=e[i].u,v=e[i].v;</span><br><span class="line">		<span class="keyword">if</span>(!p2p[u]||!p2p[v]||p2p[u]==p2p[v])&#123;</span><br><span class="line">			e[i].u=e[i].v=<span class="number">1000000</span>;</span><br><span class="line">			e[i].nex=<span class="number">1000000</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			e[i].u=p2p[u];</span><br><span class="line">			e[i].v=p2p[v];</span><br><span class="line">			e[i].nex=<span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+m);</span><br><span class="line">	mm=<span class="built_in">unique</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+m)-(e+<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">while</span>(e[mm].nex==<span class="number">1000000</span>) mm--;</span><br><span class="line">	<span class="built_in">memset</span>(g,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(g));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=mm;i++)&#123;</span><br><span class="line">		<span class="comment">//cout&lt;&lt;e[i].u&lt;&lt;&#x27; &#x27;&lt;&lt;e[i].v&lt;&lt;endl;</span></span><br><span class="line">		e[i].nex=g[e[i].u];</span><br><span class="line">		g[e[i].u]=i;</span><br><span class="line">		<span class="keyword">int</span> u=<span class="built_in">find</span>(e[i].u),v=<span class="built_in">find</span>(e[i].v);</span><br><span class="line">		<span class="keyword">if</span>(u!=v)&#123;</span><br><span class="line">			f[u]=v;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> ff=<span class="built_in">find</span>(i);</span><br><span class="line">		ltk[ff]=<span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">if</span>(belong[i].<span class="built_in">size</span>()&gt;<span class="number">1</span>)&#123;</span><br><span class="line">			havltk[ff]=<span class="literal">true</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">if</span>(ltk[i]) ltk_num++;</span><br><span class="line">		<span class="keyword">if</span>(havltk[i]) havltk_num++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//cout&lt;&lt;ltk_num&lt;&lt;endl;</span></span><br><span class="line">	cout&lt;&lt;n-(ltk_num-havltk_num)&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1496 最小异或和</title>
    <url>/posts/13915/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>一个集合包含一组相互不同的数字。现在我们要去寻找一个集合，他要满足如下性质：</p>
<p>对于所有 𝑥(𝑥∈𝑆) ，要满足l ≤ x ≤ r;</p>
<p>1 ≤ |S| ≤ k;</p>
<p>设S中第i个元素是 𝑠𝑖 ;那么 𝑓(𝑆)=𝑠1 ⨁ 𝑠2 ⨁ ... ⨁ 𝑠|𝑆| 的值要尽可能小。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>k=1，答案为l。</p>
<p>k=2，如果偶数-奇数存在为1，但有特殊情况，答案为两者异或和和两个数取最小。</p>
<p>k=3，至少有三个连续的数，则必然&lt;=1，只需要找是否为0，两个数异或不可能为0，考虑l的最高位，记为第i位，如果要全消除，则另外两个数第i位必有1个1，1个0，又第i位为0的数不可能比l小，则此数i+1位为1，那么第i位为1的数第i+1位也为1。</p>
<p>即： 1 1 0 0 0 0 0 0 1 0 X X X X X X 1 X X X X X X ——左边界l</p>
<p>k=4，如果可以选择的数大于4个直接为0，否则4个数暴力找。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll l, r, k;</span><br><span class="line">ll a[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin &gt;&gt; l &gt;&gt; r &gt;&gt; k;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">1</span>) &#123;</span><br><span class="line">        cout &lt;&lt; l &lt;&lt; endl;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (k == <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (r - l + <span class="number">1</span> == <span class="number">2</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="built_in">min</span>(l, <span class="built_in">min</span>(r, l ^ r));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (k == <span class="number">3</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (l) &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            l &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="number">3LL</span> &lt;&lt; (cnt - <span class="number">1</span>)) &lt;= r) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;0&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (r - l + <span class="number">1</span> &gt; <span class="number">4</span>) &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;0&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            a[<span class="number">1</span>] = l, a[<span class="number">2</span>] = l + <span class="number">1</span>, a[<span class="number">3</span>] = l + <span class="number">2</span>, a[<span class="number">4</span>] = l + <span class="number">3</span>;</span><br><span class="line">            ll ans = <span class="number">1</span>;</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, a[<span class="number">1</span>] ^ a[<span class="number">2</span>] ^ a[<span class="number">3</span>]);</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, a[<span class="number">1</span>] ^ a[<span class="number">2</span>] ^ a[<span class="number">4</span>]);</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, a[<span class="number">1</span>] ^ a[<span class="number">3</span>] ^ a[<span class="number">4</span>]);</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, a[<span class="number">4</span>] ^ a[<span class="number">2</span>] ^ a[<span class="number">3</span>]);</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, a[<span class="number">1</span>] ^ a[<span class="number">2</span>] ^ a[<span class="number">3</span>] ^ a[<span class="number">4</span>]);</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1524 可除图的最大团</title>
    <url>/posts/47779/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>对于一般的图，最大团问题是一个NP-难的问题。然而，对于一些特殊的图，最大团问题可以有比较有效的解决方案。</p>
<p>关于最大团问题的概念，请百度之。^_^</p>
<p>在一个正整数集合A上定义可除图。 A = {a1, a2, ..., an} ，图上的顶点就是集合A中的数字。两个数字 ai 和 aj (i ≠ j) 之间有一条边的条件是 ai 能够被 aj 整除，或者 aj 能够被 ai 整除.</p>
<p>现在给定一个正整数集A，请找出这个集合所确定的可除图的最大团。</p>
<p>样例解释：在这个例子中，最大团是3，可以选择 {3,6,18}。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>很容易想到，从小到大构建一张有向图，一个数的因子向这个数连边，对于任意一个数a[i]，要计算1e6/a[i]次，连边复杂度1e6×(1/1+1/2+1/3+...+1/1e6)，是nlogn，然后拓扑排序做dp，结果就会发现，这样做过不了，是被卡常了。</p>
<p>然后可以用dp[i]表示对于数字i，最大团数量是多少，同样的循环就能过了。。。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">1000020</span>],dp[<span class="number">1000020</span>],f[<span class="number">1000020</span>];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">char</span> ch;</span><br><span class="line">	<span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>) &#123;<span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)f=<span class="number">-1</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">	<span class="keyword">return</span> f*x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	n=<span class="built_in">rd</span>();</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		a[i]=<span class="built_in">rd</span>();</span><br><span class="line">		f[a[i]]=<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(dp[a[i]]==<span class="number">0</span>) dp[a[i]]=<span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=a[i]*<span class="number">2</span>;j&lt;=a[n];j+=a[i])&#123;</span><br><span class="line">			<span class="keyword">if</span>(f[j])&#123;</span><br><span class="line">				dp[j]=<span class="built_in">max</span>(dp[j],dp[a[i]]+<span class="number">1</span>);</span><br><span class="line">				<span class="comment">//if(i==6) printf(&quot;%d %d\n&quot;,j,dp[j]);</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		ans=<span class="built_in">max</span>(ans,dp[a[i]]);</span><br><span class="line">		<span class="comment">//printf(&quot;%d\n&quot;,dp[a[i]]);</span></span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1523 非回文</title>
    <url>/posts/18728/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>一个字符串是非回文的，当且仅当，他只由前p个小写字母构成，而且他不包含长度大于等于2的回文子串。</p>
<p>给出长度为n的非回文串s。请找出字典序比s大的，而且字典序要最小的长度为n的非回文。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>非回文条件是s[i-2]!=j&amp;&amp;s[i-1]!=j，从前向后找。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="function">ll <span class="title">mo</span><span class="params">(ll a,ll p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y==<span class="number">0</span>?x:<span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">speed</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur;</span><br><span class="line">        cur=cur*cur;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//埃式筛法</span></span><br><span class="line">    <span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">    <span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">                ipr[j]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            pri[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,p;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">1020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;p);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s);</span><br><span class="line">    <span class="keyword">bool</span> fg=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> j=s[i]+<span class="number">1</span>;j&lt;<span class="string">&#x27;a&#x27;</span>+p;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">2</span>&amp;&amp;s[i<span class="number">-2</span>]==j) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">1</span>&amp;&amp;s[i<span class="number">-1</span>]==j) <span class="keyword">continue</span>;</span><br><span class="line">            fg=<span class="literal">true</span>;</span><br><span class="line">            s[i]=j;</span><br><span class="line">            t=i+<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(fg) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!fg)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=t;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> j=<span class="string">&#x27;a&#x27;</span>;j&lt;<span class="string">&#x27;a&#x27;</span>+p;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">2</span>&amp;&amp;s[i<span class="number">-2</span>]==j) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(i&gt;=<span class="number">1</span>&amp;&amp;s[i<span class="number">-1</span>]==j) <span class="keyword">continue</span>;</span><br><span class="line">            s[i]=j;<span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,s);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1535 深海探险</title>
    <url>/posts/47776/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>很久很久以前的一天，一位美男子来到海边，海上狂风大作。美男子希望在海中找到美人鱼，但是很不幸他只找到了章鱼怪。</p>
<p>然而，在世界的另一端，人们正在积极的收集怪物的行为信息，以便研制出强大的武器来对付章鱼怪。由于地震的多发，以及恶劣的天气，使得我们的卫星不能很好的定位怪物，从而不能很好的命中目标。第一次射击的分析结果会反映在一张由n个点和m条边组成的无向图上。现在让我们来确定这张图是不是可以被认为是章鱼怪。</p>
<p>为了简单起见，我们假设章鱼怪的形状是这样，他有一个球形的身体，然后有很多触须连接在他的身上。可以表现为一张无向图，在图中可以被认为由三棵或者更多的树（代表触须）组成，这些树的根在图中处在一个环中（这个环代表球形身体）。</p>
<p>题目保证，在图中没有重复的边，也没有自环。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>整个图是连通的，只有一个环说明有n个节点n条边，由于没有重边，所以环至少也是3个节点，可以用并查集，所有节点find都相等，并且点数等于边数即可。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y==<span class="number">0</span>?x:<span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">speed</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur;</span><br><span class="line">        cur=cur*cur;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//埃式筛法</span></span><br><span class="line">    <span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">    <span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">                ipr[j]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            pri[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[x]==<span class="number">0</span>?x:f[x]=<span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">if</span>(n!=m)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> x,y,u,v;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x,&amp;y);</span><br><span class="line">        u=<span class="built_in">find</span>(x),v=<span class="built_in">find</span>(y);</span><br><span class="line">        <span class="keyword">if</span>(u!=v) f[u]=v;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">find</span>(i)!=<span class="built_in">find</span>(i<span class="number">-1</span>))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;FHTAGN!\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1536 不一样的猜数游戏</title>
    <url>/posts/26359/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>瓦斯亚和皮台亚在玩一个简单的游戏。瓦斯亚心中想一个整数x，它是1到n之间的整数。然后皮台亚尝试着猜这个数字。</p>
<p>皮台亚每次问一个形如这样的问题：这个x是y的倍数吗？</p>
<p>这个游戏的流程是这样的：首先皮台亚把所有他想问的形如上述的问题都问出来（当然他也可以不问任何问题），然后瓦斯亚针对每一个问题给出yes或no的答案。最后皮台亚根据这些问题推断出瓦斯亚心中所想的x是哪个数字。</p>
<p>现在皮台亚想知道他最少要问多少个问题才能猜出1到n之间的那个数字。也就是说不管x是1到n之间的哪个数字只要问那些问题就能够确定那个数字了。</p>
<p>样例解释：</p>
<p>可以问是否是2，3，4这些数字倍数的三个问题。</p>
<p>如果都不是，说明是1.</p>
<p>如果是4的倍数，说明是4.</p>
<p>如果是3的倍数说明是3.</p>
<p>否则就是2。</p>
<p>没有比这更少的问题数目了。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>n以内所有质数以及他们不超过n的次方都要问。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e3</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//∞£ Ω…∏∑®</span></span><br><span class="line">    <span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">    <span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">                ipr[j]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            pri[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">prime</span>();</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt&amp;&amp;pri[i]&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> cur=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line">            cur*=pri[i];</span><br><span class="line">            <span class="keyword">if</span>(cur&lt;=n) ans++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1548 欧姆诺姆和糖果</title>
    <url>/posts/58686/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>一天，欧姆诺诺姆来到了朋友家里，他发现了许多糖果。有蓝色和红色两种。他知道每颗红色糖果重Wr克，每颗蓝色糖果重Wb克。吃一颗蓝色糖果会给他带来Hb的欢乐值，吃一颗红色糖果会给他带来Hr的欢乐值。</p>
<p>欧姆诺姆最多只能吃C克的糖果，而且每一颗糖果不能只吃一半。现在他想通过吃蓝色和红色的糖果来获得最大的欢乐值。</p>
<p>样例解释：每一种糖果吃两颗即可。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>我是水过去的，直接全选单位价值最高的，然后向下枚举。</p>
<p>证明见解题报告。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll w[<span class="number">10</span>],h[<span class="number">10</span>];</span><br><span class="line">ll c;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;c&gt;&gt;h[<span class="number">1</span>]&gt;&gt;h[<span class="number">2</span>]&gt;&gt;w[<span class="number">1</span>]&gt;&gt;w[<span class="number">2</span>];</span><br><span class="line">    db x1=(db)h[<span class="number">1</span>]/w[<span class="number">1</span>],x2=(db)h[<span class="number">2</span>]/w[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">if</span>(x1&lt;x2)&#123;</span><br><span class="line">        <span class="built_in">swap</span>(h[<span class="number">1</span>],h[<span class="number">2</span>]);</span><br><span class="line">        <span class="built_in">swap</span>(w[<span class="number">1</span>],w[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    ll x=c/w[<span class="number">1</span>],y=(c-x*w[<span class="number">1</span>])/w[<span class="number">2</span>];</span><br><span class="line">    ll ans=x*h[<span class="number">1</span>]+y*h[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100000</span>&amp;&amp;x-i&gt;=<span class="number">0</span>;i++)&#123;</span><br><span class="line">        ll xx=x-i,yy=(c-xx*w[<span class="number">1</span>])/w[<span class="number">2</span>];</span><br><span class="line">        ans=<span class="built_in">max</span>(ans,xx*h[<span class="number">1</span>]+yy*h[<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>简单题</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1605 棋盘问题</title>
    <url>/posts/10846/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>上帝创造了一个n*m棋盘，每一个格子都只有可能是黑色或者白色的。</p>
<p>亚当和夏娃在玩一个游戏，每次寻找边长为x的正方形，其中每个格子必须为黑色，然后将这些格子染白。</p>
<p>如果谁不能操作了，那么那个人就输了。</p>
<p>亚当喜欢质数。</p>
<p>夏娃喜欢1，但讨厌2。</p>
<p>因此他们规定，x只有可能是非2质数或者是1。</p>
<p>现在他们想知道，如果他们都用最优策略进行游戏，谁会赢。</p>
<p>上帝规定亚当先手。</p>
<p>样例解释：</p>
<p>这里x只有可能是1，因此经过3次操作后，夏娃无法操作，亚当胜。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>由于每次只能染色奇数个，只需要判断黑色的棋子有奇数还是偶数个即可。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> T,n,m,sum,x;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">120</span>][<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">	<span class="keyword">while</span>(T--)&#123;</span><br><span class="line">		sum=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n*m;i++)&#123;</span><br><span class="line">			<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">			<span class="keyword">if</span>(x==<span class="number">1</span>) sum++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(sum%<span class="number">2</span>)&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;yadang\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;xiawa\n&quot;</span>);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1562 玻璃切割</title>
    <url>/posts/23386/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>现在有一块玻璃，是长方形的（w 毫米× h 毫米），现在要对他进行切割。</p>
<p>切割的方向有两种，横向和纵向。每一次切割之后就会有若干块玻璃被分成两块更小的玻璃。在切割之后玻璃不会被移动。</p>
<p>现在想知道每次切割之后面积最大的一块玻璃是多少。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>倒着做。</p>
<p>做法1:</p>
<p>multiset，每次删除之后维护两端最大值。</p>
<p>做法2:</p>
<p>并查集维护。</p>
<h2 id="code1">Code1</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#define ll long long</span><br><span class="line">using namespace std;</span><br><span class="line">int w,h,n;</span><br><span class="line">multiset&lt;int&gt;msh;</span><br><span class="line">multiset&lt;int&gt;msv;</span><br><span class="line">typedef multiset&lt;int&gt;::iterator mtpoi;</span><br><span class="line">struct E&#123;</span><br><span class="line">	bool is_x;</span><br><span class="line">	int t;</span><br><span class="line">&#125;e[200020];</span><br><span class="line">char s[10];</span><br><span class="line">int cnt1,cnt2,a[200020],b[200020];</span><br><span class="line">int x;</span><br><span class="line">ll ans[200020];</span><br><span class="line">int main()&#123;</span><br><span class="line">	//printf(&quot;%f&quot;,log2(200000));</span><br><span class="line">	scanf(&quot;%d%d%d&quot;,&amp;h,&amp;w,&amp;n);</span><br><span class="line">	for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">		scanf(&quot;%s%d&quot;,s,&amp;x);</span><br><span class="line">		if(s[0]==&#x27;H&#x27;)&#123;</span><br><span class="line">			e[i].is_x=true;</span><br><span class="line">			a[++cnt1]=x;</span><br><span class="line">			msh.insert(x);</span><br><span class="line">		&#125;</span><br><span class="line">		else&#123;</span><br><span class="line">			e[i].is_x=false;</span><br><span class="line">			b[++cnt2]=x;</span><br><span class="line">			msv.insert(x);</span><br><span class="line">			//printf(&quot;%d\n&quot;,x);</span><br><span class="line">		&#125;</span><br><span class="line">		e[i].t=x;</span><br><span class="line">	&#125;</span><br><span class="line">	msh.insert(0);</span><br><span class="line">	msh.insert(w);</span><br><span class="line">	msv.insert(0);</span><br><span class="line">	msv.insert(h);</span><br><span class="line">	sort(a+1,a+1+cnt1);</span><br><span class="line">	sort(b+1,b+1+cnt2);</span><br><span class="line">	a[cnt1+1]=w;</span><br><span class="line">	b[cnt2+1]=h;</span><br><span class="line">	int mxh=0,mxv=0;</span><br><span class="line">	for(int i=1;i&lt;=cnt1+1;i++)&#123;</span><br><span class="line">		mxh=max(mxh,a[i]-a[i-1]);</span><br><span class="line">	&#125;</span><br><span class="line">	for(int i=1;i&lt;=cnt2+1;i++)&#123;</span><br><span class="line">		mxv=max(mxv,b[i]-b[i-1]);</span><br><span class="line">	&#125;</span><br><span class="line">	ans[1]=mxh;</span><br><span class="line">	ans[1]*=mxv;</span><br><span class="line"></span><br><span class="line">	for(int i=n;i&gt;=2;i--)&#123;</span><br><span class="line">		if(e[i].is_x==true)&#123;</span><br><span class="line">			msh.erase(e[i].t);</span><br><span class="line">			mtpoi r=msh.upper_bound(e[i].t);</span><br><span class="line">			mtpoi l=r;</span><br><span class="line">			l--;</span><br><span class="line">			mxh=max(mxh,*r-*l);//puts(&quot;1&quot;);</span><br><span class="line">		&#125;</span><br><span class="line">		else&#123;</span><br><span class="line">			msv.erase(e[i].t);</span><br><span class="line">			//printf(&quot;del %d\n&quot;,e[i].t);</span><br><span class="line">			mtpoi r=msv.upper_bound(e[i].t);</span><br><span class="line">			mtpoi l=r;</span><br><span class="line">			l--;</span><br><span class="line">			mxv=max(mxv,*r-*l);</span><br><span class="line">			//printf(&quot;%d %d\n&quot;,*l,*r);</span><br><span class="line">		&#125;</span><br><span class="line">		ans[n-i+2]=mxh;</span><br><span class="line">		ans[n-i+2]*=mxv;</span><br><span class="line">	&#125;</span><br><span class="line">	for(int i=n;i&gt;=1;i--)&#123;</span><br><span class="line">		printf(&quot;%lld\n&quot;,ans[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="code2">Code2</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;map&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">#define mem(ss) memset(ss,0,sizeof(ss))</span><br><span class="line">#define fo(d,s,t) for(int d=s;d&lt;=t;d++)</span><br><span class="line">#define fo0(d,s,t) for(int d=s;d&gt;=t;d--)</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">const ll mod=1e9+7;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line">ll gcd(ll a,ll b)&#123;return b==0?a:gcd(b,a%b);&#125;</span><br><span class="line">inline int rd() &#123;</span><br><span class="line">    char c = getchar(); int x = 0, f = 1;</span><br><span class="line">    while(c &lt; &#x27;0&#x27; || c &gt; &#x27;9&#x27;) &#123;if(c == &#x27;-&#x27;) f = -1; c = getchar();&#125;</span><br><span class="line">    while(c &gt;= &#x27;0&#x27; &amp;&amp; c &lt;= &#x27;9&#x27;) x = x * 10 + c - &#x27;0&#x27;, c = getchar();</span><br><span class="line">    return x * f;</span><br><span class="line">&#125;</span><br><span class="line">int w,h,n;</span><br><span class="line">struct E&#123;</span><br><span class="line">	int l,r;</span><br><span class="line">&#125;;</span><br><span class="line">E ww[200020],hh[200020];</span><br><span class="line">int wx[200020],hx[200020];</span><br><span class="line">char s1[20];</span><br><span class="line">int s2,cnt1,cnt2;</span><br><span class="line">struct S&#123;</span><br><span class="line">	char x;</span><br><span class="line">	int t;</span><br><span class="line">&#125;;</span><br><span class="line">S cur[200020];</span><br><span class="line">ll ans=0;</span><br><span class="line">ll anss[200020];</span><br><span class="line">int main()&#123;</span><br><span class="line">	w=rd();h=rd();n=rd();</span><br><span class="line">	//getchar();</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">    	s1[0]=getchar();</span><br><span class="line">    	s2=rd();</span><br><span class="line">    	//getchar();</span><br><span class="line">    	cur[i].x=s1[0];</span><br><span class="line">    	cur[i].t=s2;</span><br><span class="line">    	if(s1[0]==&#x27;H&#x27;)&#123;</span><br><span class="line">    		hx[++cnt1]=s2;</span><br><span class="line">    	&#125;</span><br><span class="line">    	else&#123;</span><br><span class="line">    		wx[++cnt2]=s2;</span><br><span class="line">    	&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(hx+1,hx+1+cnt1);</span><br><span class="line">    sort(wx+1,wx+1+cnt2);</span><br><span class="line">    hx[cnt1+1]=h;</span><br><span class="line">    wx[cnt2+1]=w;</span><br><span class="line">    int mxh=0,mxw=0;</span><br><span class="line">    for(int i=1;i&lt;=cnt1+1;i++)&#123;</span><br><span class="line">    	if(i&lt;=cnt1)hh[hx[i]].l=hx[i-1];</span><br><span class="line">    	if(i&lt;=cnt1)hh[hx[i]].r=hx[i+1];</span><br><span class="line">    	mxh=max(mxh,hx[i]-hx[i-1]);</span><br><span class="line">    	</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;=cnt2+1;i++)&#123;</span><br><span class="line">    	if(i&lt;=cnt2)ww[wx[i]].l=wx[i-1];</span><br><span class="line">    	if(i&lt;=cnt2)ww[wx[i]].r=wx[i+1];</span><br><span class="line">    	mxw=max(mxw,wx[i]-wx[i-1]);//</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=n;i&gt;=1;i--)&#123;</span><br><span class="line">    	ans=mxw;</span><br><span class="line">    	ans*=mxh;</span><br><span class="line">    	anss[i]=ans;</span><br><span class="line">    	if(cur[i].x==&#x27;H&#x27;)&#123;</span><br><span class="line">    		int tmp1,tmp2;</span><br><span class="line">    		tmp1=hh[hh[cur[i].t].l].r=hh[cur[i].t].r;</span><br><span class="line">    		tmp2=hh[hh[cur[i].t].r].l=hh[cur[i].t].l;</span><br><span class="line">    		mxh=max(tmp1-tmp2,mxh);//printf(&quot;-%d\n&quot;,mxh);</span><br><span class="line">    	&#125;</span><br><span class="line">    	else&#123;</span><br><span class="line">    		int tmp1,tmp2;</span><br><span class="line">    		tmp1=ww[ww[cur[i].t].l].r=ww[cur[i].t].r;</span><br><span class="line">    		tmp2=ww[ww[cur[i].t].r].l=ww[cur[i].t].l;</span><br><span class="line">    		mxw=max(tmp1-tmp2,mxw);</span><br><span class="line">    	&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">    	printf(&quot;%lld\n&quot;,anss[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1621 花钱买车牌</title>
    <url>/posts/11806/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>一个车牌号由n位数字组成。如果一个车牌至少有k位数字是相同的，那么我们就说这个车牌漂亮的车牌。现在华沙想要改变他自己的车牌，使得他的车牌变得漂亮。当然，改车牌是要花钱的。每改变一位数字所要花费的费用等于当前位上的新旧数字之差的绝对值。那么总费用就是每位上所花费用的总和。</p>
<p>举例如下，</p>
<p>旧牌为0123，新牌为7765，那么对应第一位所花费用为|0-7|＝7，第二位为|1-7|＝6，第三位为|2-6|＝4，第四位为|3-5|＝2，总和为7+6+4+2＝19</p>
<p>华沙想用最少的钱，使他的车牌变得漂亮起来。现在给定n，k，和旧牌的号码，计算换牌的最少费，以及新牌的号码，</p>
<p>如果最少费用的号码有多个，我们取字典序最小的那个。</p>
<p>样例解释：</p>
<p>在样例中，把第二个数字换成“8”花费|9-8|＝1，把第五个数字换成“8”也花了1。</p>
<p>把第六个数字换成“8”花费|6-8|＝2.总费用为1+1+2＝4，新号码为“888188”</p>
<p>两个长度为n的序列比较方法如下。</p>
<p>存在两个序列x，y，长度都是n。</p>
<p>如果存在i(1≤i≤n)和任意j(1≤j＜i)使得 xi＜yixi＜yi 并且 xj＝yjxj＝yj ，那么我们就说x比y小。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>0到9循环，每次排序改变前面的。</p>
<p>排序规则，先排差绝对值小的，相等先排数大的，这样字典序会改小，数还相等，如果小于当前循环的i，说明字典序会变大，就先排后面的，否则先排前面的。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	<span class="keyword">char</span> c;</span><br><span class="line">	<span class="keyword">int</span> pla;</span><br><span class="line">&#125;e[<span class="number">10020</span>];</span><br><span class="line">E ans[<span class="number">10020</span>];</span><br><span class="line">E cur[<span class="number">10020</span>];</span><br><span class="line"><span class="keyword">int</span> mn=<span class="number">1e9</span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">Ecmp</span><span class="params">(E x[],E y[])</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(x[i].c&lt;y[i].c) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(x[i].c&gt;y[i].c) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cpy</span><span class="params">(E x[],E y[])</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		x[i]=y[i];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">int</span> tmp=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ab</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x&gt;<span class="number">0</span>?x:-x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> xx=x.c-<span class="string">&#x27;0&#x27;</span>,yy=y.c-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="keyword">if</span>(<span class="built_in">ab</span>(xx-tmp)==<span class="built_in">ab</span>(yy-tmp))&#123;</span><br><span class="line">		<span class="keyword">if</span>(xx==yy)&#123;</span><br><span class="line">			<span class="keyword">if</span>(xx&gt;tmp)&#123;</span><br><span class="line">				<span class="keyword">return</span> x.pla&lt;y.pla;</span><br><span class="line">				<span class="comment">//cout&lt;&lt;x.pla&lt;&lt;&quot; before &quot;&lt;&lt;y.pla&lt;&lt;endl;</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span>&#123;</span><br><span class="line">				<span class="keyword">return</span> x.pla&gt;y.pla;</span><br><span class="line">				<span class="comment">//cout&lt;&lt;x.pla&lt;&lt;&quot; after &quot;&lt;&lt;y.pla&lt;&lt;endl;</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			<span class="keyword">return</span> xx&gt;yy;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">ab</span>(xx-tmp)&lt;<span class="built_in">ab</span>(yy-tmp);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp2</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> x.pla&lt;y.pla;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	io_opt;</span><br><span class="line">	cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">	cin&gt;&gt;s;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">		e[i+<span class="number">1</span>].c=s[i];</span><br><span class="line">		e[i+<span class="number">1</span>].pla=i+<span class="number">1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">int</span> cmn;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++)&#123;</span><br><span class="line">		cmn=<span class="number">0</span>;</span><br><span class="line">		<span class="built_in">cpy</span>(cur,e);</span><br><span class="line">		tmp=i;</span><br><span class="line">		<span class="built_in">sort</span>(cur+<span class="number">1</span>,cur+<span class="number">1</span>+n,cmp);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=k;j++)&#123;</span><br><span class="line">			cmn+=<span class="built_in">ab</span>(cur[j].c-<span class="string">&#x27;0&#x27;</span>-i);</span><br><span class="line">			cur[j].c=<span class="string">&#x27;0&#x27;</span>+i;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">/*if(i==2)&#123;</span></span><br><span class="line"><span class="comment">			for(int j=1;j&lt;=n;j++)&#123;</span></span><br><span class="line"><span class="comment">				cout&lt;&lt;cur[j].pla&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line"><span class="comment">			&#125;</span></span><br><span class="line"><span class="comment">			cout&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">		&#125;*/</span></span><br><span class="line">		<span class="built_in">sort</span>(cur+<span class="number">1</span>,cur+<span class="number">1</span>+n,cmp2);</span><br><span class="line">		<span class="keyword">if</span>(cmn&lt;mn||cmn==mn&amp;&amp;!<span class="built_in">Ecmp</span>(cur,ans))&#123;</span><br><span class="line">			mn=cmn;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">				ans[j]=cur[j];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;mn&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		cout&lt;&lt;ans[i].c;</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>简单题</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1639 绑鞋带</title>
    <url>/posts/47909/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有n根鞋带混在一起，现在重复n次以下操作：随机抽出两个鞋带头，把它们绑在一起。可以想象，这n次之后將不再有单独的鞋带头，n条鞋带系成了一些环。那么有多大概率刚好所有这些鞋带只形成了一个环？</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>f(n)可以转化为f(n-1)。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo0(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a, ll b)</span> </span>&#123; <span class="keyword">return</span> b == <span class="number">0</span> ? a : <span class="built_in">gcd</span>(b, a % b); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function">db <span class="title">fab</span><span class="params">(db x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; <span class="number">0</span> ? x : -x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">double</span> a[<span class="number">1020</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        a[i]=a[i<span class="number">-1</span>]*(<span class="number">2</span>*i<span class="number">-2</span>)/(<span class="number">2</span>*i<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.6f\n&quot;</span>,a[n]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1640 天气晴朗的魔法</title>
    <url>/posts/36377/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>51nod魔法学校近日开展了主题为“天气晴朗”的魔法交流活动。 N名魔法师按阵法站好，之后选取N - 1条魔法链将所有魔法师的魔力连接起来，形成一个魔法阵。 魔法链是做法成功与否的关键。每一条魔法链都有一个魔力值V，魔法最终的效果取决于阵中所有魔法链的魔力值的和。 由于逆天改命的魔法过于暴力，所以我们要求阵中的魔法链的魔力值最大值尽可能的小，与此同时，魔力值之和要尽可能的大。 现在给定魔法师人数N，魔法链数目M。求此魔法阵的最大效果。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>最小生成树求最大边最小值，然后求最小生成树。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll n,m;</span><br><span class="line">ll f[<span class="number">100020</span>];</span><br><span class="line">ll f2[<span class="number">100020</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Edge</span>&#123;</span></span><br><span class="line">	ll u,v,w;</span><br><span class="line">&#125;e[<span class="number">200020</span>]; </span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">cmp</span><span class="params">(Edge a,Edge b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.w&lt;b.w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">cmp2</span><span class="params">(Edge a,Edge b)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.w&gt;b.w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">find</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> f[x]==<span class="number">0</span>?x:f[x]=<span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">find2</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> f2[x]==<span class="number">0</span>?x:f2[x]=<span class="built_in">find2</span>(f2[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(ll &amp;x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	x=<span class="number">0</span>;ll f=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">	<span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>) &#123;f|=(ch==<span class="string">&#x27;-&#x27;</span>);ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;x=(x&lt;&lt;<span class="number">1</span>)+(x&lt;&lt;<span class="number">3</span>)+(ch^<span class="number">48</span>);ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">	x=f?-x:x;</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">read</span>(n);<span class="built_in">read</span>(m);</span><br><span class="line">	ll x,y,z;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="comment">//scanf(&quot;%d%d%d&quot;,&amp;x,&amp;y,&amp;z);</span></span><br><span class="line">		<span class="built_in">read</span>(x);</span><br><span class="line">		<span class="built_in">read</span>(y);<span class="built_in">read</span>(z);</span><br><span class="line">		e[i]=(Edge)&#123;x,y,z&#125;;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+m,cmp);</span><br><span class="line">	ll cnt=<span class="number">0</span>,sum=<span class="number">0</span>,mx=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		ll x=<span class="built_in">find</span>(e[i].u),y=<span class="built_in">find</span>(e[i].v);</span><br><span class="line">		<span class="keyword">if</span>(x!=y)&#123;</span><br><span class="line">			f[x]=y;</span><br><span class="line">			cnt++;</span><br><span class="line">			<span class="comment">//sum+=e[i].w;</span></span><br><span class="line">			mx=<span class="built_in">max</span>(mx,e[i].w);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(cnt==n<span class="number">-1</span>)&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cnt=<span class="number">0</span>;</span><br><span class="line">	<span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+m,cmp2);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		ll x=<span class="built_in">find2</span>(e[i].u),y=<span class="built_in">find2</span>(e[i].v);</span><br><span class="line">		<span class="keyword">if</span>(x!=y&amp;&amp;e[i].w&lt;=mx)&#123;</span><br><span class="line">			f2[x]=y;</span><br><span class="line">			cnt++;</span><br><span class="line">			sum+=e[i].w;</span><br><span class="line">			<span class="comment">//mx=max(mx,e[i].w);</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(cnt==n<span class="number">-1</span>)&#123;</span><br><span class="line">			<span class="comment">//cout&lt;&lt;sum&lt;&lt;endl;</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,sum);</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1714 B君的游戏</title>
    <url>/posts/26780/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>B君和L君要玩一个游戏。刚开始有n个正整数 𝑎𝑖 。</p>
<p>双方轮流操作。每次操作，选一个正整数x，将其移除，再添加7个数字 𝑥1,𝑥2...𝑥7 。要求对于 𝑥𝑖 ，满足 0&lt;=𝑥𝑖&lt;𝑥 且 𝑥&amp;𝑥𝑖=𝑥𝑖</p>
<p>注意0不能被选取，所以这个游戏一定会结束，而谁无法操作谁就失败。 B君根据自己的经验，认为先手胜率高一点，所以B君是先手。 B君想知道自己是否必胜。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>SG函数值和数字中1的个数有关，打一个SG函数表。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y==<span class="number">0</span>?x:<span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">speed</span><span class="params">(ll a,ll b,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    ll cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur%p;</span><br><span class="line">        cur=cur*cur%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//埃式筛法</span></span><br><span class="line">    <span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">    <span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i])&#123;</span><br><span class="line">            i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">                ipr[j]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i])&#123;</span><br><span class="line">            pri[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ll sg[<span class="number">100020</span>];</span><br><span class="line">ll fg[<span class="number">10020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gn1</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        ret++;</span><br><span class="line">        x=x&amp;(x<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> mx,<span class="keyword">int</span> dep,<span class="keyword">int</span> sum)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep==<span class="number">0</span>)&#123;</span><br><span class="line">        fg[sum]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=mx;i++)&#123;</span><br><span class="line">        <span class="built_in">dfs</span>(i,dep<span class="number">-1</span>,sum^sg[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getsg</span><span class="params">(<span class="keyword">int</span> n=<span class="number">64</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(fg,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(fg));</span><br><span class="line">        <span class="built_in">dfs</span>(i<span class="number">-1</span>,<span class="number">7</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!fg[j])&#123;</span><br><span class="line">                sg[i]=j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">120</span>]=&#123;<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">8</span>,<span class="number">16</span>,<span class="number">32</span>,<span class="number">64</span>,<span class="number">128</span>,<span class="number">255</span>,<span class="number">256</span>,</span><br><span class="line">            <span class="number">512</span>,<span class="number">1024</span>,<span class="number">2048</span>,<span class="number">3855</span>,<span class="number">4096</span>,<span class="number">8192</span>,<span class="number">13107</span>,<span class="number">16384</span>,<span class="number">21845</span>,<span class="number">27306</span>,</span><br><span class="line">            <span class="number">32768</span>,<span class="number">38506</span>,<span class="number">65536</span>,<span class="number">71576</span>,<span class="number">92115</span>,<span class="number">101470</span>,<span class="number">131072</span>,<span class="number">138406</span>,<span class="number">172589</span>,<span class="number">240014</span>,</span><br><span class="line">            <span class="number">262144</span>,<span class="number">272069</span>,<span class="number">380556</span>,<span class="number">524288</span>,<span class="number">536169</span>,<span class="number">679601</span>,<span class="number">847140</span>,<span class="number">1048576</span>,<span class="number">1072054</span>,<span class="number">1258879</span>,</span><br><span class="line">            <span class="number">1397519</span>,<span class="number">2005450</span>,<span class="number">2097152</span>,<span class="number">2121415</span>,<span class="number">2496892</span>,<span class="number">2738813</span>,<span class="number">3993667</span>,<span class="number">4194304</span>,<span class="number">4241896</span>,<span class="number">4617503</span>,</span><br><span class="line">            <span class="number">5821704</span>,<span class="number">7559873</span>,<span class="number">8388608</span>,<span class="number">8439273</span>,<span class="number">8861366</span>,<span class="number">11119275</span>,<span class="number">11973252</span>,<span class="number">13280789</span>,<span class="number">16777216</span>,<span class="number">16844349</span>,</span><br><span class="line">            <span class="number">17102035</span>,<span class="number">19984054</span>,<span class="number">21979742</span>,<span class="number">23734709</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="comment">/*getsg();</span></span><br><span class="line"><span class="comment">    cout&lt;&lt;&quot;int a[120]=&#123;0,&quot;;</span></span><br><span class="line"><span class="comment">    for(int i=1;i&lt;=64;i++)&#123;</span></span><br><span class="line"><span class="comment">        cout&lt;&lt;sg[i];</span></span><br><span class="line"><span class="comment">        if(i!=64) cout&lt;&lt;&quot;,&quot;;</span></span><br><span class="line"><span class="comment">        if(i%10==0) cout&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment">    cout&lt;&lt;&quot;&#125;;&quot;;*/</span></span><br><span class="line">    <span class="keyword">int</span> n,tmp,ans=<span class="number">0</span>;</span><br><span class="line">    ll x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;x);</span><br><span class="line">        tmp=<span class="built_in">gn1</span>(x);</span><br><span class="line">        ans^=a[tmp];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(ans==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;L\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;B\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
      </tags>
  </entry>
  <entry>
    <title>51Nod 1740 蜂巢迷宫</title>
    <url>/posts/58122/</url>
    <content><![CDATA[<h2 id="题目">题目</h2>
<p><img src="https://img2018.cnblogs.com/blog/1575943/201907/1575943-20190724113104452-1683001528.png" /></p>
<p>有一个无限大的蜂巢迷宫，为了方便表示每一个六边形格子，现在把座标引入到这个迷宫中，如上图年示。</p>
<p>艾瑞特在这个迷宫中街，刚开始他在(0,0)的位置，按照下图所示的路线在这个迷宫中行走。 <img src="https://img2018.cnblogs.com/blog/1575943/201907/1575943-20190724113110406-1210737310.png" /></p>
<p>走了n步以后，他想知道自己在哪个位置了。</p>
<h2 id="思路">思路</h2>
<p>走1-6步1层，7-18步2层，二分查找层数，在最后一层6个if走6边</p>
<h2 id="代码">代码</h2>
<p><code>c++ #include&lt;bits/stdc++.h&gt; #define ll long long #define db double using namespace std; ll n; int main()&#123;     cin&gt;&gt;n;     if(n==0)&#123;         cout&lt;&lt;&quot;0 0\n&quot;;         return 0;     &#125;     ll l=1,r=1e9,mid,lev;     while(l&lt;=r)&#123;         mid=(l+r)&gt;&gt;1;         if(3*mid*(mid-1)&lt;n)&#123;             l=mid+1;             lev=mid;         &#125;         else r=mid-1;     &#125;     //cout&lt;&lt;lev&lt;&lt;endl;     ll cx=-1+2*lev,cy=2;     n-=3*lev*(lev-1);n--;     if(n&lt;=lev-1)&#123;         cx-=n,cy+=2*n;         cout&lt;&lt;cx&lt;&lt;' '&lt;&lt;cy&lt;&lt;endl;         return 0;     &#125;     n-=(lev-1);     cx-=(lev-1),cy+=2*(lev-1);     if(n&lt;=lev)&#123;         cx-=2*n;         cout&lt;&lt;cx&lt;&lt;' '&lt;&lt;cy&lt;&lt;endl;         return 0;     &#125;     n-=lev;     cx-=lev*2;     if(n&lt;=lev)&#123;         cx-=n,cy-=2*n;         cout&lt;&lt;cx&lt;&lt;' '&lt;&lt;cy&lt;&lt;endl;         return 0;     &#125;     n-=lev;     cx-=lev,cy-=2*lev;     if(n&lt;=lev)&#123;         cx+=n,cy-=2*n;         cout&lt;&lt;cx&lt;&lt;' '&lt;&lt;cy&lt;&lt;endl;         return 0;     &#125;     n-=lev;     cx+=lev,cy-=2*lev;     if(n&lt;=lev)&#123;         cx+=2*n;         cout&lt;&lt;cx&lt;&lt;' '&lt;&lt;cy&lt;&lt;endl;         return 0;     &#125;     n-=lev;     cx+=2*lev;     if(n&lt;=lev)&#123;         cx+=n,cy+=2*n;         cout&lt;&lt;cx&lt;&lt;' '&lt;&lt;cy&lt;&lt;endl;         return 0;     &#125;     n-=lev;     cx+=lev,cy+=2*lev;     return 0; &#125;</code></p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1755 除数游戏</title>
    <url>/posts/11579/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>在除数游戏中，两人轮流行动，初始时有一个整数q，每次行动要写下一个整数，这个整数必须是最近一次出现的整数的“强除数”。所谓一个整数的“强除数”是指除了1和该整数本身以外，可以整除该整数的整数。</p>
<p>当游戏的某一方找不出符合以上条件的整数时，该方取得胜利，游戏结束。</p>
<p>假设游戏双方都采取最好的策略，给出初始数字。计算第一个写数字的人赢，还是第二个写数字的人赢。</p>
<p>样例解释：</p>
<p>在样例一中，数字6的“强除数”是2和3。不管是写哪个数字，下一个人都赢了。 在样例二中，6是30的一个“强除数”。写下6后，接下来的过程同上。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>分解，1个因数1赢，2个2赢，再往上1写到两个，1赢。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line">ll n,x;</span><br><span class="line"><span class="keyword">int</span> s;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//prime();</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%lld&quot;</span>,&amp;n);</span><br><span class="line">	x=n;</span><br><span class="line">	<span class="keyword">for</span>(ll i=<span class="number">2</span>;i*i&lt;=x;i++)&#123;</span><br><span class="line">		<span class="keyword">while</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">			n/=i;</span><br><span class="line">			s++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(s&gt;=<span class="number">3</span>) <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(n&gt;<span class="number">1</span>) s++;</span><br><span class="line">	<span class="keyword">if</span>(s==<span class="number">2</span>)&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;2\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">&quot;1\n&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1765 谷歌的恐龙</title>
    <url>/posts/31378/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>把整个游戏简化为，每次生成一个[0,n)的随机数，如果这个随机数和给出的m个数字中的其中一个数字相等，那么就停止生成随机数，否则继续生成，求出所有生成的数的和的期望。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p><span class="math display">\[E = \sum_{i=0}^{n-1} p_i \times(i+[flag_i]\times E), p_i = \frac{1}{n}, 如果i不在m个数中, flag_i = 1, 否则为0。\]</span></p>
<p>化简为<span class="math display">\[ E = \frac{n\times(n-1)}{2\times m} \]</span></p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;deque&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line">ll n,m,x;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.6f\n&quot;</span>,n*(n<span class="number">-1</span>)/<span class="number">2.0</span>/m);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>概率论</tag>
      </tags>
  </entry>
  <entry>
    <title>51Nod 1774 多重排序</title>
    <url>/posts/49412/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有一个数组a，长度为n，下标从1开始。现在要对a进行m次排序，每一次排序给定两个参数t[i]，r[i]表示要对数组的前r[i]个元素进行排序，如果t[i]＝1则按照非降序排序，t[i]=2则按照非升序排序。</p>
<p>请输出经过m次排序之后的数组a。</p>
<p>样例解释：</p>
<p>第一个样例中，初始序列为：1 2 3。经过第一次排序之后变成了：2 1 3。</p>
<p>第二个样例中，初始序列为：1 2 4 3。经过第一次排序之后变成了：4 2 1 3。经过第二次排序之后变成了：2 4 1 3。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>搞一个r单调递减的栈，从最大的r向前赋值，t=1，赋最大的值，否则赋最小的值。</p>
<p>搞stdio.h居然效率最高，欢迎吊打QAQ</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="comment">//#include&lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="comment">//#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">200020</span>],tmp[<span class="number">200020</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> t,r;</span><br><span class="line">&#125;e[<span class="number">200020</span>];</span><br><span class="line">E x;</span><br><span class="line"><span class="keyword">int</span> top=<span class="number">0</span>,head,tail;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;x.t,&amp;x.r);</span><br><span class="line">        <span class="keyword">if</span>(top&amp;&amp;x.r&gt;=e[top].r)&#123;</span><br><span class="line">            <span class="keyword">while</span>(top&gt;<span class="number">0</span>&amp;&amp;x.r&gt;=e[top].r)&#123;</span><br><span class="line">                top--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        e[++top]=x;</span><br><span class="line">    &#125;</span><br><span class="line">    head=<span class="number">1</span>,tail=e[<span class="number">1</span>].r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=e[<span class="number">1</span>].r;i++)&#123;</span><br><span class="line">        tmp[i]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    std::<span class="built_in">sort</span>(tmp+<span class="number">1</span>,tmp+<span class="number">1</span>+tail);</span><br><span class="line">    e[top+<span class="number">1</span>].r=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=top;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(e[i].t==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=e[i].r;j&gt;e[i+<span class="number">1</span>].r;j--)&#123;</span><br><span class="line">                a[j]=tmp[tail];</span><br><span class="line">                tail--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=e[i].r;j&gt;e[i+<span class="number">1</span>].r;j--)&#123;</span><br><span class="line">                a[j]=tmp[head];</span><br><span class="line">                head++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1785 数据流中的算法</title>
    <url>/posts/56103/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>51nod近日上线了用户满意度检测工具，使用高级人工智能算法，通过用户访问时间、鼠标轨迹等特征计算用户对于网站的满意程度。</p>
<p>现有的统计工具只能统计某一个窗口中，用户的满意程度的均值。夹克老爷想让你为统计工具添加一个新feature，即在统计均值的同时，计算窗口中满意程度的标准差和中位数（均值需要向下取整）。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>方差转化为均值相减，均值维护，中位数multiset维护每次找。</p>
<p>还有双堆维护中位数，QAQ。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rep(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> rev(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="keyword">int</span> n,k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="keyword">int</span> p;</span><br><span class="line">&#125;e[<span class="number">1000020</span>];</span><br><span class="line"><span class="keyword">int</span> head=<span class="number">1</span>,tail=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> x,val;</span><br><span class="line">db ans;</span><br><span class="line">std::multiset&lt;<span class="keyword">int</span>&gt;q;</span><br><span class="line"><span class="keyword">int</span> sum=<span class="number">0</span>,sum2=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">bool</span> fg=<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">int</span> cnt;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        <span class="keyword">if</span>(x==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;val);</span><br><span class="line">            e[++tail].a=val;</span><br><span class="line">            e[tail].p=i;</span><br><span class="line">            sum+=val;</span><br><span class="line">            sum2+=val*val;</span><br><span class="line">            q.<span class="built_in">insert</span>(val);</span><br><span class="line">            <span class="comment">//cout&lt;&lt;*q.begin()&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">if</span>(tail-head+<span class="number">1</span>==k+<span class="number">1</span>)&#123;</span><br><span class="line">                q.<span class="built_in">erase</span>(q.<span class="built_in">lower_bound</span>(e[head].a));</span><br><span class="line">                sum-=e[head].a;</span><br><span class="line">                sum2-=e[head].a*e[head].a;</span><br><span class="line">                head++;</span><br><span class="line">            &#125;</span><br><span class="line">            cnt=tail-head+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">2</span>)&#123;</span><br><span class="line">            ans=sum/cnt;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x==<span class="number">3</span>)&#123;</span><br><span class="line">            ans=sum2/(ld)cnt-(sum/(ld)cnt)*(sum/(ld)cnt);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,ans);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">auto</span> tmp=q.<span class="built_in">begin</span>();</span><br><span class="line">            <span class="comment">//cout&lt;&lt;&quot;!!&quot;&lt;&lt;*tmp&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">if</span>(cnt%<span class="number">2</span>)&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt/<span class="number">2</span>;i++)&#123;</span><br><span class="line">                    tmp++;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,(db)*tmp);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt/<span class="number">2</span><span class="number">-1</span>;i++)&#123;</span><br><span class="line">                    tmp++;</span><br><span class="line">                &#125;</span><br><span class="line">                val=*tmp;</span><br><span class="line">                tmp++;</span><br><span class="line">                val+=*tmp;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%.2f\n&quot;</span>,(db)val/<span class="number">2.0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1799 二分答案</title>
    <url>/posts/17706/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>lyk最近在研究二分答案类的问题。</p>
<p>对于一个有n个互不相同的数且从小到大的正整数数列a（其中最大值不超过n），若要找一个在a中出现过的数字m，一个正确的二分程序是这样子的：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">l=<span class="number">1</span>; r=n; mid=(l+r)/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span> (l&lt;=r)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (a[mid]&lt;=m) </span><br><span class="line">        l=mid+<span class="number">1</span>; </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        r=mid<span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最终a[r]一定等于m。</p>
<p>但是这个和谐的程序被熊孩子打乱了。</p>
<p>熊孩子在一开始就将a数组打乱顺序。（共有n!种可能）</p>
<p>lyk想知道最终r=k的期望。</p>
<p>由于小数点非常麻烦，所以你只需输出将答案乘以n!后对1000000007取模就可以了。</p>
<p>在样例中，共有2个数，被熊孩子打乱后的数列共有两种可能(1,2)或者(2,1)，其中(1,2)经过上述操作后r=1，(2,1)经过上述操作后r=0。r=k的期望为0.5，0.5*2!=1，所以输出1。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>模拟二分找到k，记录关键节点，计算排列，非关键节点阶乘。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y==<span class="number">0</span>?x:<span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">speed</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur;</span><br><span class="line">        cur=cur*cur;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//埃式筛法</span></span><br><span class="line">    <span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">    <span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">                ipr[j]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            pri[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">120</span>]=&#123;<span class="number">1</span>,<span class="number">682498929</span>,<span class="number">491101308</span>,<span class="number">76479948</span>,<span class="number">723816384</span>,<span class="number">67347853</span>,<span class="number">27368307</span>,<span class="number">625544428</span>,<span class="number">199888908</span>,<span class="number">888050723</span>,</span><br><span class="line">            <span class="number">927880474</span>,<span class="number">281863274</span>,<span class="number">661224977</span>,<span class="number">623534362</span>,<span class="number">970055531</span>,<span class="number">261384175</span>,<span class="number">195888993</span>,<span class="number">66404266</span>,<span class="number">547665832</span>,<span class="number">109838563</span>,</span><br><span class="line">            <span class="number">933245637</span>,<span class="number">724691727</span>,<span class="number">368925948</span>,<span class="number">268838846</span>,<span class="number">136026497</span>,<span class="number">112390913</span>,<span class="number">135498044</span>,<span class="number">217544623</span>,<span class="number">419363534</span>,<span class="number">500780548</span>,</span><br><span class="line">            <span class="number">668123525</span>,<span class="number">128487469</span>,<span class="number">30977140</span>,<span class="number">522049725</span>,<span class="number">309058615</span>,<span class="number">386027524</span>,<span class="number">189239124</span>,<span class="number">148528617</span>,<span class="number">940567523</span>,<span class="number">917084264</span>,</span><br><span class="line">            <span class="number">429277690</span>,<span class="number">996164327</span>,<span class="number">358655417</span>,<span class="number">568392357</span>,<span class="number">780072518</span>,<span class="number">462639908</span>,<span class="number">275105629</span>,<span class="number">909210595</span>,<span class="number">99199382</span>,<span class="number">703397904</span>,</span><br><span class="line">            <span class="number">733333339</span>,<span class="number">97830135</span>,<span class="number">608823837</span>,<span class="number">256141983</span>,<span class="number">141827977</span>,<span class="number">696628828</span>,<span class="number">637939935</span>,<span class="number">811575797</span>,<span class="number">848924691</span>,<span class="number">131772368</span>,</span><br><span class="line">            <span class="number">724464507</span>,<span class="number">272814771</span>,<span class="number">326159309</span>,<span class="number">456152084</span>,<span class="number">903466878</span>,<span class="number">92255682</span>,<span class="number">769795511</span>,<span class="number">373745190</span>,<span class="number">606241871</span>,<span class="number">825871994</span>,</span><br><span class="line">            <span class="number">957939114</span>,<span class="number">435887178</span>,<span class="number">852304035</span>,<span class="number">663307737</span>,<span class="number">375297772</span>,<span class="number">217598709</span>,<span class="number">624148346</span>,<span class="number">671734977</span>,<span class="number">624500515</span>,<span class="number">748510389</span>,</span><br><span class="line">            <span class="number">203191898</span>,<span class="number">423951674</span>,<span class="number">629786193</span>,<span class="number">672850561</span>,<span class="number">814362881</span>,<span class="number">823845496</span>,<span class="number">116667533</span>,<span class="number">256473217</span>,<span class="number">627655552</span>,<span class="number">245795606</span>,</span><br><span class="line">            <span class="number">586445753</span>,<span class="number">172114298</span>,<span class="number">193781724</span>,<span class="number">778983779</span>,<span class="number">83868974</span>,<span class="number">315103615</span>,<span class="number">965785236</span>,<span class="number">492741665</span>,<span class="number">377329025</span>,<span class="number">847549272</span>,</span><br><span class="line">            <span class="number">698611116</span>&#125;;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> con=<span class="number">1e7</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line">ll ans=<span class="number">1</span>;</span><br><span class="line"><span class="function">ll <span class="title">fun</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    ll ret=f[x/con];</span><br><span class="line">    ll t=x/con;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=t*con+<span class="number">1</span>;i&lt;=x;i++)&#123;</span><br><span class="line">        ret=<span class="built_in">mo</span>(ret*i,mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">    <span class="keyword">int</span> a=<span class="number">0</span>,b=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=n,mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">while</span> (l&lt;=r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (mid&lt;=k)</span><br><span class="line">            l=mid+<span class="number">1</span>,a++;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            r=mid<span class="number">-1</span>,b++;</span><br><span class="line"></span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=m;i&gt;=m-a+<span class="number">1</span>;i--)&#123;</span><br><span class="line">        ans=<span class="built_in">mo</span>(ans*i,mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n-m;i&gt;=n-m-b+<span class="number">1</span>;i--)&#123;</span><br><span class="line">        ans=<span class="built_in">mo</span>(ans*i,mod);</span><br><span class="line">    &#125;</span><br><span class="line">    ans=ans*<span class="built_in">fun</span>(n-a-b)%mod;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 1831 小C的游戏</title>
    <url>/posts/17483/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>小C和小L是好朋友，她们在玩一个游戏。 一开始有一个大小为n的石子堆，小C先手。 每次可以对这个石子堆拿走一个或者把这个石子堆分成等量的几份并只取其中一份（不能不变或只剩下一个）。 如果取走最后一个人的算败，请问这个游戏小C是否能胜。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>SG打表，总体上是质数败，但有几个不一样的。</p>
<p>注意sg[1]=0，从sg[2]开始计算。</p>
<p>不需要算奇偶个异或，题目的意思是取出一份来，用这一份继续游戏。</p>
<blockquote>
<p>最简单的做法就是找规律了，直接搜一下就能获得所有的胜负态。 仔细观察可以发现质数除了2和17就是败的，合数除了16,34和289都是赢的。 感觉这样是不太科学的，那就来讲讲道理。 我们发现2,4,8都是赢的，而16的后继状态都是赢的，所以它是败的，而2<sup>n(n&gt;4)都能转化到16。 同样的我们能说明17和2</sup>n17^m。 我们考虑一个合数，它的因数肯定有个败态的，它就必胜了。 这样也就说明了质数是必败了。</p>
</blockquote>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y==<span class="number">0</span>?x:<span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">speed</span><span class="params">(ll a,ll b,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    ll cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur%p;</span><br><span class="line">        cur=cur*cur%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//埃式筛法</span></span><br><span class="line">    <span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">    <span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i])&#123;</span><br><span class="line">            i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">                ipr[j]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i])&#123;</span><br><span class="line">            pri[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ll sg[<span class="number">100020</span>];</span><br><span class="line">ll fg[<span class="number">10020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gn1</span><span class="params">(ll x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        ret++;</span><br><span class="line">        x=x&amp;(x<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> mx,<span class="keyword">int</span> dep,<span class="keyword">int</span> sum)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(dep==<span class="number">0</span>)&#123;</span><br><span class="line">        fg[sum]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=mx;i++)&#123;</span><br><span class="line">        <span class="built_in">dfs</span>(i,dep<span class="number">-1</span>,sum^sg[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getsg</span><span class="params">(<span class="keyword">int</span> n=<span class="number">300</span>)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(fg,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(fg));</span><br><span class="line">        fg[sg[i<span class="number">-1</span>]]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;i;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i%j==<span class="number">0</span>)&#123;</span><br><span class="line">                fg[sg[i/j]]=<span class="number">1</span>;</span><br><span class="line">                <span class="comment">/*if(j%2)&#123;</span></span><br><span class="line"><span class="comment">                    fg[sg[i/j]]=1;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                else&#123;</span></span><br><span class="line"><span class="comment">                    fg[0]=1;</span></span><br><span class="line"><span class="comment">                &#125;*/</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!fg[j])&#123;</span><br><span class="line">                sg[i]=j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x==<span class="number">1</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;=MAXN) <span class="keyword">return</span> ipr[x];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt&amp;&amp;pri[i]*pri[i]&lt;=x;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x%pri[i]==<span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">prime</span>();</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        <span class="keyword">if</span>(n==<span class="number">0</span>||n==<span class="number">16</span>||n==<span class="number">34</span>||n==<span class="number">289</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;NIE\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n==<span class="number">2</span>||n==<span class="number">17</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;TAK\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">fun</span>(n))&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;NIE\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;TAK\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*sg[1]=0;</span></span><br><span class="line"><span class="comment">    getsg();</span></span><br><span class="line"><span class="comment">    for(int i=1;i&lt;=300;i++)&#123;</span></span><br><span class="line"><span class="comment">        if(sg[i]==0) cout&lt;&lt;i&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">    &#125;*/</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
      <tags>
        <tag>博弈论</tag>
      </tags>
  </entry>
  <entry>
    <title>51Nod 2201 做任务一</title>
    <url>/posts/43052/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>B君和m个人一起，要完成n个任务，在这个题中，m个人会看着这B君，自己什么都不做。</p>
<p>第i个任务有一个开始时间s[i]和结束时间e[i]（保证s[i]&lt;=e[i]），一个人完成两个任务的时间区间，不能有交集，但是可以首尾相连。（参考样例）</p>
<p>换句话说，如果一个人依次完成了(s[1], e[1]) (s[2], e[2]) (s[3], e[3])这3个任务，那么这3个任务需要满足s[1]&lt;=e[1]&lt;=s[2]&lt;=e[2]&lt;=s[3]&lt;=e[3]。</p>
<p>同一个任务只能完成一次，并且中间不能换人。</p>
<p>问B君一个人最多可以完成多少个任务。</p>
<p>(单组 n &lt;= 100000)</p>
<p>(所有 n 求和 &lt;= 200000)</p>
<p>(开始时间和结束时间，都是非负整数，且在int范围内。)</p>
<p>(开始时间 &lt;= 结束时间，如果等于的话，意味着这个任务可以瞬间被做完，但是不能没有人做)</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>经典贪心，结束时间排序。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo(d, s, t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo0(d, s, t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">998244353</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a, ll b)</span> </span>&#123; <span class="keyword">return</span> b == <span class="number">0</span> ? a : <span class="built_in">gcd</span>(b, a % b); &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> data = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> ch = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) data = data * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>, ch = <span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">db <span class="title">fab</span><span class="params">(db x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x &gt; <span class="number">0</span> ? x : -x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,T;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> s,t;</span><br><span class="line">&#125;e[<span class="number">100020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.t==y.t) <span class="keyword">return</span> x.s&lt;y.s;</span><br><span class="line">    <span class="keyword">return</span> x.t&lt;y.t;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;e[i].s,&amp;e[i].t);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+n,cmp);</span><br><span class="line">        <span class="keyword">int</span> las=<span class="number">0</span>,ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">fo</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(e[i].s&gt;=las)&#123;</span><br><span class="line">                ans++;</span><br><span class="line">                las=e[i].t;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2206 低买高卖</title>
    <url>/posts/44059/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>考虑股票市场，一共有n天。 对于第i天，B君知道股票的价格是每单位a[i]元 在每一天，B君可以选择买入一个单位的股票，卖出一个单位的股票，或者什么都不做。 刚开始B君有无穷多的钱，但是没有任何股票。 问n天之后B君最多可以赚多少钱。 (1 &lt;= n &lt;= 200000) (1 &lt;= a[i] &lt;= 10000)</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>一开始思路是如果四天递增，买卖买卖肯定不如买买卖卖，就从最高和最低贪心，但发现绕不过时间，就去翻题解了。</p>
<p>题解都是通过顺序来解决时间问题的。</p>
<p>变形比如只能拥有一支股票，每天可以买卖各一次，或者只能买或卖一次。做法2参考博客前面说的是哪种看不明白。</p>
<p>做法1：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3h1bWluZ3lhbmcwL2FydGljbGUvZGV0YWlscy84NTE0NzQ2MA==">51nod 2206 低买高卖&amp;codeforces867E Buy Low Sell High<i class="fa fa-external-link-alt"></i></span></p>
<p>这个思路比较简单，如果堆空或者当前元素比堆顶元素小，就进堆，否则加入答案，弹出堆顶，进堆两次。</p>
<p>进堆两次是因为，如果轮到它做堆顶，再来一个最大的，可以理解为前面那次操作没有用它，正好还有一个它在堆里。如果又轮到它，就相当于又选了它。</p>
<p>那为什么没有第三次、第四次进堆呢？</p>
<p>可以看出这个数可能做一个中间量，如果第一次做完中间量以后再次成为堆中最小的，那么就必定买入，没有作为中间量的机会。</p>
<p>新来的更小的数或者第一个数就没有做中间量的机会。</p>
<p>做法2：</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlbnRvbmdfWHUvYXJ0aWNsZS9kZXRhaWxzLzk2OTcwNzY5">【51Nod 】2206 低买高卖<i class="fa fa-external-link-alt"></i></span></p>
<p>直接加入两次，计算答案，弹出一次。</p>
<p>这样一看似乎会有答案增量为负的情形，但实际不会，因为如果当前加入的是比答案小的数，它会减掉自己，增量为0，然后弹出自己，第一个数一样，其余情况转化到做法1。</p>
<h3 id="第一个用iostream快第二个改成vector快可能是iostream对于empty有优化">第一个用iostream快，第二个改成vector快，可能是iostream对于empty有优化？</h3>
<h2 id="code1">Code1</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>,vector&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="keyword">while</span>(n--)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">		<span class="keyword">if</span>(q.<span class="built_in">empty</span>()||x&lt;=q.<span class="built_in">top</span>())&#123;</span><br><span class="line">			q.<span class="built_in">push</span>(x);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			ans+=x-q.<span class="built_in">top</span>();</span><br><span class="line">			q.<span class="built_in">pop</span>();</span><br><span class="line">			q.<span class="built_in">push</span>(x);</span><br><span class="line">			q.<span class="built_in">push</span>(x);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%I64d\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="code2">Code2</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line">priority_queue&lt;<span class="keyword">int</span>,vector&lt;<span class="keyword">int</span>&gt;,greater&lt;<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="keyword">while</span>(n--)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">		q.<span class="built_in">push</span>(x);</span><br><span class="line">		q.<span class="built_in">push</span>(x);</span><br><span class="line">		ans+=x-q.<span class="built_in">top</span>();</span><br><span class="line">		q.<span class="built_in">pop</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%I64d\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2386 分则能成</title>
    <url>/posts/56366/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>牛牛刚开始有一个正整数n。 每次操作牛牛可以选择一个自己有的数字x，把x分为两正整数y和z，需满足x=y+z，然后获得y*z的收益。 （当然，在这个过程中，牛牛会失去x这个数字，并且获得y和z这2个数字。）</p>
<p>牛牛一共可以分k次，牛牛希望最大化这k次的收益之和。 因为分割的结果y和z是正整数，所以选择的x必须&gt;=2。</p>
<p>对于100%的数据，1 &lt;= k &lt; n &lt;= 10^9 对于40%的数据，1 &lt;= k &lt; n &lt;= 10 对于70%的数据，1 &lt;= k &lt; n &lt;= 100</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>问题等价于把n拆分成k+1份，然后我们设为a1，a2，...，ak+1，发现最后答案为两两相乘，n<sup>2=(a1+a2+a3...+ak+1)</sup>2=ans+2sum(ai^2)，求ans最大即为求平方和最小，可以假设2x=c，然后用两个x和(x-1)、(x+1)平方和相减，发现前者始终是最小的，于是转化为接近分组。（具体数学上好像有相关的，不过没带回书也不知道是啥）</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line">ll n,k;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">	k++;</span><br><span class="line">	<span class="keyword">int</span> d=n/k;</span><br><span class="line">	ll sum=(k-n%k)*d*d+n%k*(d+<span class="number">1</span>)*(d+<span class="number">1</span>);</span><br><span class="line">	ll ans=(n*n-sum)/<span class="number">2</span>;</span><br><span class="line">	cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2488 矩形并的面积</title>
    <url>/posts/13933/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>在二维平面上，给定两个矩形，满足矩形的每条边分别和坐标轴平行，求这个两个矩形的并的面积。即它们重叠在一起之后的总的面积。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>这方法真神奇。。。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">100020</span>;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Point</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;;</span><br><span class="line">Point p[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">iabs</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> s&gt;<span class="number">0</span>?s:-s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">tog</span><span class="params">(Point p1,Point p2,Point p3,Point p4)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (p1.x&lt;=p3.x&amp;&amp;p1.y&lt;=p3.y&amp;&amp;p2.x&gt;=p4.x&amp;&amp;p2.y&gt;=p4.y)||(p1.x&gt;=p3.x&amp;&amp;p1.y&gt;=p3.y&amp;&amp;p2.x&lt;=p4.x&amp;&amp;p2.y&lt;=p4.y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line">        cin&gt;&gt;p[i].x&gt;&gt;p[i].y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> s1=(p[<span class="number">2</span>].x-p[<span class="number">1</span>].x)*(p[<span class="number">2</span>].y-p[<span class="number">1</span>].y),s2=(p[<span class="number">4</span>].x-p[<span class="number">3</span>].x)*(p[<span class="number">4</span>].y-p[<span class="number">3</span>].y);</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">tog</span>(p[<span class="number">1</span>],p[<span class="number">2</span>],p[<span class="number">3</span>],p[<span class="number">4</span>]))&#123;</span><br><span class="line">        cout&lt;&lt;<span class="built_in">max</span>(s1,s2);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll s=s1;s+=s2;</span><br><span class="line">    <span class="keyword">int</span> a1=<span class="built_in">max</span>(p[<span class="number">1</span>].x,p[<span class="number">1</span>].y);</span><br><span class="line">    <span class="keyword">int</span> b1=<span class="built_in">max</span>(p[<span class="number">1</span>].y,p[<span class="number">3</span>].y);</span><br><span class="line">    <span class="keyword">int</span> a2=<span class="built_in">min</span>(p[<span class="number">2</span>].x,p[<span class="number">4</span>].x);</span><br><span class="line">    <span class="keyword">int</span> b2=<span class="built_in">min</span>(p[<span class="number">2</span>].y,p[<span class="number">4</span>].y);</span><br><span class="line">    <span class="keyword">if</span>(a1&lt;a2&amp;&amp;b1&lt;b2)&#123;</span><br><span class="line">        cout&lt;&lt;s-(a2-a1)*(b2-b1)&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        cout&lt;&lt;s&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>计算几何</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2489 小b和灯泡</title>
    <url>/posts/55291/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>小b有n个关闭的灯泡，编号为1...n。</p>
<p>小b会进行n轮操作，第i轮她会将编号为i的倍数的灯泡的开关状态取反，即开变成关，关变成开。</p>
<p>求n轮操作后，有多少灯泡是亮着的。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>对一个数的因数找规律，发现只有平方数才会出现奇数的因数，因此答案为(int)srqt(n)</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>简单题</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2493 二进制距离之和</title>
    <url>/posts/59914/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>小b有一个数组a，她想知道a中任意两个数之间二进制距离的总和。</p>
<p>两个整数的二进制距离指的是这两个数字的二进制数对应位不同的数量。</p>
<p>样例解释：</p>
<blockquote>
<blockquote>
<p>在二进制表示中，4表示为0100，14表示为1110，2表示为0010。 4和14的距离为2，因为0100和1110只有右数第2,4位不同。其他同理。 所以答案为： Distance(4, 14) + Distance(4, 2) + Distance(14, 2) = 2 + 2 + 2 = 6.</p>
</blockquote>
</blockquote>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>对于每一位，假设有x个1，那么这一位的距离是x*(n-x)，相加即可。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">int</span> n,x,sum[<span class="number">120</span>];</span><br><span class="line">ll ans=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">30</span>;j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(x&amp;(<span class="number">1</span>&lt;&lt;j))&#123;</span><br><span class="line">				sum[j]++;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">30</span>;i++)&#123;</span><br><span class="line">		ans+=sum[i]*(n-sum[i]); </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>简单题</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2495 小明垒墙</title>
    <url>/posts/61971/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>小明家要盖新房子了，但是小明家里没有钱，垒墙用的砖块都是别人用省下来的，所以砖块的长度是不固定的，但是无论怎么说，墙是垒好了，有一天小明看着墙发呆，想出来这样一个问题，问题如下：</p>
<p>你的面前有一堵方形的、由多行砖块组成的砖墙。 这些砖块高度相同但是宽度不同。你现在要画一条自顶向下的、穿过最少砖块的垂线。</p>
<p>砖墙由行的列表表示。 每一行都是一个代表从左至右每块砖的宽度的整数列表。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>读入，把空的地方map标记+1，最后遍历map找其中最大值即可。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> db double</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line">map&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="keyword">int</span> n,t,x,sum=<span class="number">0</span>,ans;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> x=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">char</span> ch=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>) &#123;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">	<span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;ch=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">	<span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//io_opt;</span></span><br><span class="line">	n=<span class="built_in">rd</span>();</span><br><span class="line">	ans=n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		t=<span class="built_in">rd</span>();</span><br><span class="line">		<span class="keyword">int</span> las=<span class="number">0</span>,cur=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=t;j++)&#123;</span><br><span class="line">			x=<span class="built_in">rd</span>();</span><br><span class="line">			cur+=x;</span><br><span class="line">			<span class="keyword">int</span> l=(las+<span class="number">1</span>)*<span class="number">2</span>,r=(las+<span class="number">1</span>+x)*<span class="number">2</span>;</span><br><span class="line">			<span class="comment">//cout&lt;&lt;l&lt;&lt;&#x27; &#x27;&lt;&lt;r&lt;&lt;endl;</span></span><br><span class="line">			mp[l<span class="number">-1</span>]++;</span><br><span class="line">			<span class="comment">//mp[r-1]++;</span></span><br><span class="line">			las=las+x;</span><br><span class="line">		&#125;</span><br><span class="line">		sum=<span class="built_in">max</span>(sum,cur);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">auto</span> t=mp.<span class="built_in">begin</span>();t!=mp.<span class="built_in">end</span>();t++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(t-&gt;first==<span class="number">1</span>||t-&gt;first==sum*<span class="number">2</span><span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">		ans=<span class="built_in">min</span>(ans,n-(t-&gt;second));</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2499 不降的数字</title>
    <url>/posts/64480/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>小b有一个非负整数N，她想请你找出 ≤𝑁 的最大整数x，满足x各个位数上的数字是不降的。也就是说，设x的十进制表示为 𝑎1,𝑎2,…,𝑎𝑚，则对于任意 1≤𝑖&lt;𝑚，𝑎𝑖≤𝑎𝑖+1。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>从后向前找，每次不满足不降，前面的数就减一，这时候后面的所有数都可以变成9。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//#include&lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> __int128 lll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> data=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) ch=<span class="built_in">getchar</span>();<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) data=data*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=<span class="built_in">getchar</span>();<span class="keyword">return</span> data;&#125;</span><br><span class="line"><span class="keyword">int</span> n,cnt,a[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> bf=n;</span><br><span class="line">    <span class="keyword">while</span>(n)&#123;</span><br><span class="line">        a[++cnt]=n%<span class="number">10</span>;</span><br><span class="line">        n/=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=cnt;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;a[i<span class="number">-1</span>])&#123;</span><br><span class="line">            a[i]--;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i<span class="number">-1</span>;j&gt;=<span class="number">1</span>;j--)&#123;</span><br><span class="line">                a[j]=<span class="number">9</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(!a[cnt]) cnt--;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=cnt;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>简单题</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2504 是子序列的个数</title>
    <url>/posts/4237/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>小b有一个字符串S和n个字符串words[1...n]，现在她想知道有多少个i满足words[i]是S的子序列。</p>
<p>S的长度≤50000，1≤n≤5000，words[i]长度≤50.</p>
<p>样例解释</p>
<p>a，acd，ace都是abcde的子序列，但bb不是。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>存一下s各个字母的位置，比较时二分查找。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ans,n;</span><br><span class="line">string s,x;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">27</span>][<span class="number">500020</span>];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">fun</span><span class="params">(string &amp;cur)</span></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;cur&lt;&lt;&quot;:\n&quot;;</span></span><br><span class="line">    <span class="keyword">int</span> las=<span class="number">0</span>,l,r,mid,anss;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">char</span> i : cur)&#123;</span><br><span class="line">        l=<span class="number">1</span>,r=a[i-<span class="string">&#x27;a&#x27;</span>][<span class="number">0</span>],anss=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">            mid=l+r&gt;&gt;<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[i-<span class="string">&#x27;a&#x27;</span>][mid]&gt;las)&#123;</span><br><span class="line">                r=mid<span class="number">-1</span>;</span><br><span class="line">                anss=mid;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                l=mid+<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(!anss)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        las=a[i-<span class="string">&#x27;a&#x27;</span>][anss];<span class="comment">//cout&lt;&lt;las&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;s&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        a[s[i]-<span class="string">&#x27;a&#x27;</span>][++a[s[i]-<span class="string">&#x27;a&#x27;</span>][<span class="number">0</span>]]=i+<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">fun</span>(x))&#123;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>字符串</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2519 小b浇花</title>
    <url>/posts/18868/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>小b养了n盆花，第i盆花高度为A[i]。</p>
<p>小b每天可以给某一盆花浇水，这样这盆花就会长高一单位。</p>
<p>小b希望每盆花都是独一无二的，也就是不存在两盆花高度相等。</p>
<p>求小b最少要浇几天水。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>冲着一个浇水和把一个浇到一个高度，再浇这个高度的一盆是一样的。</p>
<p>因此如果𝑎[𝑖+1]&lt;=𝑎[𝑖]，则让𝑎[𝑖+1]=𝑎[𝑖]+1。</p>
<p>由于a[i]只有40000，可以每个高度做标记然后找。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> __int128 lll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> data=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) ch=<span class="built_in">getchar</span>();<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) data=data*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=<span class="built_in">getchar</span>();<span class="keyword">return</span> data;&#125;</span><br><span class="line"><span class="keyword">int</span> n,ans,cnt;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a,pla;</span><br><span class="line">&#125;;</span><br><span class="line">E h[<span class="number">40020</span>];</span><br><span class="line">E b[<span class="number">40020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp1</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.a&lt;y.a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp2</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.pla&lt;y.pla;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">80020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;h[i].a;</span><br><span class="line">        f[h[i].a]=<span class="literal">true</span>;</span><br><span class="line">        h[i].pla=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(h+<span class="number">1</span>,h+<span class="number">1</span>+n,cmp1);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(h[i].a&lt;=h[i<span class="number">-1</span>].a)&#123;</span><br><span class="line">            ans+=h[i<span class="number">-1</span>].a+<span class="number">1</span>-h[i].a;</span><br><span class="line">            h[i].a=h[i<span class="number">-1</span>].a+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2518 和为S</title>
    <url>/posts/41681/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>小b有一个01序列A，她想知道A有多少个非空连续子序列和为S。</p>
<p>你能帮帮她吗？</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>暴力，可以搞一下剪枝。</p>
<p>另外也可以枚举位置，建一个mp[num]，记录枚举到i位置时，前面的每个前缀和num出现过几次，每次把当前前缀和减去m在之前出现的数量加入答案即可。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n,s,ans;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">30020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        a[i]+=a[i<span class="number">-1</span>];</span><br><span class="line">        <span class="comment">//cout&lt;&lt;a[i]&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    <span class="keyword">int</span> cs=(s==<span class="number">0</span>||s==<span class="number">1</span>)?<span class="number">0</span>:s<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n-cs;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=i+cs;j&lt;=n;j++)&#123;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;i&lt;&lt;&#x27; &#x27;&lt;&lt;j&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">if</span>(a[j]-a[i<span class="number">-1</span>]&gt;s) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span>(a[j]-a[i<span class="number">-1</span>]==s) ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2522 和为K的倍数</title>
    <url>/posts/28397/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>小b喜欢和为K的倍数的序列。</p>
<p>现在有一个长度为n的序列A，请问A有多少个非空连续子序列是小b喜欢的。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>求一个前缀和，mod k，如果数组i和j(i&lt;=j)位置相等，则从i+1到j位置的序列和为k的倍数，任选两个即可，k不大，用数组记录，注意0的时候包含本身。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt std::ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">int</span> n,k,a[<span class="number">30020</span>],ans;</span><br><span class="line"><span class="keyword">int</span> sum[<span class="number">30020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		a[i]+=a[i<span class="number">-1</span>];</span><br><span class="line">		a[i]=(a[i]+k*<span class="number">10000</span>)%k;</span><br><span class="line">		sum[a[i]]++;</span><br><span class="line">	&#125;</span><br><span class="line">	ans+=sum[<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;k;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(sum[i]) ans+=(sum[i]*(sum[i]<span class="number">-1</span>))/<span class="number">2</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2526 最大异或和</title>
    <url>/posts/44945/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>给定𝑛个数𝑥1…𝑥𝑛，请你选择n个数𝑝1…𝑝𝑛，使得𝑝1&lt;=𝑥1,𝑝2&lt;=𝑥2......，并且𝑝1 𝑥𝑜𝑟 𝑝2 𝑥𝑜𝑟 𝑝3 … 𝑝𝑛的值尽量大。问这个最大的异或和是多少。</p>
<p>𝑛≤100 , 0≤𝑥𝑖≤1e9</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>拆成二进制位，由于最小可以为0，每一位保持一个为1就可以，多的可以变成下面所有1。</p>
<p>从最高位开始扫，这一位出现1个1，ans这一位就为1，出现俩，后面所有的都为1。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo(d,s,t) for(int d=s;d&lt;=t;d++)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> fo0(d,s,t) for(int d=s;d&gt;=t;d--)</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> data=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) ch=<span class="built_in">getchar</span>();<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) data=data*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=<span class="built_in">getchar</span>();<span class="keyword">return</span> data;&#125;</span><br><span class="line"><span class="keyword">int</span> n,a[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">120</span>][<span class="number">35</span>];</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">35</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,n)&#123;</span><br><span class="line">        <span class="built_in">fo0</span>(j,<span class="number">32</span>,<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a[i]&amp;<span class="number">1</span>)&#123;</span><br><span class="line">                f[i][j]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            a[i]&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,<span class="number">32</span>)&#123;</span><br><span class="line">        <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">fo</span>(j,<span class="number">1</span>,n)&#123;</span><br><span class="line">            <span class="keyword">if</span>(f[j][i])&#123;</span><br><span class="line">                ans[i]=<span class="number">1</span>;</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cnt&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">fo</span>(j,i+<span class="number">1</span>,<span class="number">32</span>)&#123;</span><br><span class="line">                ans[j]=<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> anss=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">fo</span>(i,<span class="number">1</span>,<span class="number">32</span>)&#123;</span><br><span class="line">        anss&lt;&lt;=<span class="number">1</span>;</span><br><span class="line">        anss+=ans[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,anss);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>简单题</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2540 平分</title>
    <url>/posts/25990/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>考虑足球比分系统，一场足球比赛从开始到结束的过程中，摄像机随机拍摄了𝑛张比分信息，问你本场比赛最多出现了几次平分。</p>
<p>例如：3个比分信息为：</p>
<p>2 0 3 1 3 4</p>
<p>最终比分为3:4，所以最多只可能出现最初的0:0以及3:3这2次平分。如果只有1张3:4，那么最多可能有0:0 1:1 2:2 3:3共4次平分。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>添加一个0：0，相邻的A队分区间和B队分区间取交集，map去重，注意cur可能为0。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> __int128 lll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> data=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) ch=<span class="built_in">getchar</span>();<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) data=data*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=<span class="built_in">getchar</span>();<span class="keyword">return</span> data;&#125;</span><br><span class="line"><span class="keyword">int</span> n,ans;</span><br><span class="line">map&lt;<span class="keyword">int</span>,<span class="keyword">bool</span>&gt;mp;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10020</span>],b[<span class="number">10020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> x1,x2,y1,y2,l,r;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        x1=a[i<span class="number">-1</span>],x2=a[i];</span><br><span class="line">        y1=b[i<span class="number">-1</span>],y2=b[i];</span><br><span class="line">        l=<span class="built_in">max</span>(x1,y1),r=<span class="built_in">min</span>(x2,y2);</span><br><span class="line">        <span class="keyword">int</span> cur=<span class="built_in">max</span>(r-l+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span>(cur==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!mp[l])&#123;</span><br><span class="line">                ans++;</span><br><span class="line">                mp[l]=<span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(cur&gt;=<span class="number">2</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(mp[l]) cur--;</span><br><span class="line">            <span class="keyword">if</span>(mp[r]) cur--;</span><br><span class="line">            ans+=cur;</span><br><span class="line">            mp[l]=<span class="literal">true</span>;</span><br><span class="line">            mp[r]=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>简单题</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2542 咖啡和作业</title>
    <url>/posts/39294/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>你要完成一个𝑚页的作业，手里有𝑛杯咖啡，每一杯咖啡有一个咖啡因强度值𝑎𝑖，能支撑你写𝑎𝑖页作业。每一天你会选择一些咖啡喝掉，对于当天喝的第i杯咖啡，咖啡因的强度会减弱𝑖−1单位，减到0就不再减小。问你最少经过几天能完成作业。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>贪心，二分天数，然后最大的开始往每天填。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,sum;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">int</span> ans;</span><br><span class="line"><span class="keyword">int</span> cnt[<span class="number">120</span>];</span><br><span class="line"><span class="keyword">int</span> sm;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(cnt,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(cnt));</span><br><span class="line">    sm=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> num=i%x;</span><br><span class="line">        sm+=<span class="built_in">max</span>(a[i]-cnt[num],<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;&#x27;!&#x27;&lt;&lt;sm&lt;&lt;endl;</span></span><br><span class="line">        cnt[num]++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sm&gt;=m;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&gt;y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    n=<span class="built_in">rd</span>();m=<span class="built_in">rd</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        a[i]=<span class="built_in">rd</span>();</span><br><span class="line">        sum+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n,cmp);</span><br><span class="line">    <span class="keyword">if</span>(sum&lt;m)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;-1\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=n,mid;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;check(2)&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>(mid))&#123;</span><br><span class="line">            r=mid<span class="number">-1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            l=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2594 括号之价</title>
    <url>/posts/14824/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>小Y上数据结构课的时候摸鱼，听到老师在讲用栈做括号匹配，于是乎边随意写了一个合法的括号序列。但是光是写括号太无聊了，他现在想知道这个括号序列的价值。他是这样定义一个括号序列的价值的：</p>
<p>1、一对括号价值一分（比如&quot;()&quot;得一分）</p>
<p>2、两个合法的括号序列的拼接而成的括号序列的价值是他们的价值的和（比如&quot;()()&quot;价值为1+1=2）</p>
<p>3、嵌套的括号的序列的价值是，所嵌套的括号序列的价值的翻倍（比如&quot;((()))&quot;价值为1<em>2</em>2=4）</p>
<p>下课了，qz看到小Y写的括号序列，他一眼就推测出了规则并得到了括号序列的价值。那么问题来了，小Y写下的括号序列的价值是多少呢？</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>赋值深度，然后找最近的深度dfs。</p>
<p>题解是把价值也放进去，每次碰到右括号就全加起来*2。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353LL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> data=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) ch=<span class="built_in">getchar</span>();<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) data=data*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=<span class="built_in">getchar</span>();<span class="keyword">return</span> data;&#125;</span><br><span class="line"><span class="function">ll <span class="title">lowspeed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;ll cur=a,ans=<span class="number">0</span>;<span class="keyword">while</span>(b)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans+cur)%p;cur=(cur+cur)%p;b&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> ans%p;&#125;</span><br><span class="line"><span class="function">ll <span class="title">speed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;ll cur=a,ans=<span class="number">1</span>;<span class="keyword">while</span>(b)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=<span class="built_in">lowspeed</span>(ans,cur,p)%p;cur=<span class="built_in">lowspeed</span>(cur,cur,p)%p;b&gt;&gt;=<span class="number">1</span>;&#125;<span class="keyword">return</span> ans%p;&#125;</span><br><span class="line">string s;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> l,<span class="keyword">int</span> r,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r==l+<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>,a1=<span class="number">0</span>,a2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l+<span class="number">1</span>;i&lt;r;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==val+<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(a1==<span class="number">0</span>)&#123;</span><br><span class="line">                a1=i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                a2=i;</span><br><span class="line">                sum+=<span class="built_in">dfs</span>(a1,a2,val+<span class="number">1</span>);</span><br><span class="line">                a1=a2=<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum*<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;s;</span><br><span class="line">    <span class="keyword">int</span> dep=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s[i]==<span class="string">&#x27;(&#x27;</span>)&#123;</span><br><span class="line">            dep++;</span><br><span class="line">            a[i]=dep;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            a[i]=dep;</span><br><span class="line">            dep--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> ans=<span class="number">0</span>,x1=<span class="number">-1</span>,x2=<span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(a[i]==<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(x1==<span class="number">-1</span>)&#123;</span><br><span class="line">                x1=i;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                x2=i;</span><br><span class="line">                ans+=<span class="built_in">dfs</span>(x1,x2,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">                x1=x2=<span class="number">-1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2602 树的直径</title>
    <url>/posts/56389/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>一棵树的直径就是这棵树上存在的最长路径。现在有一棵n个节点的树，现在想知道这棵树的直径包含的边的个数是多少？</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>随便找一个点，找最远的，再找新的点最远的。</p>
<p>当然我瞎搞的树状dp，子树分支最大的和次大的加起来就行。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,ans;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> u,v,nex;</span><br><span class="line">&#125;e[<span class="number">200020</span>];</span><br><span class="line"><span class="keyword">int</span> g[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">100020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mx1=<span class="number">0</span>,mx2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=g[x];i&gt;<span class="number">0</span>;i=e[i].nex)&#123;</span><br><span class="line">        <span class="keyword">if</span>(!f[e[i].v])&#123;</span><br><span class="line">            f[e[i].v]=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> d=<span class="built_in">dfs</span>(e[i].v);</span><br><span class="line">            f[e[i].v]=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span>(!mx1)&#123;</span><br><span class="line">                mx1=d;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(!mx2)&#123;</span><br><span class="line">                mx2=d;</span><br><span class="line">                <span class="keyword">if</span>(mx2&gt;mx1) <span class="built_in">swap</span>(mx1,mx2);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">if</span>(d&gt;mx2) mx2=d;</span><br><span class="line">                <span class="keyword">if</span>(mx2&gt;mx1) <span class="built_in">swap</span>(mx1,mx2);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=<span class="built_in">max</span>(ans,mx1+mx2+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(!mx1&amp;&amp;!mx2)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> mx1+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    n=<span class="built_in">rd</span>();</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        x=<span class="built_in">rd</span>(),y=<span class="built_in">rd</span>();</span><br><span class="line">        e[i]=(E)&#123;x,y,g[x]&#125;;g[x]=i;</span><br><span class="line">        e[i+n<span class="number">-1</span>]=(E)&#123;y,x,g[y]&#125;;g[y]=i+n<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    f[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2656 阿克曼函数</title>
    <url>/posts/62002/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>阿克曼（Arkmann）函数 𝐴(𝑚,𝑛) 中，m与n的定义域是非负整数且本题中m&lt;=3，n&lt;=16。</p>
<p>函数的定义为：</p>
<figure>
<img src="https://gss3.bdstatic.com/-Po3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike72%2C5%2C5%2C72%2C24/sign=d8f830180fb30f242197e451a9fcba26/d8f9d72a6059252d775b867d349b033b5bb5b97f.jpg" alt="阿克曼函数" /><figcaption>阿克曼函数</figcaption>
</figure>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>可以推出代码中的结论。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">ll <span class="title">akm</span><span class="params">(<span class="keyword">int</span> m,<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">4</span>&amp;&amp;n==<span class="number">0</span>) <span class="keyword">return</span> <span class="number">13</span>;</span><br><span class="line">    <span class="keyword">if</span>(m==<span class="number">0</span>) <span class="keyword">return</span> n+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(m==<span class="number">1</span>) <span class="keyword">return</span> n+<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(m==<span class="number">2</span>) <span class="keyword">return</span> <span class="number">2</span>*n+<span class="number">3</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(m==<span class="number">3</span>) <span class="built_in"><span class="keyword">return</span></span> ((<span class="number">1LL</span>&lt;&lt;(n+<span class="number">3</span>))<span class="number">-3</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(m==<span class="number">4</span>)&#123;</span><br><span class="line">        <span class="built_in"><span class="keyword">return</span></span> (<span class="number">1LL</span>&lt;&lt;(<span class="built_in">akm</span>(m,n<span class="number">-1</span>)+<span class="number">3</span>))<span class="number">-3</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;ERROR!&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;m&gt;&gt;n;</span><br><span class="line">    cout&lt;&lt;<span class="built_in">akm</span>(m,n)&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2657 二进制数字</title>
    <url>/posts/18204/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有多少个长度为n的二进制串，即不存在3个连续的1，也不存在3个连续的0。</p>
<p>例如n = 4，共有16个长度为4的01串，其中0000 0001 1000 1111 0111 1110，不符合要求，所以共有10个符合要求的串。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p><span class="exturl" data-url="aHR0cDovL3d3dy41MW5vZC5jb20vQ2hhbGxlbmdlL1Byb2JsZW1Tb2x1dGlvbi5odG1sI3Byb2JsZW1JZD0yNjU3">2657 二进制数字-题解<i class="fa fa-external-link-alt"></i></span></p>
<p>推荐买题解，这题解tql。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> __int128 lll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> data=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) ch=<span class="built_in">getchar</span>();<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) data=data*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=<span class="built_in">getchar</span>();<span class="keyword">return</span> data;&#125;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">ll a[<span class="number">5</span>]=&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=<span class="number">2</span>)&#123;</span><br><span class="line">        cout&lt;&lt;a[n]&lt;&lt;endl;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ll d1=<span class="number">2</span>,d2=<span class="number">4</span>,cur;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">3</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cur=(d1+d2)%mod;</span><br><span class="line">        d1=d2%mod;</span><br><span class="line">        d2=cur;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;cur&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2658 最多分成多少块 V2</title>
    <url>/posts/46823/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>小b有个长度为n的数组a，她想将这个数组排序。</p>
<p>然而小b很懒，她觉得对整个数组排序太累了，因此她请你将a分成一些块，使得她只需要对每一块分别排序，就能将整个数组排序。</p>
<p>请问你最多能把a分成多少块。</p>
<p>保证a为0...n-1的一个排列。</p>
<p>样例解释：</p>
<p>将a分成2块或者更多块，都无法得到所需的结果。 例如，分成 [4, 3], [2, 1, 0] ，排序得到的结果是 [3, 4, 0, 1, 2]，这不是有序的数组。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>题目的意思是升序排，一种麻烦的思路是每添加一个数小于i就cur+1，否则进堆，每次看能否从堆中取出，cur==i时ans+1。</p>
<p>再仔细想，只需要前面出现的最大的数和当前i相等，ans就能+1。</p>
<h2 id="code1">Code1</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//#include&lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> __int128 lll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> data=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) ch=<span class="built_in">getchar</span>();<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) data=data*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=<span class="built_in">getchar</span>();<span class="keyword">return</span> data;&#125;</span><br><span class="line"><span class="keyword">int</span> n,x,ans,cur;</span><br><span class="line">std::priority_queue&lt;<span class="keyword">int</span>,std::vector&lt;<span class="keyword">int</span>&gt;,std::greater&lt;<span class="keyword">int</span>&gt; &gt;q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        <span class="keyword">int</span> j=n-i<span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">while</span>(!q.<span class="built_in">empty</span>()&amp;&amp;q.<span class="built_in">top</span>()&lt;=i)&#123;</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            cur++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;=i)&#123;</span><br><span class="line">            cur++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            q.<span class="built_in">push</span>(x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cur==i+<span class="number">1</span>)&#123;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="code2">Code2</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//#include&lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(ss) memset(ss,0,sizeof(ss))</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> __int128 lll;</span><br><span class="line"><span class="keyword">const</span> ll mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">read</span><span class="params">()</span></span>&#123;<span class="keyword">int</span> data=<span class="number">0</span>;<span class="keyword">char</span> ch=<span class="number">0</span>;<span class="keyword">while</span> (ch&lt;<span class="string">&#x27;0&#x27;</span> || ch&gt;<span class="string">&#x27;9&#x27;</span>) ch=<span class="built_in">getchar</span>();<span class="keyword">while</span> (ch&gt;=<span class="string">&#x27;0&#x27;</span> &amp;&amp; ch&lt;=<span class="string">&#x27;9&#x27;</span>) data=data*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>,ch=<span class="built_in">getchar</span>();<span class="keyword">return</span> data;&#125;</span><br><span class="line"><span class="keyword">int</span> n,x,ans,mx;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">        mx=std::<span class="built_in">max</span>(x,mx);</span><br><span class="line">        <span class="keyword">if</span>(mx==i)ans++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2671 平衡环</title>
    <url>/posts/1548/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>给定一棵𝑛个点的树，每条边有一个边权，边权只可能是4或7。你想在树上选择两个没有直接连边的点，并在这两点间加一条边权为4或7的连边。很显然，树上出现一个环，如果这个环上边权为4的边数与边权为7的边数相等，那么这个环是一个平衡环。你希望得到这样一个平衡环，请问需要连接哪两个点，并赋予什么边权。</p>
<p>如果有多种方案，输出任意一组解即可。如果无解，输出-1。</p>
<p>数据范围：1≤𝑛≤100</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>必定是长度为3的路，一开始dfs点1留影子找，后来发现只能dfs所有点，这样就是𝑂(n^2)的了。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,g[<span class="number">1020</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> u,v,w,nex;</span><br><span class="line">&#125;e[<span class="number">1020</span>];</span><br><span class="line"><span class="keyword">int</span> ansu=<span class="number">0</span>,ansv=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">1020</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> d1,<span class="keyword">int</span> d2,<span class="keyword">int</span> d3,<span class="keyword">int</span> l1,<span class="keyword">int</span> l2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(ansu&amp;&amp;ansv) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> n4=<span class="number">0</span>,n7=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(l1==<span class="number">4</span>) n4++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(l1==<span class="number">7</span>) n7++;</span><br><span class="line">    <span class="keyword">if</span>(l2==<span class="number">4</span>) n4++;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(l2==<span class="number">7</span>) n7++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=g[d3];i&gt;<span class="number">0</span>;i=e[i].nex)&#123;</span><br><span class="line">        <span class="keyword">if</span>(f[e[i].v]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span>(e[i].w==<span class="number">4</span>) n4++;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(e[i].w==<span class="number">7</span>) n7++;</span><br><span class="line">        <span class="keyword">if</span>(n4&amp;&amp;n7&amp;&amp;n4+n7==<span class="number">3</span>)&#123;</span><br><span class="line">            ansu=<span class="number">1</span>,ansv=<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(n4==<span class="number">2</span>)&#123;</span><br><span class="line"></span><br><span class="line">                cout&lt;&lt;d1&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;e[i].v&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;<span class="string">&quot;7&quot;</span>&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                cout&lt;&lt;d1&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;e[i].v&lt;&lt;<span class="string">&#x27; &#x27;</span>&lt;&lt;<span class="string">&quot;4&quot;</span>&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(e[i].w==<span class="number">4</span>) n4--;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(e[i].w==<span class="number">7</span>) n7--;</span><br><span class="line">        f[e[i].v]=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(d2,d3,e[i].v,l2,e[i].w);</span><br><span class="line">        f[e[i].v]=<span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">int</span> x,y,z;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">        e[i]=(E)&#123;x,y,z,g[x]&#125;;g[x]=i;</span><br><span class="line">        e[i+n<span class="number">-1</span>]=(E)&#123;y,x,z,g[y]&#125;;g[y]=i+n<span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        ansu=ansv=<span class="number">0</span>;</span><br><span class="line">        f[i]=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">0</span>,<span class="number">0</span>,i,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        f[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>((ansu&amp;&amp;ansv))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;-1&quot;</span>&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2676 众里寻花</title>
    <url>/posts/16772/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有𝑛个彩灯每个彩灯有一种颜色𝑐𝑜𝑙𝑖（彩灯从1到n标号），有𝑚根细线将它们连接在一起。你想用这些彩灯作出一朵美丽的花，进一步说你想从这𝑚根细线中保留𝑛−1根，且需要保证所有彩灯是连通在一起的。你希望这朵花五彩斑斓，因此你想要连接同颜色彩灯的细线越少越好。请问这个最小值是多少？</p>
<p>数据范围：</p>
<p>2≤𝑛≤100,1≤𝑚≤200,1≤𝑐𝑜𝑙𝑖≤𝑛</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>连接同颜色的是1，否则为0，然后最小生成树。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m,f[<span class="number">120</span>],ans;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">120</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> f[x]==<span class="number">0</span>?x:f[x]=<span class="built_in">find</span>(f[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> u,v,w;</span><br><span class="line">&#125;e[<span class="number">220</span>];;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.w&lt;y.w;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        <span class="keyword">if</span>(a[x]==a[y])&#123;</span><br><span class="line">            e[i]=(E)&#123;x,y,<span class="number">1</span>&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            e[i]=(E)&#123;x,y,<span class="number">0</span>&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+m,cmp);</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;e[i].w&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">int</span> u=<span class="built_in">find</span>(e[i].u),v=<span class="built_in">find</span>(e[i].v);</span><br><span class="line">        <span class="keyword">if</span>(u!=v)&#123;</span><br><span class="line">            f[u]=v;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">if</span>(e[i].w) ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cnt==n<span class="number">-1</span>) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2840 ATM</title>
    <url>/posts/19537/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>Siruseri 城中的道路都是单向的。不同的道路由路口连接。按照法律的规定， 在每个路口都设立了一个 Siruseri 银行的 ATM 取款机。令人奇怪的是，Siruseri 的酒吧也都设在路口，虽然并不是每个路口都设有酒吧。Banditji 计划实施 Siruseri 有史以来最惊天动地的 ATM 抢劫。他将从市中心 出发，沿着单向道路行驶，抢劫所有他途径的 ATM 机，最终他将在一个酒吧庆 祝他的胜利。使用高超的黑客技术，他获知了每个 ATM 机中可以掠取的现金数额。他希 望你帮助他计算从市中心出发最后到达某个酒吧时最多能抢劫的现金总数。他可 以经过同一路口或道路任意多次。但只要他抢劫过某个 ATM 机后，该 ATM 机 里面就不会再有钱了。 例如，假设该城中有 6 个路口，道路的连接情况如下图所示： [没有图] 市中心在路口 1，由一个入口符号→来标识，那些有酒吧的路口用双圈来表示。每个 ATM 机中可取的钱数标在了路口的上方。在这个例子中，Banditji 能抢 劫的现金总数为 47，实施的抢劫路线是：1-2-4-1-2-3-5。</p>
<p>第一行包含两个整数N、M。N表示路口的个数，M表示道路条数。 接下来M行，每行两个整数，这两个整数都在1到N之间， 第i+1行的两个整数表示第i条道路的起点和终点的路口编号。 接下来N行，每行一个整数，按顺序表示每个路口处的ATM机中的钱数。 接下来一行包含两个整数S、P，S表示市中心的编号，也就是出发的路口。P表示酒吧数目。 接下来的一行中有P个整数，表示P个有酒吧的路口的编号 N, M&lt;=500000。每个ATM机中可取的钱数为一个非负整数且不超过4000。 输入数据保证你可以从市中心沿着Siruseri的单向的道路到达其中的至少一个酒吧。</p>
<p>输出一个整数，表示Banditji从市中心开始到某个酒吧结束所能抢劫的最多的现金总数。</p>
<p>n，m范围50W</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>Tarjan缩点，然后新图上跑拓扑。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">500020</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXM=<span class="number">500020</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,idx,cnt,g[MAXN];</span><br><span class="line"><span class="keyword">int</span> dfn[MAXN],low[MAXN];</span><br><span class="line"><span class="keyword">bool</span> instack[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> u,v,nex;</span><br><span class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span>&lt;(<span class="keyword">const</span> E x)<span class="keyword">const</span>&#123;</span><br><span class="line">		<span class="keyword">if</span>(u==x.u) <span class="keyword">return</span> v&lt;x.v;</span><br><span class="line">		<span class="keyword">return</span> u&lt;x.u;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">bool</span> <span class="keyword">operator</span>==(<span class="keyword">const</span> E x)<span class="keyword">const</span>&#123;</span><br><span class="line">		<span class="keyword">return</span> u==x.u&amp;&amp;v==x.v&amp;&amp;nex==x.nex;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;e[MAXM];</span><br><span class="line">stack&lt;<span class="keyword">int</span>&gt;s;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;belong[MAXN];</span><br><span class="line"><span class="keyword">int</span> p2p[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">	dfn[u]=low[u]=++idx;</span><br><span class="line">	s.<span class="built_in">push</span>(u);</span><br><span class="line">	instack[u]=<span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=g[u];i&gt;<span class="number">0</span>;i=e[i].nex)&#123;</span><br><span class="line">		<span class="keyword">int</span> v=e[i].v;</span><br><span class="line">		<span class="keyword">if</span>(!dfn[v])&#123;</span><br><span class="line">			<span class="built_in">Tarjan</span>(v);</span><br><span class="line">			low[u]=<span class="built_in">min</span>(low[u],low[v]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(instack[v])&#123;</span><br><span class="line">			low[u]=<span class="built_in">min</span>(low[u],dfn[v]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(dfn[u]==low[u])&#123;</span><br><span class="line">		++cnt;</span><br><span class="line">		<span class="keyword">int</span> cur;</span><br><span class="line">		<span class="keyword">do</span>&#123;</span><br><span class="line">			cur=s.<span class="built_in">top</span>();s.<span class="built_in">pop</span>();</span><br><span class="line">			instack[cur]=<span class="literal">false</span>;</span><br><span class="line">			belong[cnt].<span class="built_in">push_back</span>(cur);</span><br><span class="line">			p2p[cur]=cnt;</span><br><span class="line">		&#125;<span class="keyword">while</span>(cur!=u);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> money[MAXN];</span><br><span class="line"><span class="keyword">int</span> jiub[MAXN];</span><br><span class="line"><span class="keyword">int</span> st,num;</span><br><span class="line"><span class="keyword">int</span> nn;</span><br><span class="line"><span class="keyword">int</span> new_money[MAXN];</span><br><span class="line"><span class="keyword">int</span> dp[MAXN];</span><br><span class="line"><span class="keyword">int</span> du[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">	<span class="comment">//dp[u]=max(dp[u],sum+new_money[u]);</span></span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=g[u];i&gt;<span class="number">0</span>;i=e[i].nex)&#123;</span><br><span class="line">		<span class="keyword">int</span> v=e[i].v;</span><br><span class="line">		du[v]--;</span><br><span class="line">		dp[v]=<span class="built_in">max</span>(dp[v],dp[u]+new_money[v]);</span><br><span class="line">		<span class="keyword">if</span>(du[e[i].v]==<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="built_in">dfs</span>(e[i].v);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	io_opt;</span><br><span class="line">	cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">	<span class="keyword">int</span> x,y;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">		e[i]=(E)&#123;x,y,g[x]&#125;;g[x]=i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;money[i];</span><br><span class="line">	&#125;</span><br><span class="line">	cin&gt;&gt;st&gt;&gt;num;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i++)&#123;</span><br><span class="line">		cin&gt;&gt;jiub[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">Tarjan</span>(st);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=m;i++)&#123;</span><br><span class="line">		<span class="keyword">int</span> u=e[i].u,v=e[i].v;</span><br><span class="line">		<span class="keyword">if</span>(!p2p[u]||!p2p[v]||p2p[u]==p2p[v])&#123;</span><br><span class="line">			e[i].u=e[i].v=<span class="number">1000000</span>;</span><br><span class="line">			e[i].nex=<span class="number">1000000</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			e[i].u=p2p[u];</span><br><span class="line">			e[i].v=p2p[v];</span><br><span class="line">			e[i].nex=<span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=cnt;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;belong[i].<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">			new_money[i]+=money[belong[i][j]];</span><br><span class="line">			<span class="comment">//cout&lt;&lt;belong[i][j]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//cout&lt;&lt;endl;</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+m);</span><br><span class="line">	nn=<span class="built_in">unique</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+m)-(e+<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">while</span>(e[nn].nex==<span class="number">1000000</span>) nn--;</span><br><span class="line">	<span class="comment">/*for(int i=1;i&lt;=nn;i++)&#123;</span></span><br><span class="line"><span class="comment">		cout&lt;&lt;e[i].u&lt;&lt;&#x27; &#x27;&lt;&lt;e[i].v&lt;&lt;&#x27; &#x27;&lt;&lt;e[i].nex&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">	&#125;*/</span></span><br><span class="line">	<span class="built_in">memset</span>(g,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(g));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=nn;i++)&#123;</span><br><span class="line">		e[i].nex=g[e[i].u];</span><br><span class="line">		g[e[i].u]=i;</span><br><span class="line">		du[e[i].v]++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//cout&lt;&lt;p2p[st]&lt;&lt;endl;</span></span><br><span class="line">	<span class="comment">/*for(int i=1;i&lt;=nn;i++)&#123;</span></span><br><span class="line"><span class="comment">		cout&lt;&lt;e[i].u&lt;&lt;&#x27; &#x27;&lt;&lt;e[i].v&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">	&#125;*/</span></span><br><span class="line">	dp[p2p[st]]=new_money[p2p[st]];</span><br><span class="line">	<span class="built_in">dfs</span>(p2p[st]);</span><br><span class="line">	<span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i++)&#123;</span><br><span class="line">		ans=<span class="built_in">max</span>(ans,dp[p2p[jiub[i]]]);</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2680 争渡</title>
    <url>/posts/31182/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>人生如逆水行舟，不进则退。你一生中有𝑛个阶段，每个阶段有一个状态下限𝐿𝑖，也有一个状态上限𝑅𝑖，你想规划你的一生中各阶段的状态值，使得你的状态在𝑛个阶段中始终在变好（严格递增）。请你计算有多少种不同的人生规划。由于答案较大，只需输出答案对998244353取余的结果</p>
<p>数据范围：1≤𝑛≤200,1≤𝐿𝑖≤𝑅𝑖≤104</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>解法请购买，这里谈一点优化。</p>
<p>反正多余的也没啥用。</p>
<p>对于下限l，如果前一个大，当前的可以修改为前一个。（升序）</p>
<p>对于上限r，如果后一个小，当前的可以修改为后一个。（降序）</p>
<p>对于每个i，求j=l[i]的值，即求前面i-1，j小于l[i]的和时，从l[i-1]开始求。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="comment">//#include&lt;iostream&gt;</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="comment">//using namespace std;</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,sum;</span><br><span class="line"><span class="keyword">int</span> l[<span class="number">220</span>],r[<span class="number">220</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">220</span>][<span class="number">10020</span>];</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">min</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&lt;b?a:b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    n=<span class="built_in">rd</span>();</span><br><span class="line">    f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        l[i]=<span class="built_in">rd</span>();</span><br><span class="line">        r[i]=<span class="built_in">rd</span>();</span><br><span class="line">        <span class="keyword">if</span>(l[i]&lt;l[i<span class="number">-1</span>]) l[i]=l[i<span class="number">-1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">2</span>;i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(r[i]&lt;r[i<span class="number">-1</span>]) r[i<span class="number">-1</span>]=r[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=l[i<span class="number">-1</span>];j&lt;l[i];j++) f[i][l[i]]=<span class="built_in">mo</span>(f[i<span class="number">-1</span>][j]+f[i][l[i]],mod);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=l[i]+<span class="number">1</span>;j&lt;=r[i];j++)&#123;</span><br><span class="line">            f[i][j]=<span class="built_in">mo</span>((ll)f[i<span class="number">-1</span>][j<span class="number">-1</span>]+f[i][j<span class="number">-1</span>],mod);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=l[n];i&lt;=r[n];i++)&#123;</span><br><span class="line">        sum=<span class="built_in">mo</span>((ll)sum+f[n][i],mod);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2849 信息传递</title>
    <url>/posts/55524/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>有n个同学（编号为 1 到 n ）正在玩一个信息传递的游戏。在游戏里每人都有一个固定的信息传递对象，其中，编号为 i 的同学的信息传递对象是编号为 Ti的同学。游戏开始时，每人都只知道自己的生日。之后每一轮中，所有人会同时将自己当前所知的生日信息告诉各自的信息传递对象（注意：可能有人可以从若干人那里获取信息，但是每人只会把信息告诉一个人，即自己的信息传递对象）。当有人从别人口中得知自己的生日时，游戏结束。请问该游戏一共可以进行几轮？</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>找出最小的环，由于每个人只会把信息告诉一个人，因此所有环都是无弦环(<strong>无弦环: 非相邻节点间不存在边的环</strong>)，也就是说，每个强连通分量都只有一个环，找出最小的强连通分量(不为1)即可。</p>
<p>代码根据题意在Tarjan基础上做了一些简化。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">200020</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXM=<span class="number">200020</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,idx,cnt,mn=<span class="number">200020</span>;</span><br><span class="line"><span class="keyword">int</span> dfn[MAXN];</span><br><span class="line"><span class="keyword">int</span> low[MAXN];</span><br><span class="line"><span class="keyword">bool</span> instack[MAXN];</span><br><span class="line"><span class="keyword">int</span> a[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> u,v,nex;</span><br><span class="line">&#125;e[MAXM];</span><br><span class="line">stack&lt;<span class="keyword">int</span>&gt;s;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">	dfn[u]=low[u]=++idx;</span><br><span class="line">	s.<span class="built_in">push</span>(u);</span><br><span class="line">	instack[u]=<span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">int</span> v=a[u];</span><br><span class="line">	<span class="keyword">if</span>(!dfn[v])&#123;</span><br><span class="line">		<span class="built_in">Tarjan</span>(v);</span><br><span class="line">		low[u]=<span class="built_in">min</span>(low[u],low[v]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(instack[v])&#123;</span><br><span class="line">		low[u]=<span class="built_in">min</span>(low[u],dfn[v]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(dfn[u]==low[u])&#123;</span><br><span class="line">		<span class="keyword">int</span> cur,ct=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">do</span>&#123;</span><br><span class="line">			cur=s.<span class="built_in">top</span>();s.<span class="built_in">pop</span>();</span><br><span class="line">			instack[cur]=<span class="literal">false</span>;</span><br><span class="line">			ct++;</span><br><span class="line">		&#125;<span class="keyword">while</span>(cur!=u);</span><br><span class="line">		<span class="keyword">if</span>(ct&gt;<span class="number">1</span>) mn=<span class="built_in">min</span>(mn,ct);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	io_opt;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">int</span> x;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;a[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!dfn[i]) <span class="built_in">Tarjan</span>(i);</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;mn&lt;&lt;endl;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 2903 稳定婚姻(Tarjan)</title>
    <url>/posts/22858/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>我们已知n对夫妻的婚姻状况，称第i对夫妻的男方为Bi，女方为Gi。若某男Bi与某女Gj曾经交往过（无论是大学，高中，亦或是幼儿园阶段，i≠j），则当某方与其配偶（即Bi与Gi或Bj与Gj）感情出现问题时，他们有私奔的可能性。不妨设Bi和其配偶Gi感情不和，于是Bi和Gj旧情复燃，进而Bj因被戴绿帽而感到不爽，联系上了他的初恋情人Gk……一串串的离婚事件像多米诺骨牌一般接踵而至。若在Bi和Gi离婚的前提下，这2n个人最终依然能够结合成n对情侣，那么我们称婚姻i为不安全的，否则婚姻i就是安全的。给定所需信息，你的任务是判断每对婚姻是否安全。</p>
<p>第一行为一个正整数n，表示夫妻的对数； 以下n行，每行包含两个字符串，表示这n对夫妻的姓名（先女后男），由一个空格隔开； 第n+2行包含一个正整数m，表示曾经相互喜欢过的情侣对数； 以下m行，每行包含两个字符串，表示这m对相互喜欢过的情侣姓名（先女后男），由一个空格隔开。 所有姓名字符串中只包含英文大小写字母，大小写敏感，长度不大于8， 保证每对关系只在输入文件中出现一次，输入文件的最后m行不会出现未在之前出现过的姓名， 这2n个人的姓名各不相同</p>
<p>输出文件共包含n行，第i行为“Safe”（如果婚姻i是安全的）或“Unsafe”（如果婚姻i是不安全的）。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>二分图，夫妻女向男连边，旧情男向女连边，如果夫妻二人在同一个强连通分量内，那么找到夫妻男到女的一个环，关系在环上转移一下就离婚了，因此只需要求强连通分量即可。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">10020</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXM=<span class="number">50020</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,idx,cnt;</span><br><span class="line"><span class="keyword">int</span> dfn[MAXN];</span><br><span class="line"><span class="keyword">int</span> low[MAXN];</span><br><span class="line"><span class="keyword">bool</span> instack[MAXN];</span><br><span class="line"><span class="keyword">int</span> g[MAXN];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">	<span class="keyword">int</span> u,v,nex;</span><br><span class="line">&#125;e[MAXM];</span><br><span class="line">stack&lt;<span class="keyword">int</span>&gt;s;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt;belong[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Tarjan</span><span class="params">(<span class="keyword">int</span> u)</span></span>&#123;</span><br><span class="line">	dfn[u]=low[u]=++idx;</span><br><span class="line">	s.<span class="built_in">push</span>(u);</span><br><span class="line">	instack[u]=<span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=g[u];i&gt;<span class="number">0</span>;i=e[i].nex)&#123;</span><br><span class="line">		<span class="keyword">int</span> v=e[i].v;</span><br><span class="line">		<span class="keyword">if</span>(!dfn[v])&#123;</span><br><span class="line">			<span class="built_in">Tarjan</span>(v);</span><br><span class="line">			low[u]=<span class="built_in">min</span>(low[u],low[v]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(instack[v])&#123;</span><br><span class="line">			low[u]=<span class="built_in">min</span>(low[u],dfn[v]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span>(dfn[u]==low[u])&#123;</span><br><span class="line">		++cnt;</span><br><span class="line">		<span class="keyword">int</span> cur;</span><br><span class="line">		<span class="keyword">do</span>&#123;</span><br><span class="line">			cur=s.<span class="built_in">top</span>();s.<span class="built_in">pop</span>();</span><br><span class="line">			instack[cur]=<span class="literal">false</span>;</span><br><span class="line">			belong[cnt].<span class="built_in">push_back</span>(cur);</span><br><span class="line">		&#125;<span class="keyword">while</span>(cur!=u);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">map&lt;string,<span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">int</span> name[<span class="number">2</span>*MAXN];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	io_opt;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	string x,y;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">		<span class="keyword">if</span>(!mp[x]) mp[x]=++num;</span><br><span class="line">		<span class="keyword">if</span>(!mp[y]) mp[y]=++num;</span><br><span class="line">		<span class="keyword">int</span> xx=mp[x],yy=mp[y];</span><br><span class="line">		name[<span class="number">2</span>*i<span class="number">-1</span>]=xx;</span><br><span class="line">		name[<span class="number">2</span>*i]=yy;</span><br><span class="line">		e[i]=(E)&#123;xx,yy,g[xx]&#125;;g[xx]=i;</span><br><span class="line">	&#125;</span><br><span class="line">	cin&gt;&gt;m;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=n+<span class="number">1</span>;i&lt;=n+m;i++)&#123;</span><br><span class="line">		cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">		<span class="keyword">int</span> xx=mp[x],yy=mp[y];</span><br><span class="line">		e[i]=(E)&#123;yy,xx,g[yy]&#125;;g[yy]=i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=num;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(!dfn[i]) <span class="built_in">Tarjan</span>(i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(low[name[<span class="number">2</span>*i<span class="number">-1</span>]]==low[name[<span class="number">2</span>*i]])&#123;</span><br><span class="line">			cout&lt;&lt;<span class="string">&quot;Unsafe&quot;</span>&lt;&lt;endl;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span>&#123;</span><br><span class="line">			cout&lt;&lt;<span class="string">&quot;Safe&quot;</span>&lt;&lt;endl;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 3016 Prime Path</title>
    <url>/posts/4657/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>阿P给阿K出了一个难题，他给阿K两个素数A,B，保证A，B的位数相同且为4位或5位。</p>
<p>阿K只能对A作一种操作，即将其中一位数字改成另一个数字，要求每次操作后得到的数还是一个素数，问最少多少次可以从A变到B</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>按每一位bfs</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">998244353</span>;</span><br><span class="line"><span class="function">ll <span class="title">mo</span><span class="params">(ll a,ll p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y==<span class="number">0</span>?x:<span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">speed</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur;</span><br><span class="line">        cur=cur*cur;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//埃式筛法</span></span><br><span class="line">    <span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">    <span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">                ipr[j]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            pri[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> T,a,b;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">wei</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span>&#123;</span><br><span class="line">        x/=<span class="number">10</span>;</span><br><span class="line">        ret++;</span><br><span class="line">    &#125;<span class="keyword">while</span>(x);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> num,cnt;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">bool</span> f[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">int</span> bits[<span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">comb</span><span class="params">(<span class="keyword">int</span> t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=t;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">        ret*=<span class="number">10</span>;</span><br><span class="line">        ret+=bits[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bfs</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t=<span class="built_in">wei</span>(a);</span><br><span class="line">    queue&lt;E&gt;q;</span><br><span class="line">    q.<span class="built_in">push</span>((E)&#123;a,<span class="number">0</span>&#125;);</span><br><span class="line">    f[a]=<span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span>(!q.<span class="built_in">empty</span>())&#123;</span><br><span class="line">        E cur=q.<span class="built_in">front</span>();q.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="keyword">if</span>(cur.num==b) <span class="keyword">return</span> cur.cnt;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line">            bits[i]=cur.num%<span class="number">10</span>;</span><br><span class="line">            cur.num/=<span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;comb(t)&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=t;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> d=bits[i];</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=<span class="number">9</span>;j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(j==d||(i==t&amp;&amp;j==<span class="number">0</span>)) <span class="keyword">continue</span>;</span><br><span class="line">                bits[i]=j;</span><br><span class="line">                <span class="keyword">int</span> nex=<span class="built_in">comb</span>(t);</span><br><span class="line">                <span class="comment">//cout&lt;&lt;nex&lt;&lt;endl;</span></span><br><span class="line">                <span class="keyword">if</span>(ipr[nex]&amp;&amp;!f[nex])&#123;</span><br><span class="line">                    f[nex]=<span class="literal">true</span>;</span><br><span class="line">                    q.<span class="built_in">push</span>((E)&#123;nex,cur.cnt+<span class="number">1</span>&#125;);</span><br><span class="line">                    <span class="comment">//cout&lt;&lt;nex&lt;&lt;endl;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            bits[i]=d;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    <span class="built_in">prime</span>();</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(f,<span class="literal">false</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(f));</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">        <span class="keyword">if</span>(a==b)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="number">0</span>&lt;&lt;endl;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="built_in">bfs</span>();</span><br><span class="line">        <span class="keyword">if</span>(ans==<span class="number">-1</span>)&#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">&quot;No solution&quot;</span>&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 3105 小明喜欢树 V2</title>
    <url>/posts/15019/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>小明非常喜欢树，有一天小明得到这样一棵树，每个树节点都有一个编号，有n个节点的树的编号为1到n,每个编号代表该节点的海拔高度，现在小明要在这颗树上找到一些路径，从起点到终点需要满足海拔先单调上升后单调下降的性质，起点或终点不同即为不同的路径，问满足条件的路径有多少条，聪明的你可以帮助小明解决这个问题吗？</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>计算一个点周围小于等于它的点，包括它自身。然后对于每一个点，连通的小于它的点，之前算出来的值（可以认为这个值是这条分支的起点/终点数）两两相乘。</p>
<p>code1只是简单记忆化了一下，code2融合进计算值里，由于每次只是和前面的sum，不是和总sum相乘，所以答案要*2.</p>
<h2 id="code1">Code1</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define db double</span><br><span class="line">#define ll long long</span><br><span class="line">inline int rd()&#123;</span><br><span class="line">	int x=0;</span><br><span class="line">	char ch=0;</span><br><span class="line">	while(ch&lt;&#x27;0&#x27;||ch&gt;&#x27;9&#x27;) &#123;ch=getchar();&#125;</span><br><span class="line">	while(ch&gt;=&#x27;0&#x27;&amp;&amp;ch&lt;=&#x27;9&#x27;)&#123;x=x*10+ch-&#x27;0&#x27;;ch=getchar();&#125;</span><br><span class="line">	return x;</span><br><span class="line">&#125;</span><br><span class="line">const int MAXN=1000020;</span><br><span class="line">int n;</span><br><span class="line">int g[MAXN];</span><br><span class="line">struct E&#123;</span><br><span class="line">	int u,v,nex;</span><br><span class="line">&#125;e[MAXN*2];</span><br><span class="line">ll f[MAXN];</span><br><span class="line">ll dfs(int u)&#123;</span><br><span class="line">	ll sum=0;</span><br><span class="line">	for(int i=g[u];i&gt;0;i=e[i].nex)&#123;</span><br><span class="line">		int v=e[i].v;</span><br><span class="line">		if(v&lt;u) sum+=f[v]==0?dfs(v):f[v];</span><br><span class="line">	&#125;</span><br><span class="line">	return f[u]=sum+1;</span><br><span class="line">&#125;</span><br><span class="line">ll ans=0;</span><br><span class="line">int main()&#123;</span><br><span class="line">	//io_opt;</span><br><span class="line">	n=rd();</span><br><span class="line">	int x,y;</span><br><span class="line">	for(int i=1;i&lt;n;i++)&#123;</span><br><span class="line">		x=rd();</span><br><span class="line">		y=rd();</span><br><span class="line">		e[i]=(E)&#123;x,y,g[x]&#125;;g[x]=i;</span><br><span class="line">		e[i+n-1]=(E)&#123;y,x,g[y]&#125;;g[y]=i+n-1;</span><br><span class="line">	&#125;</span><br><span class="line">	for(int i=n;i&gt;=1;i--)&#123;</span><br><span class="line">		if(!f[i]) dfs(i);</span><br><span class="line">	&#125;</span><br><span class="line">	for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">		ll sum=0;</span><br><span class="line">		for(int j=g[i];j&gt;0;j=e[j].nex)&#123;</span><br><span class="line">			int v=e[j].v;</span><br><span class="line">			if(v&lt;i) sum+=f[v];</span><br><span class="line">		&#125;</span><br><span class="line">		for(int j=g[i];j&gt;0;j=e[j].nex)&#123;</span><br><span class="line">			int v=e[j].v;</span><br><span class="line">			if(v&lt;i) ans+=f[v]*(sum-f[v]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	printf(&quot;%lld\n&quot;,ans);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="code2">code2</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define db double</span><br><span class="line">#define ll long long</span><br><span class="line">const int MAXN=1000020;</span><br><span class="line">int n;</span><br><span class="line">int g[MAXN];</span><br><span class="line">struct E&#123;</span><br><span class="line">	int u,v,nex;</span><br><span class="line">&#125;e[MAXN*2];</span><br><span class="line">int f[MAXN];</span><br><span class="line">int sum[MAXN];</span><br><span class="line">ll ans=0;</span><br><span class="line">int dfs(int u)&#123;</span><br><span class="line">	for(int i=g[u];i&gt;0;i=e[i].nex)&#123;</span><br><span class="line">		int v=e[i].v;</span><br><span class="line">		if(v&lt;u)&#123;</span><br><span class="line">			sum[u]+=f[v]==0?dfs(v):f[v];</span><br><span class="line">			ans+=f[v]*(ll)(sum[u]-f[v]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	return f[u]=sum[u]+1;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">	//io_opt;</span><br><span class="line">	scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">	int x,y;</span><br><span class="line">	for(int i=1;i&lt;n;i++)&#123;</span><br><span class="line">		scanf(&quot;%d%d&quot;,&amp;x,&amp;y);</span><br><span class="line">		e[i]=(E)&#123;x,y,g[x]&#125;;g[x]=i;</span><br><span class="line">		e[i+n-1]=(E)&#123;y,x,g[y]&#125;;g[y]=i+n-1;</span><br><span class="line">	&#125;</span><br><span class="line">	for(int i=n;i&gt;=1;i--)&#123;</span><br><span class="line">		if(!f[i]) dfs(i);</span><br><span class="line">	&#125;</span><br><span class="line">	printf(&quot;%lld\n&quot;,ans*2);</span><br><span class="line">	return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>ACM中的数学</title>
    <url>/posts/64709/</url>
    <content><![CDATA[<p><strong>记录一下方便回看</strong></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vTW9ybmluZy1HbG9yeS9wLzExMTA2ODI4Lmh0bWw=">欧拉函数|(扩展)欧拉定理|欧拉反演<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vS2hhZGEtSmhpbi9wLzk1MjYyOTIuaHRtbA==">初探莫比乌斯反演及欧拉反演<i class="fa fa-external-link-alt"></i></span></p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vd2pzb2ovcC8xMTUxNzEwNC5odG1s">欧拉素数筛的理解与实现<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>51Nod 3049 挑选数字</title>
    <url>/posts/47161/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>给出n个正整数，从中挑选若干个，使得他们的和为m。如果存在多个，输出排序后字典序最小的一组。如果没有找到任何一组，输出&quot;No Solution&quot;。</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>如果n大于15，从16开始分成两部分，先枚举后一半可能出现的值，map记录，然后按顺序枚举前一半，如果能和某个值组成m就记录每个数，返回，再枚举后一半，找到具体的数字。</p>
<p>主要是dfs写的太烂了，交对看别人的才知道怎么写。</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">double</span> ld;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod=<span class="number">1e9</span>+<span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">mo</span><span class="params">(ll a,<span class="keyword">int</span> p)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">rd</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>, f = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span> ch;</span><br><span class="line">    <span class="keyword">while</span> (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch == <span class="string">&#x27;-&#x27;</span>)f = <span class="number">-1</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">        x = x * <span class="number">10</span> + ch - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch = <span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f * x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">gcd</span><span class="params">(ll x, ll y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> y==<span class="number">0</span>?x:<span class="built_in">gcd</span>(y,x%y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">speed</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll cur=a,anss=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) anss=anss*cur;</span><br><span class="line">        cur=cur*cur;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> anss;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN=<span class="number">1e5</span>;</span><br><span class="line"><span class="keyword">bool</span> ipr[MAXN+<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> cnt,pri[MAXN/<span class="number">5</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span></span>&#123;<span class="comment">//埃式筛法</span></span><br><span class="line">    <span class="keyword">int</span> N=<span class="built_in">sqrt</span>(MAXN)+<span class="number">0.5</span>,mul;</span><br><span class="line">    <span class="built_in">memset</span>(ipr,<span class="literal">true</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>]=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            i==<span class="number">2</span>?mul=<span class="number">1</span>:mul=<span class="number">2</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i*i;j&lt;=MAXN;j+=i*mul)&#123;</span><br><span class="line">                ipr[j]=<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAXN;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ipr[i]==<span class="literal">true</span>)&#123;</span><br><span class="line">            pri[++cnt]=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">50</span>];</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">50</span>],ct=<span class="number">0</span>,al=<span class="number">0</span>,mid;</span><br><span class="line"><span class="keyword">bool</span> fg=<span class="literal">false</span>;</span><br><span class="line">map&lt;<span class="keyword">int</span>,<span class="keyword">int</span>&gt;mp;</span><br><span class="line"><span class="keyword">int</span> sss=<span class="number">15</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> cur,<span class="keyword">int</span> sum,<span class="keyword">int</span> cou)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fg) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(sum==m)&#123;</span><br><span class="line">        fg=<span class="literal">true</span>;</span><br><span class="line">        ct=cou;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur==n+<span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">    ans[cou+<span class="number">1</span>]=a[cur];</span><br><span class="line">    <span class="keyword">if</span>(sum+a[cur]&lt;=m&amp;&amp;al-sum-a[cur]&gt;=m-sum-a[cur]) <span class="built_in">dfs</span>(cur+<span class="number">1</span>,sum+a[cur],cou+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(al-sum&gt;=m-sum) <span class="built_in">dfs</span>(cur+<span class="number">1</span>,sum,cou);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs1</span><span class="params">(<span class="keyword">int</span> cur,<span class="keyword">int</span> sum)</span></span>&#123;</span><br><span class="line">    mp[sum]=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(cur==n+<span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="built_in">dfs1</span>(cur+<span class="number">1</span>,sum+a[cur]);</span><br><span class="line">    <span class="built_in">dfs1</span>(cur+<span class="number">1</span>,sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs2</span><span class="params">(<span class="keyword">int</span> cur,<span class="keyword">int</span> sum,<span class="keyword">int</span> cou)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fg) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(mp[m-sum])&#123;</span><br><span class="line">        fg=<span class="literal">true</span>;</span><br><span class="line">        mid=sum;</span><br><span class="line">        ct=cou;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur==sss+<span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">    ans[cou+<span class="number">1</span>]=a[cur];</span><br><span class="line">    <span class="keyword">if</span>(sum+a[cur]&lt;=m&amp;&amp;al-sum-a[cur]&gt;=m-sum-a[cur]) <span class="built_in">dfs2</span>(cur+<span class="number">1</span>,sum+a[cur],cou+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(al-sum&gt;=m-sum) <span class="built_in">dfs2</span>(cur+<span class="number">1</span>,sum,cou);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> fg2=<span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs3</span><span class="params">(<span class="keyword">int</span> cur,<span class="keyword">int</span> sum,<span class="keyword">int</span> cou)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(fg2) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(sum==m)&#123;</span><br><span class="line">        fg2=<span class="literal">true</span>;</span><br><span class="line">        ct=cou;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cur==n+<span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">    ans[cou+<span class="number">1</span>]=a[cur];</span><br><span class="line">    <span class="keyword">if</span>(sum+a[cur]&lt;=m&amp;&amp;al-sum-a[cur]&gt;=m-sum-a[cur]) <span class="built_in">dfs3</span>(cur+<span class="number">1</span>,sum+a[cur],cou+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(al-sum&gt;=m-sum) <span class="built_in">dfs3</span>(cur+<span class="number">1</span>,sum,cou);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">        al+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(al&lt;m)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No Solution\n&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(a+<span class="number">1</span>,a+<span class="number">1</span>+n);</span><br><span class="line">    <span class="keyword">if</span>(n&lt;=sss)&#123;</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">dfs1</span>(sss+<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="built_in">dfs2</span>(<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;ct&lt;&lt;endl;</span></span><br><span class="line">        <span class="keyword">if</span>(fg) <span class="built_in">dfs3</span>(sss+<span class="number">1</span>,mid,ct);</span><br><span class="line">        <span class="comment">//cout&lt;&lt;ct&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(fg)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=ct;i++)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;No Solution\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>Disk Tree</title>
    <url>/posts/51797/</url>
    <content><![CDATA[<h3 id="题目描述">题目描述</h3>
<p>Hacker Bill has accidentally lost all the information from his workstation's hard drive and he has no backup copies of its contents. He does not regret for the loss of the files themselves, but for the very nice and convenient directory structure that he had created and cherished during years of work. Fortunately, Bill has several copies of directory listings from his hard drive. Using those listings he was able to recover full paths (like &quot;WINNT32~186&quot;) for some directories. He put all of them in a file by writing each path he has found on a separate line. Your task is to write a program that will help Bill to restore his state of the art directory structure by providing nicely formatted directory tree.</p>
<span id="more"></span>
<h3 id="输入">输入</h3>
<p>The first line of the input file contains single integer number N (1 &lt;= N &lt;= 500) that denotes a total number of distinct directory paths. Then N lines with directory paths follow. Each directory path occupies a single line and does not contain any spaces, including leading or trailing ones. No path exceeds 80 characters. Each path is listed once and consists of a number of directory names separated by a back slash (&quot;&quot;).</p>
<p>Each directory name consists of 1 to 8 uppercase letters, numbers, or the special characters from the following list: exclamation mark, number sign, dollar sign, percent sign, ampersand, apostrophe, opening and closing parenthesis, hyphen sign, commercial at, circumflex accent, underscore, grave accent, opening and closing curly bracket, and tilde (&quot;!#$%&amp;'()-@^_`{}~&quot;).</p>
<h3 id="输出">输出</h3>
<p>Write to the output file the formatted directory tree. Each directory name shall be listed on its own line preceded by a number of spaces that indicate its depth in the directory hierarchy. The subdirectories shall be listed in lexicographic order immediately after their parent directories preceded by one more space than their parent directory. Top level directories shall have no spaces printed before their names and shall be listed in lexicographic order. See sample below for clarification of the output format.</p>
<h3 id="样例输入">样例输入</h3>
<blockquote>
<p>7 WINNT32 GAMES WINNT HOME WIN GAMES WINNT32~186</p>
</blockquote>
<h3 id="样例输出">样例输出</h3>
<pre><code>GAMES
 DRIVERS
HOME
WIN
 SOFT
WINNT
 DRIVERS
 SYSTEM32
  CERTSRV
   CERTCO~1
    X86
  CONFIG</code></pre>
<h4 id="瞎搞代码只能在学校oj上交过poj上交超时">瞎搞代码，只能在学校OJ上交过，POJ上交超时</h4>
<h4 id="一开始想成文件名不重复了正解是手动链树多叉转二叉添加节点的时候排序vector瞎搞模拟有点慢懒得改了">一开始想成文件名不重复了，正解是手动链树，多叉转二叉，添加节点的时候排序，vector瞎搞模拟有点慢，懒得改了</h4>
<p>```c++ #include<iostream> #include&lt;string.h&gt; #include&lt;stdio.h&gt; #include<cstdio> #include<queue> #include<cstring> #include<algorithm> #include<vector> #include<queue> #include<map> using namespace std; int n,cnt,T; struct E{ string s; int pla; vector<int>v; }; E fir[520]; E node[20020]; int fircnt=0; int cmp(E x,E y){ return x.s&lt;y.s; } int cmp1(int x,int y){ return node[x].s&lt;node[y].s; } void dfs(int cur,int h){ if(cur==0) return; if(h==0){ cout&lt;&lt;fir[cur].s&lt;&lt;endl; sort(fir[cur].v.begin(),fir[cur].v.end(),cmp1); for(int i=0;i&lt;fir[cur].v.size();i++){ dfs(fir[cur].v[i],h+1); } } else{ for(int i=1;i&lt;=h;i++) printf(&quot; &quot;); cout&lt;&lt;node[cur].s&lt;&lt;endl; sort(node[cur].v.begin(),node[cur].v.end(),cmp1); for(int i=0;i&lt;node[cur].v.size();i++){ dfs(node[cur].v[i],h+1); } } }</p>
<p>int main(){ //freopen(&quot;I.in&quot;,&quot;r&quot;,stdin); //freopen(&quot;I.out&quot;,&quot;w&quot;,stdout); //cin&gt;&gt;T; T=1; while(T--){ //for(int i=1;i&lt;=cnt;i++) a[i].clear(); cnt=fircnt=0; //memset(e,0,sizeof(e)); //memset(root,0,sizeof(root)); //mp.clear(); cin&gt;&gt;n; string s0; for(int i=1;i&lt;=n;i++){ cin&gt;&gt;s0; int x1=-1,x2=-1; string tmps=&quot;&quot;;//,last=&quot;&quot;; int last=0,tmp,cur=0; for(int j=0;j&lt;s0.size();j++){ if(x2==-1&amp;&amp;s0[j]=='\'){ cur++; x2=j; tmps=s0.substr(0,j); tmp=-1; for(int k=1;k&lt;=fircnt;k++){ if(tmps==fir[k].s){ tmp=k; break; } } if(tmp==-1){ ++fircnt; fir[fircnt]=(E){tmps,fircnt}; last=fircnt; } else{ last=fir[tmp].pla; } //cout&lt;&lt;tmps&lt;&lt;' '; } else if(s0[j]=='\'){ cur++; x1=x2,x2=j; tmps=s0.substr(x1+1,x2-x1-1); tmp=-1; //if(tmps==&quot;SYSTEM32&quot;)cout&lt;&lt;&quot;!!!&quot;; if(cur==2){</p>
<pre><code>                    for(int k=0;k&lt;fir[last].v.size();k++)&#123;
                        if(tmps==node[fir[last].v[k]].s)&#123;
                            tmp=k;
                            break;
                        &#125;
                    &#125;
                    if(tmp==-1)&#123;
                        ++cnt;
                        node[cnt]=(E)&#123;tmps,cnt&#125;;
                        fir[last].v.push_back(cnt);
                        last=cnt;
                    &#125;
                    else&#123;
                        last=node[fir[last].v[tmp]].pla;
                    &#125;
                    /*if(tmps==&quot;SYSTEM32&quot;)&#123;
                        cout&lt;&lt;&quot;^^&quot;&lt;&lt;tmp;
                        cout&lt;&lt;&quot;&amp;&amp;&quot;&lt;&lt;last&lt;&lt;&quot;&amp;&amp;&quot;&lt;&lt;endl;
                    &#125;*/
                &#125;
                else&#123;
                    /*if(tmps==&quot;CERTSRV&quot;)&#123;
                        cout&lt;&lt;&quot;&amp;&amp;&quot;&lt;&lt;last&lt;&lt;&quot;&amp;&amp;&quot;&lt;&lt;endl;
                    &#125;*/
                    for(int k=0;k&lt;node[last].v.size();k++)&#123;
                        if(tmps==node[node[last].v[k]].s)&#123;
                            tmp=k;
                            break;
                        &#125;
                    &#125;
                     
                    if(tmp==-1)&#123;
                        ++cnt;
                        node[cnt]=(E)&#123;tmps,cnt&#125;;
                        node[last].v.push_back(cnt);
                        last=cnt;
                    &#125;
                    else&#123;
                        last=node[node[last].v[tmp]].pla;
                    &#125;
                &#125;
                //cout&lt;&lt;tmps&lt;&lt;&#39; &#39;;
            &#125;
        &#125;
        if(x1==-1&amp;&amp;x2==-1)&#123;
            cur++;
            tmps=s0.substr(0,s0.size());
            tmp=-1;
            for(int k=1;k&lt;=fircnt;k++)&#123;
                if(tmps==fir[k].s)&#123;
                    tmp=k;
                    break;
                &#125;
            &#125;
            if(tmp==-1)&#123;
                ++fircnt;
                fir[fircnt]=(E)&#123;tmps,fircnt&#125;;
                last=fircnt;
            &#125;
            else&#123;
                last=fir[tmp].pla;
            &#125;
            //cout&lt;&lt;tmps&lt;&lt;&#39; &#39;;
        &#125;
        else if(s0[s0.size()-1]!=&#39;\\&#39;)&#123;
            cur++;
            tmps=s0.substr(x2+1,s0.size()-x2-1);
            tmp=-1;
            if(cur==2)&#123;
                for(int k=0;k&lt;fir[last].v.size();k++)&#123;
                    if(tmps==node[fir[last].v[k]].s)&#123;
                        tmp=k;
                        break;
                    &#125;
                &#125;
                if(tmp==-1)&#123;
                    ++cnt;
                    node[cnt]=(E)&#123;tmps,cnt&#125;;
                    fir[last].v.push_back(cnt);
                    last=cnt;
                &#125;
                else&#123;
                    last=node[fir[last].v[tmp]].pla;
                &#125;
            &#125;
            else&#123;
                for(int k=0;k&lt;node[last].v.size();k++)&#123;
                    if(tmps==node[node[last].v[k]].s)&#123;
                        tmp=k;
                        break;
                    &#125;
                &#125;
                if(tmp==-1)&#123;
                    ++cnt;
                    node[cnt]=(E)&#123;tmps,cnt&#125;;
                    node[last].v.push_back(cnt);
                    last=cnt;
                &#125;
                else&#123;
                    last=node[node[last].v[tmp]].pla;
                &#125;
            &#125;
            //cout&lt;&lt;tmps&lt;&lt;&#39; &#39;;
        &#125;
        //cout&lt;&lt;endl;
    &#125;
     
    sort(fir+1,fir+1+fircnt,cmp);
    /*printf(&quot;*****测试*****\n&quot;);
    for(int i=1;i&lt;=cnt;i++)&#123;
        cout&lt;&lt;e[i].s&lt;&lt;&quot;:&quot;;
        for(int j=0;j&lt;a[i][0];j++)&#123;
            cout&lt;&lt;e[a[i][j]].s&lt;&lt;&#39; &#39;;
        &#125;
        cout&lt;&lt;endl;
    &#125;
    dfstest(trieroot);
    printf(&quot;*****测试*****\n&quot;);*/
    for(int i=1;i&lt;=fircnt;i++)&#123;
        dfs(i,0);
    &#125;
    /*cout&lt;&lt;&quot;**********&quot;&lt;&lt;endl;
    for(int i=1;i&lt;=fircnt;i++)&#123;
        cout&lt;&lt;fir[i].s&lt;&lt;endl;
    &#125;
    cout&lt;&lt;&quot;************&quot;&lt;&lt;endl;
    for(int i=1;i&lt;=cnt;i++)&#123;
        cout&lt;&lt;node[i].s&lt;&lt;endl;
    &#125;*/
    if(T) printf(&quot;\n&quot;);
&#125;
 
return 0;</code></pre>
<p>}```</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>HDU2588 GCD</title>
    <url>/posts/38455/</url>
    <content><![CDATA[<h1 id="problem">Problem</h1>
<p>Given integers N and M, how many integer X satisfies 1&lt;=X&lt;=N and (X,N)&gt;=M.</p>
<p>The first line of input is an integer T(T&lt;=100) representing the number of test cases. The following T lines each contains two numbers N and M (2&lt;=N&lt;=1000000000, 1&lt;=M&lt;=N), representing a test case.</p>
<p>For each test case,output the answer on a single line.</p>
<span id="more"></span>
<h1 id="solution">Solution</h1>
<p>设p=(X,N) (1&lt;=x&lt;=n)，存在a,b，使得ap=X,bp=N，易知(a,b)=1。</p>
<p>问题转化为对于每一个p&gt;=M，存在多少对a,b，求总的数量。</p>
<p>枚举p|N(p&gt;=M)，可以得到b=N/p，由于ab互质，ab对的数量为euler(N/p)。</p>
<p>由于p与N/p对称，枚举根号的量即可。</p>
<p>代码是用的质因数分解后枚举。</p>
<h1 id="code">Code</h1>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> io_opt</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> scanf sb</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> printf sb</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> __int128 lll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> db;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> eps 0.000000001</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> PN = <span class="number">100000</span>;</span><br><span class="line"><span class="keyword">int</span> pn;</span><br><span class="line"><span class="keyword">bool</span> ipr[PN + <span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> pri[PN / <span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> phi[PN + <span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">prime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(ipr, <span class="literal">true</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>] = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">int</span> N = <span class="built_in">sqrt</span>(PN) + <span class="number">0.5</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= N; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ipr[i]) &#123;</span><br><span class="line">            <span class="keyword">int</span> d = i == <span class="number">2</span> ? i : <span class="number">2</span> * i;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i * i; j &lt;= PN; j += d) &#123;</span><br><span class="line">                ipr[j] = <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= PN; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ipr[i]) pri[++pn] = i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">eprime</span><span class="params">()</span> </span>&#123; <span class="comment">//not verify</span></span><br><span class="line">    <span class="built_in">memset</span>(ipr, <span class="literal">true</span>, <span class="built_in"><span class="keyword">sizeof</span></span>(ipr));</span><br><span class="line">    ipr[<span class="number">1</span>] = <span class="literal">false</span>;</span><br><span class="line">    phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= PN; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (ipr[i]) pri[++pn] = i, phi[i] = i - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= pn &amp;&amp; pri[j] * i &lt;= PN; j++) &#123;</span><br><span class="line">            ipr[pri[j] * i] = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % pri[j]) phi[i * pri[j]] = phi[i] * phi[pri[j]];</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                phi[i * pri[j]] = phi[i] * pri[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">euler_phi</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i * i &lt;= n; i++)</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">            ans = ans / i * (i - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span> (n % i == <span class="number">0</span>) n /= i;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">1</span>) ans = ans / n * (n - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">speed</span><span class="params">(ll a, ll b, ll p)</span> </span>&#123;</span><br><span class="line">    ll cur = a, ans = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b) &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) ans = ans * cur % p;</span><br><span class="line">        cur = cur * cur % p;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans % p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a, ll b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? a : <span class="built_in">gcd</span>(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> T, n, m, cnt, ans;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">100020</span>], b[<span class="number">100020</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fj</span><span class="params">(<span class="keyword">int</span> t)</span> </span>&#123;</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= pn &amp;&amp; pri[i] * pri[i] &lt;= t; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (t % pri[i] == <span class="number">0</span>) a[++cnt] = pri[i], b[cnt] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (t % pri[i] == <span class="number">0</span>) &#123;</span><br><span class="line">            b[cnt]++;</span><br><span class="line">            t /= pri[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (t &gt; <span class="number">1</span>) a[++cnt] = t, b[cnt] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (cnt == <span class="number">0</span>) a[<span class="number">1</span>] = <span class="number">1</span>, b[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> t, <span class="keyword">int</span> cur)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (t == cnt + <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (cur &gt;= m) &#123;</span><br><span class="line">            ans += <span class="built_in">euler_phi</span>(n / cur);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(t + <span class="number">1</span>, cur);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= b[t]; i++) &#123;</span><br><span class="line">        cur *= a[t];</span><br><span class="line">        <span class="built_in">dfs</span>(t + <span class="number">1</span>, cur);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    <span class="built_in">eprime</span>();</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">        ans = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">fj</span>(n);</span><br><span class="line">        <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>ICPC 2017 Beijing J Pangu and Stones(铜牌题)</title>
    <url>/posts/31514/</url>
    <content><![CDATA[<h2 id="problem">Problem</h2>
<p>In Chinese mythology, Pangu is the first living being and the creator of the sky and the earth. He woke up from an egg and split the egg into two parts: the sky and the earth.</p>
<p>At the beginning, there was no mountain on the earth, only stones all over the land.</p>
<p>There were N piles of stones, numbered from 1 to N. Pangu wanted to merge all of them into one pile to build a great mountain. If the sum of stones of some piles was S, Pangu would need S seconds to pile them into one pile, and there would be S stones in the new pile.</p>
<p>Unfortunately, every time Pangu could only merge successive piles into one pile. And the number of piles he merged shouldn't be less than L or greater than R.</p>
<p>Pangu wanted to finish this as soon as possible.</p>
<p>Can you help him? If there was no solution, you should answer '0'.</p>
<h2 id="input">Input</h2>
<p>There are multiple test cases.</p>
<p>The first line of each case contains three integers N,L,R as above mentioned (2&lt;=N&lt;=100,2&lt;=L&lt;=R&lt;=N).</p>
<p>The second line of each case contains N integers a1,a2 …aN (1&lt;= ai &lt;=1000,i= 1…N ), indicating the number of stones of pile 1, pile 2 …pile N.</p>
<p>The number of test cases is less than 110 and there are at most 5 test cases in which N &gt;= 50.</p>
<h2 id="output">Output</h2>
<p>For each test case, you should output the minimum time(in seconds) Pangu had to take . If it was impossible for Pangu to do his job, you should output 0.</p>
<span id="more"></span>
<h2 id="solution">Solution</h2>
<p>石子合并，每次合并相邻的一些堆，代价是合并的石子数之和，每次合并的堆数有上下限，求最小的代价。 dp[i][j][k]表示从i合并到j，划分成k堆的最小代价。 枚举要计算的区间长度，枚举具体的区间，枚举划分的堆数，枚举具体划分方法。 dp[i][j][k]=min(dp[i][j][k],dp[i][c][k-1]+dp[c+1][j][1]); 然后枚举符合条件的划分堆和具体方法，合并成一堆。 dp[i][j][1]=min(dp[i][j][1],dp[i][c][k]+dp[c+1][j][1]+sum[j]-sum[i-1]);</p>
<h2 id="code">Code</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ioss ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span></span>&#123;<span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">int</span> dp[N][N][N], s[N], sum[N];</span><br><span class="line"><span class="keyword">int</span> n,l,r;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    ioss;</span><br><span class="line">    <span class="comment">//freopen(&quot;51nod_1880_5_in.txt&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="comment">//freopen(&quot;ans.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;l&gt;&gt;r)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0x3f</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            cin&gt;&gt;s[i];</span><br><span class="line">            sum[i]=sum[i<span class="number">-1</span>]+s[i];</span><br><span class="line">            dp[i][i][<span class="number">1</span>]=<span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> len=<span class="number">2</span>;len&lt;=n;len++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i+len<span class="number">-1</span>&lt;=n;i++)&#123;</span><br><span class="line">                <span class="keyword">int</span> j=i+len<span class="number">-1</span>;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">2</span>;k&lt;=<span class="built_in">min</span>(len,r);k++)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> c=i+k<span class="number">-2</span>;c&lt;j;c++)&#123;</span><br><span class="line">                        dp[i][j][k]=<span class="built_in">min</span>(dp[i][j][k],dp[i][c][k<span class="number">-1</span>]+dp[c+<span class="number">1</span>][j][<span class="number">1</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=l<span class="number">-1</span>;k&lt;=r<span class="number">-1</span>;k++)&#123;</span><br><span class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> c=i+k<span class="number">-2</span>;c&lt;j;c++)&#123;</span><br><span class="line">                        dp[i][j][<span class="number">1</span>]=<span class="built_in">min</span>(dp[i][j][<span class="number">1</span>],dp[i][c][k]+dp[c+<span class="number">1</span>][j][<span class="number">1</span>]+sum[j]-sum[i<span class="number">-1</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;(dp[<span class="number">1</span>][n][<span class="number">1</span>]==INF?<span class="number">0</span>:dp[<span class="number">1</span>][n][<span class="number">1</span>])&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>ICPC2019南京网络赛</title>
    <url>/posts/60030/</url>
    <content><![CDATA[<h1 id="icpc2019南京网络赛">ICPC2019南京网络赛</h1>
<h2 id="b.super_log">B.super_log</h2>
<h3 id="problem">Problem</h3>
<p>求a<sup>a</sup>a...总共b个a，结果%m</p>
<span id="more"></span>
<h3 id="solution">Solution</h3>
<p><img src="https://img2018.cnblogs.com/blog/1575943/201909/1575943-20190901212807580-1412605303.png" /></p>
<p>欧拉降幂</p>
<h3 id="code">Code</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffffffffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a, x) memset(a,x,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Pii;</span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;ll, ll&gt; Pll;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a, ll b,ll p)</span> </span>&#123; ll res = <span class="number">1</span>; <span class="keyword">for</span> (; b &gt; <span class="number">0</span>; b &gt;&gt;= <span class="number">1</span>) &#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * a % p; &#125; <span class="keyword">return</span> res; &#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll p, ll q)</span> </span>&#123; <span class="keyword">return</span> q == <span class="number">0</span> ? p : <span class="built_in">gcd</span>(q, p % q); &#125;</span><br><span class="line">ll _abs(ll x)&#123;<span class="keyword">return</span> x &lt; <span class="number">0</span> ? -x : x;&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn=<span class="number">1000000</span>;</span><br><span class="line"><span class="keyword">bool</span> check[maxn+<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> phi[maxn+<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> prime[maxn+<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> tot;<span class="comment">//素数的个数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">phi_and_prime_table</span><span class="params">(<span class="keyword">int</span> N)</span><span class="comment">//1~n以内的所有素数  已经欧拉函数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(check,<span class="literal">false</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(check));</span><br><span class="line">    phi[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">    tot=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=N;++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!check[i])</span><br><span class="line">        &#123;</span><br><span class="line">            prime[tot++]=i;</span><br><span class="line">            phi[i]=i<span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;tot;++j)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i*prime[j]&gt;N) <span class="keyword">break</span>;</span><br><span class="line">            check[i*prime[j]]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prime[j]==<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                phi[i*prime[j]]=phi[i]*prime[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                phi[i*prime[j]]=phi[i]*(prime[j]<span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">quick_pow</span><span class="params">(ll a,ll b,ll mod)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans*a)%mod;</span><br><span class="line">        a=(a*a)%mod;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans%mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">lowspeed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;</span><br><span class="line">    ll cur=a,ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans+cur)%p;</span><br><span class="line">        cur=(cur+cur)%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">speed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;</span><br><span class="line">    ll cur=a,ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=<span class="built_in">lowspeed</span>(ans,cur,p)%p;</span><br><span class="line">        cur=<span class="built_in">lowspeed</span>(cur,cur,p)%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">my_pow</span><span class="params">(ll a,ll b)</span></span>&#123;</span><br><span class="line">    ll ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=(ans*a);</span><br><span class="line">        <span class="keyword">if</span>(ans&gt;<span class="number">1e6</span>) <span class="keyword">return</span> ans;</span><br><span class="line">        a=(a*a);</span><br><span class="line">        <span class="keyword">if</span>(a&gt;<span class="number">1e6</span>) <span class="keyword">return</span> a;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> T,n;</span><br><span class="line">ll a,b,m,p,ans;</span><br><span class="line"><span class="function">ll <span class="title">fun</span><span class="params">(ll x,ll las)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(las==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">gcd</span>(las,a)==<span class="number">1</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">speed</span>(a,<span class="built_in">fun</span>(x<span class="number">-1</span>,phi[las])%phi[las],las);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        ll anss=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=x<span class="number">-1</span>;i++)&#123;</span><br><span class="line">            anss=<span class="built_in">my_pow</span>(a,anss);</span><br><span class="line">            <span class="keyword">if</span>(anss&gt;=phi[las])&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">speed</span>(a,<span class="built_in">fun</span>(x<span class="number">-1</span>,phi[las])%phi[las]+phi[las],las);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">speed</span>(a,anss,las);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;quick_pow(6,46656,600);</span></span><br><span class="line">    <span class="built_in">phi_and_prime_table</span>(<span class="number">1000000</span>);</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        cin&gt;&gt;a&gt;&gt;b&gt;&gt;m;</span><br><span class="line">        cout&lt;&lt;<span class="built_in">fun</span>(b,m)&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="f.greedy-sequence">F.Greedy Sequence</h2>
<h3 id="problem-1">Problem</h3>
<p>每次求区间小于i的最大值。</p>
<h3 id="solution-1">Solution</h3>
<p>每次添加小于i的数，线段树查询。</p>
<h3 id="code-1">Code</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffffffffffff</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">B</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> l,r,max;</span><br><span class="line">&#125; tree[N*<span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num[N];</span><br><span class="line"><span class="keyword">int</span> a[N],b[N];</span><br><span class="line"><span class="keyword">int</span> pos[N];</span><br><span class="line"><span class="keyword">int</span> P;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_N=<span class="number">1</span>&lt;&lt;<span class="number">17</span>;<span class="comment">//1e5</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> INT_MINN=<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">int</span> n,dat[<span class="number">2</span>*MAX_N<span class="number">-1</span>],x,y;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(<span class="keyword">int</span> k,<span class="keyword">int</span> a)</span></span>&#123;</span><br><span class="line">    k+=n<span class="number">-1</span>;</span><br><span class="line">    dat[k]=a;</span><br><span class="line">    <span class="keyword">while</span>(k&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        k=(k<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">        dat[k]=<span class="built_in">max</span>(dat[k*<span class="number">2</span>+<span class="number">1</span>],dat[k*<span class="number">2</span>+<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(<span class="keyword">int</span> n_)</span></span>&#123;</span><br><span class="line">    n=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(n&lt;n_)&#123;</span><br><span class="line">        n*=<span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">2</span>*n<span class="number">-1</span>;i++)&#123;</span><br><span class="line">        dat[i]=INT_MINN;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n_;i++)&#123;</span><br><span class="line">        x=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">update</span>(i,x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">query</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> k,<span class="keyword">int</span> l,<span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(r&lt;=a||b&lt;=l)&#123;</span><br><span class="line">        <span class="keyword">return</span> INT_MINN;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(a&lt;=l&amp;&amp;r&lt;=b)&#123;</span><br><span class="line">        <span class="keyword">return</span> dat[k];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> vl=<span class="built_in">query</span>(a,b,k*<span class="number">2</span>+<span class="number">1</span>,l,(l+r)/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">int</span> vr=<span class="built_in">query</span>(a,b,k*<span class="number">2</span>+<span class="number">2</span>,(l+r)/<span class="number">2</span>,r);</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">max</span>(vl,vr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> a,pla;</span><br><span class="line">&#125;e[<span class="number">100020</span>];</span><br><span class="line"><span class="keyword">int</span> yyn;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x.a&lt;y.a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    cin&gt;&gt;t;</span><br><span class="line">    <span class="keyword">while</span> (t--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> i,j;</span><br><span class="line">        <span class="keyword">int</span> ans[N];</span><br><span class="line">        P=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(ans,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(ans));</span><br><span class="line"></span><br><span class="line">        cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">        yyn=n;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;yyn&lt;&lt;endl;</span></span><br><span class="line">        <span class="built_in">init</span>(n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;yyn;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;e[i].a);</span><br><span class="line">            e[i].pla=i;</span><br><span class="line">            pos[e[i].a]=i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(e,e+yyn,cmp);</span><br><span class="line">        ans[<span class="number">1</span>]=<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">2</span>;i&lt;=yyn;i++)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> maxx=<span class="number">0</span>;</span><br><span class="line">            <span class="built_in">update</span>(e[i<span class="number">-2</span>].pla,e[i<span class="number">-2</span>].a);</span><br><span class="line">            maxx=<span class="built_in">query</span>(pos[i]-k,pos[i]+k+<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,n); <span class="comment">//查询小于i的最大值</span></span><br><span class="line">            ans[i]+=ans[maxx];</span><br><span class="line">            ans[i]++;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=yyn<span class="number">-1</span>;i++)</span><br><span class="line">            cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        cout&lt;&lt;ans[yyn]&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>ACM比赛/总结</category>
      </categories>
  </entry>
  <entry>
    <title>ICPC2019银川网 络 赛</title>
    <url>/posts/53295/</url>
    <content><![CDATA[<p>真实菜鸡，被AK打蒙了，签到都最后才找到的。</p>
<h2 id="a.maximum-element-in-a-stack">A.Maximum Element In A Stack</h2>
<h3 id="problem">Problem</h3>
<p>栈操作，每次操作后求最大值。</p>
<h3 id="solution">Solution</h3>
<p>加入时加此时堆里的最大值，要开long long。</p>
<h3 id="code">Code</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bitset&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffffffffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a, x) memset(a,x,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Pii;</span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;ll, ll&gt; Pll;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a, ll b,ll p)</span> </span>&#123; ll res = <span class="number">1</span>; <span class="keyword">for</span> (; b &gt; <span class="number">0</span>; b &gt;&gt;= <span class="number">1</span>) &#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * a % p; &#125; <span class="keyword">return</span> res; &#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll p, ll q)</span> </span>&#123; <span class="keyword">return</span> q == <span class="number">0</span> ? p : <span class="built_in">gcd</span>(q, p % q); &#125;</span><br><span class="line">ll _abs(ll x)&#123;<span class="keyword">return</span> x &lt; <span class="number">0</span> ? -x : x;&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">5e6</span>+<span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,p,q,m;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> SA,SB,SC;</span><br><span class="line">ll a[N];</span><br><span class="line"></span><br><span class="line">stack&lt;<span class="keyword">unsigned</span> <span class="keyword">int</span>&gt; s;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">rng61</span><span class="params">()</span></span>&#123;</span><br><span class="line">    SA ^= SA&lt;&lt;<span class="number">16</span>;</span><br><span class="line">    SA ^= SA&gt;&gt;<span class="number">5</span>;</span><br><span class="line">    SA ^= SA&lt;&lt;<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> t = SA;SA = SB;</span><br><span class="line">    SB = SC;</span><br><span class="line">    SC ^= t ^ SA;</span><br><span class="line">    <span class="keyword">return</span> SC;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">PUSH</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s.<span class="built_in">empty</span>()) s.<span class="built_in">push</span>(x);</span><br><span class="line">    <span class="keyword">else</span> s.<span class="built_in">push</span>(<span class="built_in">max</span>(x,s.<span class="built_in">top</span>()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">POP</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!s.<span class="built_in">empty</span>()) s.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gen</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d%u%u%u&quot;</span>,&amp;n,&amp;p,&amp;q,&amp;m,&amp;SA,&amp;SB,&amp;SC);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">rng61</span>() % (p+q) &lt; p)</span><br><span class="line">            <span class="built_in">PUSH</span>(<span class="built_in">rng61</span>() % m + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">POP</span>();</span><br><span class="line">        <span class="keyword">if</span>(s.<span class="built_in">empty</span>()) a[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> a[i]=s.<span class="built_in">top</span>();</span><br><span class="line">        a[i]*=i;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!s.<span class="built_in">empty</span>()) s.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="built_in">gen</span>();</span><br><span class="line">        ll ans=a[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">2</span>;j&lt;=n;j++)</span><br><span class="line">            ans^=a[j];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case #%d: %lld\n&quot;</span>,i,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="b.rolling-the-polygon">B.Rolling The Polygon</h2>
<p>一开始看计算几何就没做，最后半小时发现很简单，298分钟过的...</p>
<h3 id="problem-1">Problem</h3>
<p>给一个凸多边形和其内一点，求凸多边形在地下转一周，点走过的距离。</p>
<h3 id="solution-1">Solution</h3>
<p>每个角都走一个圆弧，求出半径和补角，相乘即可。</p>
<h3 id="code-1">Code</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffffffffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a, x) memset(a,x,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Pii;</span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;ll, ll&gt; Pll;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a, ll b,ll p)</span> </span>&#123; ll res = <span class="number">1</span>; <span class="keyword">for</span> (; b &gt; <span class="number">0</span>; b &gt;&gt;= <span class="number">1</span>) &#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * a % p; &#125; <span class="keyword">return</span> res; &#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll p, ll q)</span> </span>&#123; <span class="keyword">return</span> q == <span class="number">0</span> ? p : <span class="built_in">gcd</span>(q, p % q); &#125;</span><br><span class="line">ll _abs(ll x)&#123;<span class="keyword">return</span> x &lt; <span class="number">0</span> ? -x : x;&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> T,n;</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>,sx,sy;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;e[<span class="number">60</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> anss;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">l</span><span class="params">(<span class="keyword">int</span> x1,<span class="keyword">int</span> y1,<span class="keyword">int</span> x2,<span class="keyword">int</span> y2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)+<span class="number">0.0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;acos(-1/sqrt(2.0));</span></span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        anss=<span class="number">0</span>;</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;e[i].x,&amp;e[i].y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;sx,&amp;sy);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> x1,x2,y1,y2;</span><br><span class="line">            <span class="keyword">double</span> tmp1=<span class="built_in">l</span>(sx,sy,e[i].x,e[i].y);</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">                x1=e[n].x-e[<span class="number">1</span>].x,y1=e[n].y-e[<span class="number">1</span>].y;</span><br><span class="line">                x2=e[<span class="number">2</span>].x-e[<span class="number">1</span>].x,y2=e[<span class="number">2</span>].y-e[<span class="number">1</span>].y;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(i==n)&#123;</span><br><span class="line">                x1=e[n<span class="number">-1</span>].x-e[n].x,y1=e[n<span class="number">-1</span>].y-e[n].y;</span><br><span class="line">                x2=e[<span class="number">1</span>].x-e[n].x,y2=e[<span class="number">1</span>].y-e[n].y;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                x1=e[i<span class="number">-1</span>].x-e[i].x,y1=e[i<span class="number">-1</span>].y-e[i].y;</span><br><span class="line">                x2=e[i+<span class="number">1</span>].x-e[i].x,y2=e[i+<span class="number">1</span>].y-e[i].y;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//cout&lt;&lt;&#x27;*&#x27;&lt;&lt;y1&lt;&lt;&#x27;*&#x27;&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">double</span> tmp2=<span class="built_in">acos</span>(<span class="number">-1</span>)-(<span class="built_in">acos</span>((x1*x2+y1*y2)*<span class="number">1.0</span>/<span class="built_in">l</span>(x1,y1,<span class="number">0</span>,<span class="number">0</span>)/<span class="built_in">l</span>(x2,y2,<span class="number">0</span>,<span class="number">0</span>)));</span><br><span class="line">            anss+=tmp1*tmp2;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;i&lt;&lt;&#x27;:&#x27;&lt;&lt;tmp1&lt;&lt;&#x27; &#x27;&lt;&lt;tmp2&lt;&lt;endl;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case #%d: %.3f\n&quot;</span>,cnt,anss);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="c.caesar-cipher">C.Caesar Cipher</h2>
<h3 id="problem-2">Problem</h3>
<p>字母后移，给出示范和目标串，求原串。</p>
<h3 id="solution-2">Solution</h3>
<p>模拟</p>
<h3 id="code-2">Code</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffffffffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a, x) memset(a,x,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Pii;</span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;ll, ll&gt; Pll;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a, ll b,ll p)</span> </span>&#123; ll res = <span class="number">1</span>; <span class="keyword">for</span> (; b &gt; <span class="number">0</span>; b &gt;&gt;= <span class="number">1</span>) &#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * a % p; &#125; <span class="keyword">return</span> res; &#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll p, ll q)</span> </span>&#123; <span class="keyword">return</span> q == <span class="number">0</span> ? p : <span class="built_in">gcd</span>(q, p % q); &#125;</span><br><span class="line">ll _abs(ll x)&#123;<span class="keyword">return</span> x &lt; <span class="number">0</span> ? -x : x;&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span>+<span class="number">10</span>;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">char</span> a[N],b[N],c[N],ans[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=T;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s%s%s&quot;</span>,a,b,c);</span><br><span class="line">        <span class="keyword">int</span> d=b[<span class="number">0</span>]-a[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;m;j++)&#123;</span><br><span class="line">            <span class="keyword">int</span> ss=c[j]-d;</span><br><span class="line">            <span class="keyword">while</span>(ss&lt;<span class="string">&#x27;A&#x27;</span>) ss+=<span class="number">26</span>;</span><br><span class="line">            <span class="keyword">while</span>(ss&gt;<span class="string">&#x27;Z&#x27;</span>) ss-=<span class="number">26</span>;</span><br><span class="line">            ans[j]=ss;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[j]=<span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case #%d: %s\n&quot;</span>,i,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="d.take-your-seat">D.Take Your Seat</h2>
<h3 id="problems">Problems</h3>
<p>n个乘客分别属于n个座位，顺序坐，第一个随机坐，后面的如果被占了就随机，否则坐自己的，求最后一个坐自己位置的概率。 m同样，不过乘客坐座位顺序随机。</p>
<h3 id="solution-3">Solution</h3>
<p>n=1显然为1，n=2显然为1/2，n=3的时候，P(3)=1/3*(1+P(2)+0)，n=4，P(4)=1/4*(1+P(3)+P(2)+0)。</p>
<p>以4为例解释，1号坐在每个位置概率为1/4，当他坐在自己位置，4号必然坐到自己位置，概率为1；1号坐在2号，相当于2号随机坐（疯了），2号的原位置可以视作1，整个删除1号和他坐的2号位置，问题变为P(3)；1号坐在3号位置，2号坐对了，他也删去，规模变为P(2)；1号坐在4号，概率为0。</p>
<p>所以推测不是1的时候概率都是1/2，可以直接敲了（或者数学归纳法证明）。</p>
<p>m=1时也是1，1号最后登机时坐在自己位置概率为1，否则可以视作他前面的都正常删去，转化为第一个问题，则m不是1时，P(m)=1/m*(1+1/2*(m-1))。</p>
<h3 id="code-3">Code</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffffffffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a, x) memset(a,x,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Pii;</span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;ll, ll&gt; Pll;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a, ll b,ll p)</span> </span>&#123; ll res = <span class="number">1</span>; <span class="keyword">for</span> (; b &gt; <span class="number">0</span>; b &gt;&gt;= <span class="number">1</span>) &#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * a % p; &#125; <span class="keyword">return</span> res; &#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll p, ll q)</span> </span>&#123; <span class="keyword">return</span> q == <span class="number">0</span> ? p : <span class="built_in">gcd</span>(q, p % q); &#125;</span><br><span class="line">ll _abs(ll x)&#123;<span class="keyword">return</span> x &lt; <span class="number">0</span> ? -x : x;&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> T,n,m;</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>,sx,sy;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;e[<span class="number">60</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> anss;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">l</span><span class="params">(<span class="keyword">int</span> x1,<span class="keyword">int</span> y1,<span class="keyword">int</span> x2,<span class="keyword">int</span> y2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sqrt</span>((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)+<span class="number">0.0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;acos(-1/sqrt(2.0));</span></span><br><span class="line">    <span class="comment">//io_opt;</span></span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">double</span> ans1=(n==<span class="number">1</span>?<span class="number">1.0</span>:<span class="number">0.5</span>),ans2=(m==<span class="number">1</span>?<span class="number">1</span>:(m+<span class="number">1</span>)/<span class="number">2.0</span>/m);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Case #%d: %.6f %6f\n&quot;</span>,cnt,ans1,ans2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="h.fight-against-monsters">H.Fight Against Monsters</h2>
<h3 id="problem-3">Problem</h3>
<p>回合制，勇士打n个怪，每个有hp和atk（血量和攻击），勇士打每一个怪的伤害分别计算，第一次是1，第二次是2，每次加1，怪物先手，问勇士受到的最小伤害。</p>
<h3 id="solution-4">Solution</h3>
<p>hp转成击败次数，贪心，除法排序。</p>
<h3 id="code-4">Code</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffffffffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a, x) memset(a,x,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Pii;</span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;ll, ll&gt; Pll;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a, ll b,ll p)</span> </span>&#123; ll res = <span class="number">1</span>; <span class="keyword">for</span> (; b &gt; <span class="number">0</span>; b &gt;&gt;= <span class="number">1</span>) &#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * a % p; &#125; <span class="keyword">return</span> res; &#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll p, ll q)</span> </span>&#123; <span class="keyword">return</span> q == <span class="number">0</span> ? p : <span class="built_in">gcd</span>(q, p % q); &#125;</span><br><span class="line">ll _abs(ll x)&#123;<span class="keyword">return</span> x &lt; <span class="number">0</span> ? -x : x;&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> T,n;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> hp,atk;</span><br><span class="line">    ll sum;</span><br><span class="line">&#125;e[<span class="number">100020</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(E x,E y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x.atk*y.hp==y.atk*x.hp) <span class="keyword">return</span> x.atk&lt;y.atk;</span><br><span class="line">    <span class="keyword">return</span> x.atk*y.hp&lt;y.atk*x.hp;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x&gt;=s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ef</span><span class="params">(<span class="keyword">int</span> s)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l=<span class="number">1</span>,r=<span class="number">1e3</span>,mid,ans;</span><br><span class="line">    <span class="keyword">while</span>(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)&gt;&gt;<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">check</span>((mid+<span class="number">1</span>)*mid/<span class="number">2</span>,s))&#123;</span><br><span class="line">            r=mid<span class="number">-1</span>;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            l=mid+<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;T;</span><br><span class="line">    <span class="keyword">while</span>(T--)&#123;</span><br><span class="line">        cnt++;</span><br><span class="line">        cin&gt;&gt;n;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            cin&gt;&gt;e[i].hp&gt;&gt;e[i].atk;</span><br><span class="line">            e[i].hp=<span class="built_in">ef</span>(e[i].hp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(e+<span class="number">1</span>,e+<span class="number">1</span>+n,cmp);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(i==<span class="number">1</span>)&#123;</span><br><span class="line">                e[i].sum=e[i].atk;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                e[i].sum=e[i<span class="number">-1</span>].sum+e[i].atk;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ll ans=<span class="number">0</span>,tmp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=n;i&gt;=<span class="number">1</span>;i--)&#123;</span><br><span class="line">            <span class="comment">//cout&lt;&lt;e[i].hp&lt;&lt;endl;</span></span><br><span class="line">            tmp=e[i].hp;</span><br><span class="line">            tmp*=e[i].sum;</span><br><span class="line">            ans+=tmp;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;<span class="string">&quot;Case #&quot;</span>&lt;&lt;cnt&lt;&lt;<span class="string">&quot;: &quot;</span>&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="continue...">Continue...</h1>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>ACM比赛/总结</category>
      </categories>
  </entry>
  <entry>
    <title>LaTeX测试</title>
    <url>/posts/26724/</url>
    <content><![CDATA[<p><span class="math display">\[y = x^2\]</span></p>
<p>可以创建行内公式，例如 <span class="math inline">\(\Gamma(n) = (n-1)!\quad\forall n\in\mathbb N\)</span>。或者块级公式：</p>
<p><span class="math display">\[  x = \dfrac{-b \pm \sqrt{b^2 - 4ac}}{2a} \]</span></p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>ACM比赛/总结</category>
      </categories>
  </entry>
  <entry>
    <title>POJ1505 Copying Books</title>
    <url>/posts/60777/</url>
    <content><![CDATA[<p>ZOJ2002</p>
<h2 id="题目">题目</h2>
<p>Before the invention of book-printing, it was very hard to make a copy of a book. All the contents had to be re-written by hand by so called scribers. The scriber had been given a book and after several months he finished its copy. One of the most famous scribers lived in the 15th century and his name was Xaverius Endricus Remius Ontius Xendrianus (Xerox). Anyway, the work was very annoying and boring. And the only way to speed it up was to hire more scribers.</p>
<p>Once upon a time, there was a theater ensemble that wanted to play famous Antique Tragedies. The scripts of these plays were divided into many books and actors needed more copies of them, of course. So they hired many scribers to make copies of these books. Imagine you have m books (numbered 1, 2 ... m) that may have different number of pages (p1, p2 ... pm) and you want to make one copy of each of them. Your task is to divide these books among k scribes, k &lt;= m. Each book can be assigned to a single scriber only, and every scriber must get a continuous sequence of books. That means, there exists an increasing succession of numbers 0 = b0 &lt; b1 &lt; b2, ... &lt; bk-1 &lt;= bk = m such that i-th scriber gets a sequence of books with numbers between bi-1+1 and bi. The time needed to make a copy of all the books is determined by the scriber who was assigned the most work. Therefore, our goal is to minimize the maximum number of pages assigned to a single scriber. Your task is to find the optimal assignment.</p>
<span id="more"></span>
<h2 id="题意">题意</h2>
<p>给一段不下降的子序列，要求分成k段，使每一段的和的最大值最小，若有多组答案，输出依次满足：第一组和尽量小，第二组和尽量小，第三组和尽量小。。。的答案。</p>
<h2 id="思路">思路</h2>
<p>二分+贪心，二分出来的段数如果小于k，就从前向后分段。</p>
<h1 id="注意二分上下界">注意二分上下界！！！</h1>
<h2 id="代码">代码</h2>
<p>```c++ #include<cstdio> #include<cstring> #include<iostream> #include<iomanip> #include<algorithm> #define ll long long #include<cmath> #define exp 0.000000001 using namespace std; ll T,m,k,cntt; ll a[520],f[520]; bool check(ll x){ memset(f,false,sizeof(f)); ll cur=0,cnt=1; for(int i=m;i&gt;=1;i--){ cur+=a[i]; if(cur&gt;x){ cnt++; cur=a[i]; f[i]=true; } } cntt=cnt; return cnt&lt;=k; } int main(){ cin&gt;&gt;T; while(T--){ ll l=0,r=0; scanf(&quot;%lld%lld&quot;,&amp;m,&amp;k); for(ll i=1;i&lt;=m;i++){ scanf(&quot;%lld&quot;,&amp;a[i]); if(a[i]&gt;l) l=a[i];//此处很关键 r+=a[i]; } ll mid,ans; while(l&lt;=r){ mid=(l+r)&gt;&gt;1; if(check(mid)){ r=mid-1; ans=mid; } else{ l=mid+1;</p>
<pre><code>        &#125;
    &#125;
    check(ans);
    //cout&lt;&lt;&quot;!!&quot;&lt;&lt;cntt&lt;&lt;endl;
    for(int i=1;i&lt;=m&amp;&amp;cntt&lt;k;i++)&#123;
        if(!f[i]) f[i]=true,cntt++;
    &#125;
    for(int i=1;i&lt;=m;i++)&#123;
        cout&lt;&lt;a[i];
        if(i!=m) cout&lt;&lt;&#39; &#39;;
        if(f[i]) cout&lt;&lt;&quot;/ &quot;;
    &#125;
    cout&lt;&lt;endl;
&#125;
return 0;</code></pre>
<p>}```</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>NC16759 方格取数O(n^3)</title>
    <url>/posts/50829/</url>
    <content><![CDATA[<p>链接：https://ac.nowcoder.com/acm/problem/16759</p>
<p>来源：牛客网</p>
<h1 id="problem">Problem</h1>
<h2 id="题目描述">题目描述</h2>
<p>设有N*N的方格图(N ≤ 10,我们将其中的某些方格中填入正整数,而其他的方格中则放入数字0。如下图所示(见样例)：</p>
<figure>
<img src="https://uploadfiles.nowcoder.com/images/20180622/305281_1529645348187_B9AE8FBC599DBE5E845C49D23325678B" title="图片标题" alt="图片说明" /><figcaption>图片说明</figcaption>
</figure>
<p>某人从图的左上角的A 点出发，可以向下行走，也可以向右走，直到到达右下角的B点。在走过的路上，他可以取走方格中的数(取走后的方格中将变为数字0)。</p>
<p>此人从A点到B 点共走两次，试找出2条这样的路径，使得取得的数之和为最大。</p>
<span id="more"></span>
<h2 id="输入描述">输入描述:</h2>
<p>输入的第一行为一个整数N(表示N*N的方格图)，接下来的每行有三个整数，前两个表示位置，第三个数为该位置上所放的数。一行单独的0表示输入结束。</p>
<h2 id="输出描述">输出描述:</h2>
<p>只需输出一个整数，表示2条路径上取得的最大的和。</p>
<h3 id="示例1">示例1</h3>
<h4 id="输入">输入</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">8</span><br><span class="line">2 3 13</span><br><span class="line">2 6 6</span><br><span class="line">3 5 7</span><br><span class="line">4 4 14</span><br><span class="line">5 2 21 </span><br><span class="line">5 6 4</span><br><span class="line">6 3 15</span><br><span class="line">7 2 14</span><br><span class="line">0 0 0</span><br></pre></td></tr></table></figure>
<h4 id="输出">输出</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">67</span><br></pre></td></tr></table></figure>
<h1 id="solution">Solution</h1>
<p>选最大的两次不是最优的，所以是dp，本题扩展到四维即可，但是可以根据每次转移的坐标和一样，优化到三维。</p>
<h1 id="code">Code</h1>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">10</span>][<span class="number">2</span>]=&#123;&#123;<span class="number">0</span>,<span class="number">1</span>&#125;,&#123;<span class="number">0</span>,<span class="number">-1</span>&#125;,&#123;<span class="number">1</span>,<span class="number">0</span>&#125;,&#123;<span class="number">-1</span>,<span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">template</span>&lt;<span class="class"><span class="keyword">class</span> <span class="title">T</span>&gt;</span><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">read</span><span class="params">(T &amp;res)</span></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> c;T flag=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>((c=<span class="built_in">getchar</span>())&lt;<span class="string">&#x27;0&#x27;</span>||c&gt;<span class="string">&#x27;9&#x27;</span>)<span class="keyword">if</span>(c==<span class="string">&#x27;-&#x27;</span>)flag=<span class="number">-1</span>;res=c-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">	<span class="keyword">while</span>((c=<span class="built_in">getchar</span>())&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;c&lt;=<span class="string">&#x27;9&#x27;</span>)res=res*<span class="number">10</span>+c-<span class="string">&#x27;0&#x27;</span>;res*=flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> n,m;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">20</span>][<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> dp[<span class="number">30</span>][<span class="number">20</span>][<span class="number">20</span>]; </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="comment">//printf(&quot;%d\n&quot;,!0);</span></span><br><span class="line">	<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">	<span class="keyword">int</span> x,y,z;</span><br><span class="line">	<span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;x,&amp;y,&amp;z)==<span class="number">3</span>&amp;&amp;x+y+z!=<span class="number">0</span>)&#123;</span><br><span class="line">		a[x][y]=z;</span><br><span class="line">	&#125; </span><br><span class="line">	dp[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>]=a[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">2</span>*n<span class="number">-2</span>;i++)&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;=i;j++)&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;=i;k++)&#123;</span><br><span class="line">				<span class="keyword">int</span> t=<span class="number">0</span>;</span><br><span class="line">				<span class="keyword">if</span>(i-j&gt;<span class="number">0</span>&amp;&amp;i-k&gt;<span class="number">0</span>) t=<span class="built_in">max</span>(t,dp[i<span class="number">-1</span>][j][k]);</span><br><span class="line">				<span class="keyword">if</span>(i-k&gt;<span class="number">0</span>&amp;&amp;j&gt;<span class="number">0</span>) t=<span class="built_in">max</span>(t,dp[i<span class="number">-1</span>][j<span class="number">-1</span>][k]);</span><br><span class="line">				<span class="keyword">if</span>(i-j&gt;<span class="number">0</span>&amp;&amp;k&gt;<span class="number">0</span>) t=<span class="built_in">max</span>(t,dp[i<span class="number">-1</span>][j][k<span class="number">-1</span>]);</span><br><span class="line">				<span class="keyword">if</span>(j&gt;<span class="number">0</span>&amp;&amp;k&gt;<span class="number">0</span>) t=<span class="built_in">max</span>(t,dp[i<span class="number">-1</span>][j<span class="number">-1</span>][k<span class="number">-1</span>]);</span><br><span class="line">				<span class="keyword">if</span>(j==k)&#123;</span><br><span class="line">					dp[i][j][k]=t+a[j+<span class="number">1</span>][i-j+<span class="number">1</span>];</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span>&#123;</span><br><span class="line">					dp[i][j][k]=t+a[j+<span class="number">1</span>][i-j+<span class="number">1</span>]+a[k+<span class="number">1</span>][i-k+<span class="number">1</span>];</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,dp[<span class="number">2</span>*n<span class="number">-2</span>][n<span class="number">-1</span>][n<span class="number">-1</span>]);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>动态规划</category>
      </categories>
  </entry>
  <entry>
    <title>POJ2287 Tian Ji -- The Horse Racing</title>
    <url>/posts/44096/</url>
    <content><![CDATA[<h2 id="题目">题目</h2>
<p><span class="exturl" data-url="aHR0cDovL3Bvai5vcmcvcHJvYmxlbT9pZD0yMjg3">POJ2287<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="思路">思路</h2>
<p>全网建议看这篇，看懂了再去看其他的就明白为啥这么说了。。。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDM4OTI3Ni9hcnRpY2xlL2RldGFpbHMvODkwNjA0MzY=">田忌赛马（贪心） - Nothing9826的博客 - CSDN博客<i class="fa fa-external-link-alt"></i></span></p>
<span id="more"></span>
<h2 id="代码">代码</h2>
<p>```c++ #include<cstdio> #include<cstring> #include<iostream> #include<algorithm> #define ll long long using namespace std; ll n; ll a[1020],b[1020]; int cmp(ll x,ll y){ return x&gt;y; } ll ans=0; int main(){ while(scanf(&quot;%lld&quot;,&amp;n)==1&amp;&amp;n){ ans=0; for(int i=1;i&lt;=n;i++){ scanf(&quot;%lld&quot;,&amp;a[i]); } for(int i=1;i&lt;=n;i++){ scanf(&quot;%lld&quot;,&amp;b[i]); } sort(a+1,a+1+n,cmp); sort(b+1,b+1+n,cmp); int poi=1; int i=1,j=n,k=1,l=n; for(int s=1;s&lt;=n;s++){ if(a[i]&gt;b[k]){ i++,k++; ans++; } else if(a[j]&gt;b[l]){ ans++; j--,l--; } else{ if(a[j]&lt;b[k]) ans--;</p>
<pre><code>            j--,k++;
        &#125;
    &#125;
    cout&lt;&lt;ans*200&lt;&lt;endl;
&#125;
return 0;</code></pre>
<p>}```</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>技巧||实用结论</category>
      </categories>
  </entry>
  <entry>
    <title>PTA团体程序设计天梯赛题目集 L1-064 估值一亿的AI核心代码 (20分)</title>
    <url>/posts/33790/</url>
    <content><![CDATA[<p>去年比赛的时候虽然对了，但写的好麻烦，以至于后面不敢再写这道题，今天又写了一遍，贴出来做纪念。</p>
<span id="more"></span>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isbiaodian</span><span class="params">(<span class="keyword">char</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> !(x&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;x&lt;=<span class="string">&#x27;9&#x27;</span>||x&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;x&lt;=<span class="string">&#x27;z&#x27;</span>||x&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;x&lt;=<span class="string">&#x27;Z&#x27;</span>||x==<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">iswall</span><span class="params">(<span class="keyword">char</span> x)</span></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> !(x&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;x&lt;=<span class="string">&#x27;9&#x27;</span>||x&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;x&lt;=<span class="string">&#x27;z&#x27;</span>||x&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;x&lt;=<span class="string">&#x27;Z&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del32</span><span class="params">(vector&lt;<span class="keyword">char</span>&gt; &amp;v)</span></span>&#123;</span><br><span class="line">	<span class="keyword">while</span>(!v.<span class="built_in">empty</span>()&amp;&amp;*v.<span class="built_in">begin</span>()==<span class="string">&#x27; &#x27;</span>) v.<span class="built_in">erase</span>(v.<span class="built_in">begin</span>());</span><br><span class="line">	<span class="keyword">while</span>(!v.<span class="built_in">empty</span>()&amp;&amp;*(v.<span class="built_in">end</span>()<span class="number">-1</span>)==<span class="string">&#x27; &#x27;</span>) v.<span class="built_in">erase</span>(v.<span class="built_in">end</span>()<span class="number">-1</span>);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(v[i]!=<span class="string">&#x27; &#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">while</span>(i+<span class="number">1</span>&lt;v.<span class="built_in">size</span>()&amp;&amp;v[i+<span class="number">1</span>]==<span class="string">&#x27; &#x27;</span>) v.<span class="built_in">erase</span>(v.<span class="built_in">begin</span>()+i+<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(v[i]!=<span class="string">&#x27; &#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">if</span>(i+<span class="number">1</span>&lt;v.<span class="built_in">size</span>()&amp;&amp;<span class="built_in">isbiaodian</span>(v[i+<span class="number">1</span>])) v.<span class="built_in">erase</span>(v.<span class="built_in">begin</span>()+i);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">smallwen</span><span class="params">(vector&lt;<span class="keyword">char</span>&gt; &amp;v)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(v[i]==<span class="string">&#x27;?&#x27;</span>) v[i]=<span class="string">&#x27;!&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span>(v[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;v[i]&lt;=<span class="string">&#x27;Z&#x27;</span>&amp;&amp;v[i]!=<span class="string">&#x27;I&#x27;</span>)&#123;</span><br><span class="line">			v[i]+=<span class="string">&#x27;a&#x27;</span>-<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">you2i</span><span class="params">(vector&lt;<span class="keyword">char</span>&gt; &amp;v)</span></span>&#123;</span><br><span class="line">	string s=<span class="string">&quot;can you&quot;</span>,t=<span class="string">&quot;\1 can&quot;</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(v[i]!=s[<span class="number">0</span>]||(i<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;!<span class="built_in">iswall</span>(v[i<span class="number">-1</span>]))||i+s.<span class="built_in">size</span>()<span class="number">-1</span>&gt;=v.<span class="built_in">size</span>()||(i+s.<span class="built_in">size</span>()&lt;v.<span class="built_in">size</span>()&amp;&amp;!<span class="built_in">iswall</span>(v[i+s.<span class="built_in">size</span>()]))) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">bool</span> fg=<span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;s.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(v[i+j]!=s[j])&#123;</span><br><span class="line">				fg=<span class="literal">false</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!fg) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=s.<span class="built_in">size</span>();j++) v.<span class="built_in">erase</span>(v.<span class="built_in">begin</span>()+i);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=t.<span class="built_in">size</span>()<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--) v.<span class="built_in">insert</span>(v.<span class="built_in">begin</span>()+i,t[j]);</span><br><span class="line">	&#125;</span><br><span class="line">	s=<span class="string">&quot;could you&quot;</span>,t=<span class="string">&quot;\1 could&quot;</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(v[i]!=s[<span class="number">0</span>]||(i<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;!<span class="built_in">iswall</span>(v[i<span class="number">-1</span>]))||i+s.<span class="built_in">size</span>()<span class="number">-1</span>&gt;=v.<span class="built_in">size</span>()||(i+s.<span class="built_in">size</span>()&lt;v.<span class="built_in">size</span>()&amp;&amp;!<span class="built_in">iswall</span>(v[i+s.<span class="built_in">size</span>()]))) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">bool</span> fg=<span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;s.<span class="built_in">size</span>()&amp;&amp;i+j&lt;v.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(v[i+j]!=s[j])&#123;</span><br><span class="line">				fg=<span class="literal">false</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!fg) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=s.<span class="built_in">size</span>();j++) v.<span class="built_in">erase</span>(v.<span class="built_in">begin</span>()+i);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=t.<span class="built_in">size</span>()<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--) v.<span class="built_in">insert</span>(v.<span class="built_in">begin</span>()+i,t[j]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">i2you</span><span class="params">(vector&lt;<span class="keyword">char</span>&gt; &amp;v)</span></span>&#123;</span><br><span class="line">	string s=<span class="string">&quot;I&quot;</span>,t=<span class="string">&quot;you&quot;</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(v[i]!=s[<span class="number">0</span>]||(i<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;!<span class="built_in">iswall</span>(v[i<span class="number">-1</span>]))||i+s.<span class="built_in">size</span>()<span class="number">-1</span>&gt;=v.<span class="built_in">size</span>()||(i+s.<span class="built_in">size</span>()&lt;v.<span class="built_in">size</span>()&amp;&amp;!<span class="built_in">iswall</span>(v[i+s.<span class="built_in">size</span>()]))) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">bool</span> fg=<span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;s.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(v[i+j]!=s[j])&#123;</span><br><span class="line">				fg=<span class="literal">false</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!fg) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=s.<span class="built_in">size</span>();j++) v.<span class="built_in">erase</span>(v.<span class="built_in">begin</span>()+i);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=t.<span class="built_in">size</span>()<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--) v.<span class="built_in">insert</span>(v.<span class="built_in">begin</span>()+i,t[j]);</span><br><span class="line">	&#125;</span><br><span class="line">	s=<span class="string">&quot;me&quot;</span>,t=<span class="string">&quot;you&quot;</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(v[i]!=s[<span class="number">0</span>]||(i<span class="number">-1</span>&gt;=<span class="number">0</span>&amp;&amp;!<span class="built_in">iswall</span>(v[i<span class="number">-1</span>]))||i+s.<span class="built_in">size</span>()<span class="number">-1</span>&gt;=v.<span class="built_in">size</span>()||(i+s.<span class="built_in">size</span>()&lt;v.<span class="built_in">size</span>()&amp;&amp;!<span class="built_in">iswall</span>(v[i+s.<span class="built_in">size</span>()]))) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">bool</span> fg=<span class="literal">true</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;s.<span class="built_in">size</span>()&amp;&amp;i+j&lt;v.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">			<span class="keyword">if</span>(v[i+j]!=s[j])&#123;</span><br><span class="line">				fg=<span class="literal">false</span>;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(!fg) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=s.<span class="built_in">size</span>();j++) v.<span class="built_in">erase</span>(v.<span class="built_in">begin</span>()+i);</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=t.<span class="built_in">size</span>()<span class="number">-1</span>;j&gt;=<span class="number">0</span>;j--) v.<span class="built_in">insert</span>(v.<span class="built_in">begin</span>()+i,t[j]);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">i2I</span><span class="params">(vector&lt;<span class="keyword">char</span>&gt; &amp;v)</span></span>&#123;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		<span class="keyword">if</span>(v[i]==<span class="string">&#x27;\1&#x27;</span>) v[i]=<span class="string">&#x27;I&#x27;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(string &amp;s)</span></span>&#123;</span><br><span class="line">	vector&lt;<span class="keyword">char</span>&gt;v;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		v.<span class="built_in">push_back</span>(s[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">del32</span>(v);</span><br><span class="line">	<span class="built_in">smallwen</span>(v);</span><br><span class="line">	<span class="built_in">you2i</span>(v);</span><br><span class="line">	<span class="built_in">i2you</span>(v);</span><br><span class="line">	<span class="built_in">i2I</span>(v);</span><br><span class="line">	cout&lt;&lt;<span class="string">&quot;AI: &quot;</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;v.<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">		cout&lt;&lt;v[i];</span><br><span class="line">	&#125;</span><br><span class="line">	cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">string s[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	io_opt;</span><br><span class="line">	<span class="comment">/*vector&lt;int&gt;v;</span></span><br><span class="line"><span class="comment">	for(int i=0;i&lt;5;i++)</span></span><br><span class="line"><span class="comment">		v.push_back(i);</span></span><br><span class="line"><span class="comment">	v.insert(v.begin()+1,10);</span></span><br><span class="line"><span class="comment">	for(int &amp;i:v) cout&lt;&lt;i&lt;&lt;endl;*/</span></span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="built_in">getline</span>(cin,s[<span class="number">0</span>]);</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">		<span class="built_in">getline</span>(cin,s[i]);</span><br><span class="line">		cout&lt;&lt;s[i]&lt;&lt;endl;</span><br><span class="line">		<span class="built_in">solve</span>(s[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/posts/16107/</url>
    <content><![CDATA[<p>Welcome to <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvLw==">Hexo<i class="fa fa-external-link-alt"></i></span>! This is your very first post. Check <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mv">documentation<i class="fa fa-external-link-alt"></i></span> for more info. If you get any problems when using Hexo, you can find the answer in <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvdHJvdWJsZXNob290aW5nLmh0bWw=">troubleshooting<i class="fa fa-external-link-alt"></i></span> or you can ask me on <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2hleG9qcy9oZXhvL2lzc3Vlcw==">GitHub<i class="fa fa-external-link-alt"></i></span>.</p>
<h2 id="quick-start">Quick Start</h2>
<h3 id="create-a-new-post">Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvd3JpdGluZy5odG1s">Writing<i class="fa fa-external-link-alt"></i></span></p>
<span id="more"></span>
<h3 id="run-server">Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc2VydmVyLmh0bWw=">Server<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="generate-static-files">Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3MvZ2VuZXJhdGluZy5odG1s">Generating<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="deploy-to-remote-sites">Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <span class="exturl" data-url="aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvb25lLWNvbW1hbmQtZGVwbG95bWVudC5odG1s">Deployment<i class="fa fa-external-link-alt"></i></span></p>
]]></content>
      <categories>
        <category>hello-world</category>
      </categories>
  </entry>
  <entry>
    <title>乘法逆元(从入门到批量求解)(正在学欧拉筛)</title>
    <url>/posts/34770/</url>
    <content><![CDATA[<blockquote>
<p>在做各种取余运算时，我们会发现先除和先取余的结果是不同的，这会导致计算难度的加大，乘法逆元可以解决类似的分数取余问题。</p>
</blockquote>
<blockquote>
<p>本文按照博主的学习思路排序，结论为<strong>（单个）费马小定理求乘法逆元</strong>、<strong>（单个）利用扩展欧几里得任意情况下求乘法逆元</strong>、<strong>（批量）线性递推求乘法逆元</strong></p>
</blockquote>
<h2 id="同余的运算法则之一">同余的运算法则之一</h2>
<p>定理3 ac≡bc(mod m)，且若(m,c)≡d，则a≡b(mod m/d)。——数论讲义</p>
<p>也就是说，同余式两边可以同除一个和模数互质的数（此时模数不变）。</p>
<h2 id="费马小定理">费马小定理</h2>
<p>形式1：<strong>若m是素数，则a^m≡a(mod m)。——数论讲义</strong>······①</p>
<p>形式2：<strong>如果m是一个素数，而整数a不是m的倍数，则有a^(m-1)≡1(mod m)。——某百科</strong>······②</p>
<h3 id="由于m是一个素数因此到的条件除数a和模数m互质等价于a不是m的倍数"><strong><em>由于m是一个素数，因此①到②的条件：除数a和模数m互质，等价于a不是m的倍数。</em></strong></h3>
<h2 id="费马小定理的推论">费马小定理②的推论</h2>
<h3 id="am-11mod-m-aam-21mod-m-am-21amod-m"><strong>a^(m-1)≡1(mod m) =&gt; a*a^(m-2)≡1(mod m) =&gt; a^(m-2)≡1/a(mod m)</strong></h3>
<h2 id="乘法逆元">乘法逆元</h2>
<p>对于正整数a和m，如果有ax≡1(mod m)，那么把这个同余方程中x的最小正整数解叫做a模m的逆元。</p>
<p><em>若a与m不互质，易证ax%m!=1，故a必与m互质</em></p>
<h2 id="乘法逆元与费马小定理的推论">乘法逆元与费马小定理的推论</h2>
<p>如果m是素数，有以下推论:</p>
<h3 id="ax1mod-m-x1amod-m-xam-2mod-m"><strong>ax≡1(mod m) =&gt; x≡1/a(mod m) =&gt; x≡a^(m-2)(mod m)</strong></h3>
<p>(同余的传递性)</p>
<h2 id="单个费马小定理求乘法逆元">（单个）费马小定理求乘法逆元</h2>
<p>计算(a/b)%m：</p>
<p>若<strong>m是素数</strong>：</p>
<p>将1/b替换成逆元x，即b^(m-2)%m。</p>
<p>答案为(a*b^(m-2))%m。</p>
<h3 id="例题">例题</h3>
<p><span class="exturl" data-url="aHR0cDovL3d3dy41MW5vZC5jb20vQ2hhbGxlbmdlL1Byb2JsZW0uaHRtbCNwcm9ibGVtSWQ9MTAxMw==">51Nod 1013<i class="fa fa-external-link-alt"></i></span></p>
<h3 id="代码">代码</h3>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> db double</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 1000000007</span></span><br><span class="line">ll n;</span><br><span class="line"><span class="function">ll <span class="title">speed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;</span><br><span class="line">    ll cur=a,ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=ans*cur%p;</span><br><span class="line">        cur=cur*cur%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans%p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    ll ans=((<span class="built_in">speed</span>(<span class="number">3</span>,n+<span class="number">1</span>,mod)<span class="number">-1</span>)*<span class="built_in">speed</span>(<span class="number">2</span>,mod<span class="number">-2</span>,mod))%mod;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;speed(2,mod-2,mod)%mod;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;```</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**为了方便求任意情况的逆元，我们先来补充几个概念：**</span><br><span class="line"></span><br><span class="line">## 欧几里得算法</span><br><span class="line"></span><br><span class="line">log时间内求解最大公约数。</span><br><span class="line"></span><br><span class="line">### 代码</span><br><span class="line"></span><br><span class="line">```c++</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,llb)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b==<span class="number">0</span>?a:<span class="built_in">gcd</span>(b,a%b);</span><br><span class="line">&#125;```</span><br><span class="line"></span><br><span class="line">### 证明</span><br><span class="line"></span><br><span class="line">[辗转相除法求最大公约数算法证明](https:<span class="comment">//www.cnblogs.com/zwffff/archive/2010/08/25/1808178.html &quot;【整理】辗转相除法求最大公约数算法证明 - 凌风有约 - 博客园&quot;)</span></span><br><span class="line"></span><br><span class="line">## 贝祖定理</span><br><span class="line"></span><br><span class="line">设a,b是整数，则存在整数x,y，使得ax+by=<span class="built_in">gcd</span>(a,b)</span><br><span class="line"></span><br><span class="line">## 扩展欧几里得算法</span><br><span class="line"></span><br><span class="line">#### 求贝祖定理中x和y的解，即求使ax+by=<span class="built_in">gcd</span>(a,b)的x和y。</span><br><span class="line"></span><br><span class="line">我们利用gcd来求，当递归到最内层时，a=<span class="built_in">gcd</span>(a,b)，b=<span class="number">0</span>，因此x=<span class="number">1</span>，y=<span class="number">0</span>。</span><br><span class="line"></span><br><span class="line">假设我们已经得到内层x1，y1，对于外层a，b有a%b=a-(a/b)*b</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>外层：a<em>x+b</em>y=gcd(a,b)</p>
<p>内层：b<em>x1+(a-(a/b)</em>b)<em>y1=gcd(a,b) <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">展开对比可得：</span><br><span class="line"></span><br></pre></td></tr></table></figure> x=y1 y=x1-a/b</em>y1 <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">### 代码</span><br><span class="line"></span><br><span class="line">```c++</span><br><span class="line">ll exgcd(ll a,ll b,ll &amp;x,ll &amp;y)&#123;//扩展欧几里得算法</span><br><span class="line">    if(b==0)&#123;//递归边界 </span><br><span class="line">        x=1;y=0;</span><br><span class="line">        return a;</span><br><span class="line">    &#125;</span><br><span class="line">    ll ret=exgcd(b,a%b,x,y);</span><br><span class="line">    ll tmp=y;//求解原x,y     </span><br><span class="line">    y=x-a/b*y;</span><br><span class="line">    x=tmp;</span><br><span class="line">    return ret;//返回gcd      </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="参考">参考</h3>
<p><span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Rlc3RpbnkxNTA3L2FydGljbGUvZGV0YWlscy84MTc1MDg3NA==">扩展欧几里得算法详解<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="单个利用扩展欧几里得任意情况下求乘法逆元">（单个）利用扩展欧几里得任意情况下求乘法逆元</h2>
<p>计算(a/b)%m：</p>
<p>仍需要逆元存在，即b与m互质。</p>
<p>构造bx+my=gcd(b,m)=1，用exgcd求出来的x即为逆元。</p>
<p>代码与前面相同。</p>
<p><strong>注意这里参数传m和-m都一样，答案要加m再%m。</strong></p>
<h3 id="参考-1">参考</h3>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC83ODc2ZWIyZGZmODk=">欧几里得算法心得(辗转相除法)<i class="fa fa-external-link-alt"></i></span></p>
<h2 id="批量线性递推求乘法逆元">（批量）线性递推求乘法逆元</h2>
<p>给定n,p求1~n中所有整数在模p意义下的乘法逆元。</p>
<p>n为3e6，p&gt;n且为质数。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cubHVvZ3Uub3JnL3Byb2JsZW0vUDM4MTE=">洛谷P3811 【模板】乘法逆元<i class="fa fa-external-link-alt"></i></span></p>
<p>此时用单个求法会超时，我们可以推导递推公式。</p>
<p>本垃圾博主还不会用公式编辑器，于是看这里↓</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcWRzY3d5eS9wLzc3OTUzNjguaHRtbD90ZHNvdXJjZXRhZz1zX3BjcXFfYWlvbXNn">线性求逆元 - Grary - 博客园<i class="fa fa-external-link-alt"></i></span></p>
<p>试了试，这里p也必须是质数，还不知道为什么（逃</p>
<h3 id="代码-1">代码</h3>
<p><code>c++ #include&lt;bits/stdc++.h&gt; using namespace std; #define ll long long const ll MAXN=3e6+20; ll inv[MAXN]; ll n,mod; void preinv(ll num,ll p)&#123;     inv[0]=inv[1]=1;     for(ll i=2;i&lt;=num;i++)&#123;         inv[i]=(p-p/i)*inv[p%i]%p;     &#125; &#125; int main()&#123;     cin&gt;&gt;n&gt;&gt;mod;     preinv(n,mod);     for(ll i=1;i&lt;=n;i++)&#123;         printf(&quot;%lld\n&quot;,inv[i]);     &#125;     return 0; &#125;</code></p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>二分查找</title>
    <url>/posts/42877/</url>
    <content><![CDATA[<p>终于下定决心不碰运气写二分了。。。</p>
<p>思路比较乱，建议直接点进参考①</p>
<p>来说一下我记忆的方法</p>
<p>注意left&lt;=right</p>
<p>首先标准查找是随机的找到一个，分三类，找不到返回-1</p>
<p>然后如果要找第一个和最后一个，因为是准确查找，所以要有判别和找不到返回-1</p>
<p>里面的大于还是大于等于，要具体分析。（分析相等的时候向左找还是向右找，返回谁）</p>
<p>举个例子</p>
<p>寻找最后一个相等的，没有的话找比key小的最后一个（searchLastEqualOrSmaller）</p>
<p>这两个元素的位置都是偏右（比如说{1,2,3,4,4,4,5,6}，分成1,2,3|4,4,4|5,6，3和最后一个4都在所在区间的右边），因此要向右找，让相等的情况跟着缩小左边界，因此是大于</p>
<p>解释一下为什么返回right，根据while结束条件，最后right&lt;right，如果没有相等的，arr[right]&lt;key&lt;arr[left]，否则，key==arr[right]&lt;arr[left]（所以返回left就是比key大的第一个）</p>
<p>大于等于同理</p>
<p><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" /></p>
<pre><code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 1 //递增 </span><br><span class="line"> 2 #include&lt;cstdio&gt;</span><br><span class="line"> 3 #include&lt;iostream&gt;</span><br><span class="line"> 4 #include&lt;cstring&gt;</span><br><span class="line"> 5 #include&lt;algorithm&gt;</span><br><span class="line"> 6 using namespace std;</span><br><span class="line"> 7 int search(int *arr,int n,int key)&#123;</span><br><span class="line"> 8     int left=0,right=n-1;</span><br><span class="line"> 9     while(left&lt;=right)&#123;</span><br><span class="line">10         int mid=(left+right)&gt;&gt;1;</span><br><span class="line">11         if(arr[mid]==key) return mid;</span><br><span class="line">12         else if(arr[mid]&gt;key) right=mid-1;</span><br><span class="line">13         else left=mid+1;</span><br><span class="line">14     &#125;</span><br><span class="line">15     return -1;</span><br><span class="line">16 &#125;</span><br><span class="line">17 int searchFirstEqual(int *arr,int n,int key)&#123;</span><br><span class="line">18     int left=0,right=n-1;</span><br><span class="line">19     while(left&lt;=right)&#123;</span><br><span class="line">20         int mid=(left+right)&gt;&gt;1;</span><br><span class="line">21         if(arr[mid]&gt;=key) right=mid-1;</span><br><span class="line">22         else left=mid+1;</span><br><span class="line">23     &#125;</span><br><span class="line">24     if(left&lt;n&amp;&amp;arr[left]==key)&#123;</span><br><span class="line">25         return left;</span><br><span class="line">26     &#125;</span><br><span class="line">27     return -1;</span><br><span class="line">28 &#125;</span><br><span class="line">29 int searchLastEqual(int *arr,int n,int key)&#123;</span><br><span class="line">30     int left=0,right=n-1;</span><br><span class="line">31     while(left&lt;=right)&#123;</span><br><span class="line">32         int mid=(left+right)&gt;&gt;1;</span><br><span class="line">33         if(arr[mid]&gt;key) right=mid-1;</span><br><span class="line">34         else left=mid+1;</span><br><span class="line">35     &#125;</span><br><span class="line">36     if(right&gt;=0&amp;&amp;arr[right]==key)&#123;</span><br><span class="line">37         return right;</span><br><span class="line">38     &#125;</span><br><span class="line">39     return -1;</span><br><span class="line">40 &#125;</span><br><span class="line">41 int searchLastEqualOrSmaller(int *arr,int n,int key)&#123;</span><br><span class="line">42     int left=0,right=n-1;</span><br><span class="line">43     while(left&lt;=right)&#123;</span><br><span class="line">44         int mid=(left+right)&gt;&gt;1;</span><br><span class="line">45         if(arr[mid]&gt;key) right=mid-1;</span><br><span class="line">46         else left=mid+1;</span><br><span class="line">47     &#125;</span><br><span class="line">48     return right;</span><br><span class="line">49 &#125;</span><br><span class="line">50 int searchLastSmaller(int *arr,int n,int key)&#123;</span><br><span class="line">51     int left=0,right=n-1;</span><br><span class="line">52     while(left&lt;=right)&#123;</span><br><span class="line">53         int mid=(left+right)&gt;&gt;1;</span><br><span class="line">54         if(arr[mid]&gt;=key) right=mid-1;</span><br><span class="line">55         else left=mid+1;</span><br><span class="line">56     &#125;</span><br><span class="line">57     return right;</span><br><span class="line">58 &#125;</span><br><span class="line">59 int searchFirstEqualOrLarger(int *arr,int n,int key)&#123;</span><br><span class="line">60     int left=0,right=n-1;</span><br><span class="line">61     while(left&lt;=right)&#123;</span><br><span class="line">62         int mid=(left+right)&gt;&gt;1;</span><br><span class="line">63         if(arr[mid]&gt;=key) right=mid-1;</span><br><span class="line">64         else left=mid+1;</span><br><span class="line">65     &#125;</span><br><span class="line">66     return left;</span><br><span class="line">67 &#125;</span><br><span class="line">68 int searchFirstLarger(int *arr,int n,int key)&#123;</span><br><span class="line">69     int left=0,right=n-1;</span><br><span class="line">70     while(left&lt;=right)&#123;</span><br><span class="line">71         int mid=(left+right)&gt;&gt;1;</span><br><span class="line">72         if(arr[mid]&gt;key) right=mid-1;</span><br><span class="line">73         else left=mid+1;</span><br><span class="line">74     &#125;</span><br><span class="line">75     return left;</span><br><span class="line">76 &#125;</span><br><span class="line">77 </span><br><span class="line">78 int main()&#123;</span><br><span class="line">79     int arr[17] = &#123;1, </span><br><span class="line">80                    2, 2, 5, 5, 5, </span><br><span class="line">81                    5, 5, 5, 5, 5, </span><br><span class="line">82                    5, 5, 6, 6, 7&#125;;</span><br><span class="line">83     printf(&quot;First Equal           : %2d \n&quot;, searchFirstEqual(arr, 16, 5));</span><br><span class="line">84     printf(&quot;Last Equal            : %2d \n&quot;, searchLastEqual(arr, 16, 5));</span><br><span class="line">85     printf(&quot;First Equal or Larger : %2d \n&quot;, searchFirstEqualOrLarger(arr, 16, 5));</span><br><span class="line">86     printf(&quot;First Larger          : %2d \n&quot;, searchFirstLarger(arr, 16, 5));</span><br><span class="line">87     printf(&quot;Last Equal or Smaller : %2d \n&quot;, searchLastEqualOrSmaller(arr, 16, 5));</span><br><span class="line">88     printf(&quot;Last Smaller          : %2d \n&quot;, searchLastSmaller(arr, 16, 5));</span><br><span class="line">89     return 0;</span><br><span class="line">90     return 0;</span><br><span class="line">91 &#125;</span><br></pre></td></tr></table></figure></code></pre>
<p>View Code</p>
<p>参考：①<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbHVveG4yOC9wLzU3Njc1NzEuaHRtbA==">你真的会写二分查找吗 - luoxn28 - 博客园<i class="fa fa-external-link-alt"></i></span></p>
<p>②<span class="exturl" data-url="aHR0cDovL2Jsb2cuY2hpbmF1bml4Lm5ldC91aWQtMTg0NDkzMS1pZC0zMzM3Nzg0Lmh0bWw=">你真的会写二分检索吗？-liubird- ChinaUnix博客<i class="fa fa-external-link-alt"></i></span>（测试段代码来源）</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>二叉排序树</title>
    <url>/posts/65300/</url>
    <content><![CDATA[<h2 id="题目描述">题目描述</h2>
<p>输入一系列整数，建立二叉排序数，并进行前序，中序，后序遍历。</p>
<h2 id="输入">输入</h2>
<p>输入第一行包括一个整数n(1&lt;=n&lt;=100)。接下来的一行包括n个整数。</p>
<h2 id="输出">输出</h2>
<p>可能有多组测试数据，对于每组数据，将题目所给数据建立一个二叉排序树，并对二叉排序树进行前序、中序和后序遍历。每种遍历结果输出一行。每行最后一个数据之后有一个空格。</p>
<span id="more"></span>
<h2 id="样例输入">样例输入</h2>
<blockquote>
<p>1 2 2 8 15 4 21 10 5 39</p>
</blockquote>
<h2 id="样例输出">样例输出</h2>
<blockquote>
<p>2 2 2 8 15 8 15 15 8 21 10 5 39 5 10 21 39 5 10 39 21</p>
</blockquote>
<h3 id="瞎搞的">瞎搞的。。。</h3>
<p>```c++ #include<iostream> #include<cstdio> #include<queue> #include<cstring> #include<algorithm> #include<vector> #include<queue> #define ll long long #define INF -72340172838076674 using namespace std; ll n; struct E{ ll num,lson,rson; }e[120]; ll cnt=0,root=INF; ll find(ll x){ x=e[x].num; ll cur=root; while(1){ if(x&lt;e[cur].num){ if(e[cur].lson==INF){ return cur; } else{ cur=e[cur].lson; } } else if(x&gt;e[cur].num){ if(e[cur].rson==INF){ return cur; } else{ cur=e[cur].rson; } } else return INF; } } void Insert(ll x){ if(!cnt){ cnt++; root=x; return; } ll fat=find(x); if(fat==INF) return; cnt++; if(e[x].num&gt;e[fat].num){ e[fat].rson=x; } else{ e[fat].lson=x; } return; } void dfs1(ll x){ if(x==INF) return; cout&lt;&lt;e[x].num&lt;&lt;' '; dfs1(e[x].lson); dfs1(e[x].rson); } void dfs2(ll x){ if(x==INF) return; dfs2(e[x].lson); cout&lt;&lt;e[x].num&lt;&lt;' '; dfs2(e[x].rson); } void dfs3(ll x){ if(x==INF) return; dfs3(e[x].lson); dfs3(e[x].rson); cout&lt;&lt;e[x].num&lt;&lt;' '; } int main(){ while(cin&gt;&gt;n){ root=INF,cnt=0; memset(e,-0x2,sizeof(e)); for(int i=1;i&lt;=n;i++){ ll x; cin&gt;&gt;x; e[i].num=x; Insert(i); } dfs1(root); cout&lt;&lt;endl; dfs2(root); cout&lt;&lt;endl; dfs3(root); cout&lt;&lt;endl; }</p>
<pre><code>return 0;</code></pre>
<p>}```</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>二叉树问题</title>
    <url>/posts/63731/</url>
    <content><![CDATA[<h2 id="题目描述">题目描述</h2>
<p>现给定一棵二叉树的先序遍历序列和中序遍历序列，要求你计算该二叉树的高度。</p>
<h2 id="输入">输入</h2>
<p>输入包含多组测试数据，每组输入首先给出正整数N（&lt;=50），为树中结点总数。下面2行先后给出先序和中序遍历序列，均是长度为N的不包含重复英文字母（区别大小写）的字符串。</p>
<h2 id="输出">输出</h2>
<p>对于每组输入，输出一个整数，即该二叉树的高度。</p>
<span id="more"></span>
<h2 id="样例输入">样例输入</h2>
<blockquote>
<p>9 ABDFGHIEC FDHGIBEAC 7 Abcdefg gfedcbA</p>
</blockquote>
<h2 id="样例输出">样例输出</h2>
<blockquote>
<p>5 7</p>
</blockquote>
<p><code>c++ #include&lt;iostream&gt; #include&lt;cstdio&gt; #include&lt;algorithm&gt; #include&lt;cstring&gt; #include&lt;map&gt; #define ll long long using namespace std; map&lt;char,int&gt;q; int n,h[1024],ans; string s1,s2; int lson[1024],rson[1024]; int tag[1024]; char buildtree(int s,int t)&#123;     memset(tag,0,sizeof(tag));     if(s==t) return s2[s];     for(int i=s;i&lt;=t;i++)&#123;         tag[s2[i]]=1;         //cout&lt;&lt;s2[i];     &#125;     //cout&lt;&lt;endl;     int lx=-1,rx=-1;     for(int i=0;i&lt;n;i++)&#123;         if(lx==-1)&#123;             if(tag[s1[i]])&#123;                 lx=i;             &#125;         &#125;         else&#123;             if(!tag[s1[i]])&#123;                 rx=i-1;                 break;             &#125;         &#125;     &#125;     if(rx==-1) rx=t;     char root=s1[lx];int pla;     for(int i=s;i&lt;=t;i++)&#123;         if(root==s2[i])&#123;             pla=i;             break;         &#125;     &#125;     if(s&lt;=pla-1) lson[root]=buildtree(s,pla-1);     if(pla+1&lt;=t) rson[root]=buildtree(pla+1,t);     return root; &#125; void dfs(char ss)&#123;     if(ss==0)&#123;         return;     &#125;     ans=max(ans,h[ss]);     h[lson[ss]]=h[rson[ss]]=h[ss]+1;     dfs(lson[ss]);     dfs(rson[ss]);//cout&lt;&lt;ss&lt;&lt;'*'; &#125; int main()&#123;     while(cin&gt;&gt;n)&#123;         memset(h,0,sizeof(h));         memset(lson,0,sizeof(lson));         memset(rson,0,sizeof(rson));         ans=0;         //q.erase(q.begin(),q.end());         cin&gt;&gt;s1&gt;&gt;s2;         char x=buildtree(0,n-1);         h[x]=1;         dfs(x);         cout&lt;&lt;ans&lt;&lt;endl;     &#125;     return 0; &#125;</code></p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>做题中踩过的坑。。。</title>
    <url>/posts/22086/</url>
    <content><![CDATA[<p>1、long long=int*int，会数据溢出，直接定义long long或者long long*=long long。（51Nod 1082）</p>
<p>2、不要再忘记题目条件了！输出No Solution！！！！（51Nod 1090）</p>
<p>3、二分答案可以在修改边界的过程中留一个ans=mid，要向上取整可以（n+mod-1）%mod，注意不要除以0。（POJ3104）</p>
<p>4、别人的程序初始化要看清楚。。。（POJ2976）</p>
<p>5、变量的重名问题！！！</p>
<p>6、重新检查题意！</p>
<p>7、不要偷懒，例如输入两个-1结束，就去判两个-1。</p>
<p>8、有时需要考虑给的数据是否满足前一个小于后一个，题目中不说可能不满足。</p>
<p>9、贪心和二分的正确性，有点玄学。</p>
<p>10、多组输入注意不要提前break掉，开平方不要开复数。（POJ1328）</p>
<p>11、注意修改变量的顺序！！！比如去掉最大公约数要先提取到一个变量，不能两次调用函数！！！</p>
<p>12、循环i套i。</p>
<p><strong>update: 太傻了，不更新了，反正也不太会回来看，刷点题睡个好觉状态就有了。</strong></p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>ACM比赛/总结</category>
      </categories>
  </entry>
  <entry>
    <title>卡特兰数</title>
    <url>/posts/54838/</url>
    <content><![CDATA[<p>一、引入</p>
<p>出栈序</p>
<p>二、推导（摘自百度百科）</p>
<p>对于每一个数来说，必须进栈一次、出栈一次。我们把<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTglQkYlOUIlRTYlQTAlODg=">进栈<i class="fa fa-external-link-alt"></i></span>设为状态'1'，出栈设为状态'0'。n个数的所有状态对应n个1和n个0组成的2n位<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQkElOEMlRTglQkYlOUIlRTUlODglQjYlRTYlOTUlQjA=">二进制数<i class="fa fa-external-link-alt"></i></span>。由于等待入栈的操作数按照1‥n的顺序排列、入栈的操作数b大于等于<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlODclQkElRTYlQTAlODg=">出栈<i class="fa fa-external-link-alt"></i></span>的操作数a(a≤b)，因此输出序列的总数目=由左而右扫描由n个1和n个0组成的2n位二进制数，1的累计数不小于0的累计数的方案种数。</p>
<p>在2n位二进制数中填入n个1的方案数为c(2n,n),不填1的其余n位自动填0。从中减去不符合要求（由左而右扫描，0的累计数大于1的累计数）的方案数即为所求。</p>
<p>不符合要求的数的特征是由左而右扫描时，必然在某一奇数位2m+1位上首先出现m+1个0的累计数和m个1的累计数，此后的2(n-m)-1位上有n-m个 1和n-m-1个0。如若把后面这2(n-m)-1位上的0和1互换，使之成为n- m个0和n-m-1个1，结果得1个由n+1个0和n-1个1组成的2n位数，即一个不合要求的数对应于一个由n+1个0和n-1个1组成的排列。</p>
<p>反过来，任何一个由n+1个0和n-1个1组成的2n位<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTQlQkElOEMlRTglQkYlOUIlRTUlODglQjYlRTYlOTUlQjA=">二进制数<i class="fa fa-external-link-alt"></i></span>，由于0的个数多2个，2n为<span class="exturl" data-url="aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlODElQjYlRTYlOTUlQjA=">偶数<i class="fa fa-external-link-alt"></i></span>，故必在某一个奇数位上出现0的累计数超过1的累计数。同样在后面部分0和1互换，使之成为由n个0和n个1组成的2n位数，即n+1个0和n-1个1组成的2n位数必对应一个不符合要求的数。</p>
<p>因而不合要求的2n位数与n+1个0，n－1个1组成的排列一一对应。</p>
<p>显然，不符合要求的方案数为c(2n,n+1)。由此得出输出序列的总数目=c(2n,n)-c(2n,n-1)=c(2n,n)/(n+1)=h(n)。</p>
<p>三、应用</p>
<p>给定n对括号，求括号匹配的种数。</p>
<p>出栈限制类问题。</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>哈夫曼树</title>
    <url>/posts/29203/</url>
    <content><![CDATA[<h2 id="题目描述">题目描述</h2>
<p>哈夫曼树，第一行输入一个数n，表示叶结点的个数。需要用这些叶结点生成哈夫曼树，根据哈夫曼树的概念，这些结点有权值，即weight，题目需要输出所有结点的值与权值的乘积之和。</p>
<h2 id="输入">输入</h2>
<p>输入有多组数据。 每组第一行输入一个数n，接着输入n个叶节点（叶节点权值不超过100，2&lt;=n&lt;=1000）。</p>
<h2 id="输出">输出</h2>
<p>输出权值。</p>
<span id="more"></span>
<h2 id="样例输入">样例输入</h2>
<blockquote>
<p>2 2 8 3 5 11 30</p>
</blockquote>
<h2 id="样例输出">样例输出</h2>
<blockquote>
<p>10 62</p>
</blockquote>
<h2 id="代码">代码</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">ll n,ans,h[<span class="number">5020</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">E</span>&#123;</span></span><br><span class="line">    ll k,l,r,t;</span><br><span class="line">    <span class="keyword">friend</span> <span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (E x,E y)&#123;<span class="keyword">return</span> x.k&gt;y.k;&#125;</span><br><span class="line">&#125;e[<span class="number">5020</span>];</span><br><span class="line">priority_queue&lt;E&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(ll root)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root==<span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    ll ls=e[root].l,rs=e[root].r;</span><br><span class="line">    h[ls]=h[rs]=h[root]+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(ls==<span class="number">0</span>&amp;&amp;rs==<span class="number">0</span>)&#123;</span><br><span class="line">        ans+=e[root].k*h[root];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs</span>(ls);</span><br><span class="line">    <span class="built_in">dfs</span>(rs);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n)&#123;</span><br><span class="line">        ll cur=n;ans=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(h,<span class="number">0</span>,<span class="built_in"><span class="keyword">sizeof</span></span>(h));</span><br><span class="line">        <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line">            ll x;</span><br><span class="line">            cin&gt;&gt;x;</span><br><span class="line">            e[i].k=x;</span><br><span class="line">            e[i].l=<span class="number">0</span>;</span><br><span class="line">            e[i].r=<span class="number">0</span>;</span><br><span class="line">            e[i].t=i;</span><br><span class="line">            q.<span class="built_in">push</span>(e[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(q.<span class="built_in">size</span>()&gt;<span class="number">1</span>)&#123;</span><br><span class="line">            E xx=q.<span class="built_in">top</span>();q.<span class="built_in">pop</span>();</span><br><span class="line">            E yy=q.<span class="built_in">top</span>();q.<span class="built_in">pop</span>();</span><br><span class="line">            <span class="comment">//cout&lt;&lt;xx.k&lt;&lt;&#x27; &#x27;&lt;&lt;yy.k&lt;&lt;endl;</span></span><br><span class="line">            E neww=(E)&#123;xx.k+yy.k,xx.t,yy.t,++cur&#125;;</span><br><span class="line">            e[cur]=neww;</span><br><span class="line">            q.<span class="built_in">push</span>(neww);</span><br><span class="line">        &#125;</span><br><span class="line">        E root=q.<span class="built_in">top</span>();q.<span class="built_in">pop</span>();</span><br><span class="line">        h[root.t]=<span class="number">0</span>;</span><br><span class="line">        <span class="built_in">dfs</span>(root.t);</span><br><span class="line">        <span class="comment">/*for(int i=1;i&lt;=cur;i++)&#123;</span></span><br><span class="line"><span class="comment">            cout&lt;&lt;e[i].k&lt;&lt;&#x27; &#x27;&lt;&lt;e[i].l&lt;&lt;&#x27; &#x27;&lt;&lt;e[i].r&lt;&lt;&#x27; &#x27;&lt;&lt;e[i].t&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">        &#125;*/</span></span><br><span class="line">        cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>图论</category>
      </categories>
  </entry>
  <entry>
    <title>取石子游戏</title>
    <url>/posts/15063/</url>
    <content><![CDATA[<h2 id="题目描述">题目描述</h2>
<p>一天小明和小红在玩取石子游戏，游戏规则是这样的：<br />
（1）本游戏是一个二人游戏；<br />
（2）有一堆石子，共有n个；<br />
（3）两人轮流进行；<br />
（4）每走一步可以取走1~m个石子；<br />
（5）最先取光石子的一方为胜。<br />
如果游戏的双方使用的都是最优策略，请输出哪个人能赢。</p>
<h2 id="输入">输入</h2>
<p>输入的第一行是一个正整数C（C&lt;=100），表示有C组测试数据。<br />
每组输入两个整数n和m（1&lt;=n,m&lt;=1000），n和m的含义见题目描述。</p>
<h2 id="输出">输出</h2>
<p>对于每组输入，如果先走的人能赢，请输出&quot;first&quot;，否则请输出&quot;second&quot;。</p>
<span id="more"></span>
<h2 id="样例输入">样例输入</h2>
<pre><code>2
23 2
4 3</code></pre>
<h2 id="样例输出">样例输出</h2>
<pre><code>first
second  
  
考虑第一个人什么时候赢，如果石子数为1到m，赢，m+1输，m+2可以让对方为m+1，赢，2m+2时怎么取都大于m+1输，2m+3可以取到2m+2让对方输，以此类推，如果n是m+1的整数倍，则A输，否则B输。  
代码  </code></pre>
<p><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" /></p>
<pre><code>```
 1 #include&lt;iostream&gt;
 2 #include&lt;cstdio&gt;
 3 #include&lt;cmath&gt;
 4 #include&lt;cstring&gt;
 5 #include&lt;algorithm&gt;
 6 #define ll long long
 7 using namespace std;
 8 int T,n,m;
 9 int main()&#123;
10     cin&gt;&gt;T;
11     while(T--)&#123;
12         cin&gt;&gt;n&gt;&gt;m;
13         if(n%(m+1))&#123;
14             cout&lt;&lt;&quot;first\n&quot;;
15         &#125;
16         else cout&lt;&lt;&quot;second\n&quot;;
17     &#125;
18     return 0;
19 &#125;```</code></pre>
<p>View Code</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>字符串的查找删除</title>
    <url>/posts/39923/</url>
    <content><![CDATA[<h2 id="题目描述">题目描述</h2>
<p>给定一个短字符串（不含空格），再给定若干字符串，在这些字符串中删除所含有的短字符串。</p>
<h2 id="输入">输入</h2>
<p>输入只有1组数据。 输入一个短字符串（不含空格），再输入若干字符串直到文件结束为止。</p>
<h2 id="输出">输出</h2>
<p>删除输入的短字符串(不区分大小写)并去掉空格,输出。</p>
<span id="more"></span>
<h2 id="样例输入">样例输入</h2>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">in</span><br><span class="line">#include </span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">printf(&quot; Hi &quot;);</span><br><span class="line">&#125;```</span><br><span class="line"></span><br><span class="line">### 样例输出</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>#clude tma() {</p>
<p>prtf(&quot;Hi&quot;); }```</p>
<h3 id="提示">提示</h3>
<p>注:将字符串中的In、IN、iN、in删除。</p>
<p>```c++ #include<iostream> #include<cstdio> #include<cmath> #include<cstring> #include<algorithm> #define ll long long using namespace std; string s,ts; string sub; void trans(string &amp;xx){ for(int i=0;i&lt;xx.size();i++){ if(xx[i]&gt;='A'&amp;&amp;xx[i]&lt;='Z') xx[i]+='a'-'A'; } } int main(){</p>
<pre><code>cin&gt;&gt;sub;
trans(sub);
getchar();
while(getline(cin,s))&#123;
    ts=s;
    trans(s);
    string::size_type x=s.find(sub);
    while(x!=s.npos)&#123;
        for(int i=x;i&lt;x+sub.size();i++)&#123;
            s[i]=&#39; &#39;;
        &#125;
        x=s.find(sub);
    &#125;
    for(int i=0;i&lt;s.size();i++)&#123;
        if(s[i]!=&#39; &#39;) printf(&quot;%c&quot;,ts[i]);
    &#125;
    cout&lt;&lt;endl;
&#125;
return 0;</code></pre>
<p>}```</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>字符串</category>
      </categories>
  </entry>
  <entry>
    <title>奶牛的聚会</title>
    <url>/posts/30631/</url>
    <content><![CDATA[<h2 id="题目描述">题目描述</h2>
<p>农历新年马上就要到了，奶牛们计划举办一次聚会庆祝新年的到来。但是，奶牛们并不喜欢走太远的路，这会给他们的聚会带来消极情绪，当一头奶牛的消极指数为Wi，他参加聚会所需行走的距离为si，那么他就会给聚会带来Si*Wi的消极情绪。所有奶牛所在位置都在一条直线上，已知所有奶牛的坐标和消极指数，求如何确定聚会地点，使得所有奶牛给聚会带来的消极情绪之和最小，输出消极情绪之和的最小值。</p>
<h2 id="输入">输入</h2>
<p>第一行包含一个整数 Ca(Ca&lt;=20) ，表示有 Ca 组测试数据。</p>
<p>对于每组测试数据：第一行包含一个整数n(1&lt;=n&lt;=50000) ，表示奶牛的数量。接下来 n 行每行包含两个浮点数Si和wi (-106&lt;=Si&lt;=106, 0&lt;Wi&lt;15)。</p>
<h2 id="输出">输出</h2>
<h2 id="对于每组测试数据输出-case-c-ans-其中c表示测试数据编号ans表示消极情绪之和的最小值结果四舍五入为一个整数">对于每组测试数据，输出 &quot;Case #c: ans&quot; ，其中c表示测试数据编号，ans表示消极情绪之和的最小值，结果四舍五入为一个整数。</h2>
<span id="more"></span>
<h2 id="样例输入">样例输入</h2>
<blockquote>
<p>1 5 0.9 2 1.4 4 3.1 1 6.2 1 8.3 2</p>
</blockquote>
<h2 id="样例输出">样例输出</h2>
<blockquote>
<p>Case #1: 300</p>
</blockquote>
<h3 id="三分裸的可以自己用定义证一下凸函数加凸函数等于凸函数">三分，裸的，可以自己用定义证一下凸函数加凸函数等于凸函数</h3>
<p>```c++ #include<iostream> #include<cstdio> #include<cstring> #define ll long long #define ld double using namespace std; int T,n; ld sm1=0,sm2=0,sm3=0,sm4=0; ld w[50020],s[50020]; ld abs(ld x){ return x&gt;0?x:-x; } ld pow(ld x,int k){ ld cur=1; for(int i=1;i&lt;=k;i++){ cur<em>=x; } return cur; } ll ans(ld x){ ld cur=x-(ll)x; if(cur&lt;0.5) return (ll)x; return (ll)x+1; } ld smstp(ld ss){ ld cur=0; for(int i=1;i&lt;=n;i++){ cur+=pow(abs(s[i]-ss),3)</em>w[i]; } return cur; } int main(){ /*ld pla;</p>
<pre><code>for(pla=0.9;pla&lt;=8.3;pla+=0.1)
    cout&lt;&lt;pla&lt;&lt;&quot;:&quot;&lt;&lt;ans(pow(abs(0.9-pla),3)*2+pow(abs(1.4-pla),3)*4+pow(abs(3.1-pla),3)*13+pow(abs(6.2-pla),3)*1+pow(abs(8.3-pla),3)*2)&lt;&lt;endl;
*/
cin&gt;&gt;T;
for(int I=1;I&lt;=T;I++)&#123;
    memset(s,0,sizeof(s));
    memset(w,0,sizeof(w));
    scanf(&quot;%d&quot;,&amp;n);
    ld l=1e7,r=-1e7;
    for(int i=1;i&lt;=n;i++)&#123;
        scanf(&quot;%lf%lf&quot;,&amp;s[i],&amp;w[i]);
        //cin&gt;&gt;s[i]&gt;&gt;w[i];
        //cout&lt;&lt;s[i]&lt;&lt;&#39; &#39;&lt;&lt;w[i]&lt;&lt;endl;
        l=min(s[i],l);
        r=max(s[i],r);
    &#125;
    //cout&lt;&lt;l&lt;&lt;&quot; &quot;&lt;&lt;r&lt;&lt;endl;
    //cout&lt;&lt;r-l&lt;&lt;endl;
    while(r-l&gt;0.00001)&#123;
        ld m1=l+(r-l)/3.0;
        ld m2=r-(r-l)/3.0;
        if(smstp(m1)&lt;smstp(m2))&#123;
            r=m2;
        &#125;
        else&#123;
            l=m1;
        &#125;//cout&lt;&lt;(int)l&lt;&lt;&quot; &quot;&lt;&lt;(int)r&lt;&lt;endl;
    &#125;
    cout&lt;&lt;&quot;Case #&quot;&lt;&lt;I&lt;&lt;&quot;: &quot;&lt;&lt;ans(smstp(l))&lt;&lt;endl;
&#125;
return 0;</code></pre>
<p>}```</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>归并排序 &amp;&amp; 51Nod 1019逆序数 &amp;&amp; 最小的交换</title>
    <url>/posts/45681/</url>
    <content><![CDATA[<p>一、归并排序</p>
<p>递归思路，将一个序列二分，使前半段有序，使后半段有序，然后使用双指针扫一遍使整段有序。</p>
<p>对于n个元素，每个元素都在排序1个元素，2个元素，4个元素，8个元素......的时候出现，因此复杂度是O(nlogn)。</p>
<p>二、求逆序数</p>
<p>在一个排列中，如果一对数的前后位置与大小顺序相反，即前面的数大于后面的数，那么它们就称为一个逆序。一个排列中逆序的总数就称为这个排列的逆序数。</p>
<p>如2 4 3 1中，2 1，4 3，4 1，3 1是逆序，逆序数是4。给出一个整数序列，求该序列的逆序数。</p>
<h1 id="输入">输入</h1>
<pre><code>第1行：N，N为序列的长度（n &lt;= 50000)
第2 - N + 1行：序列中的元素（0 &lt;= A[i] &lt;= 10^9）</code></pre>
<h1 id="输出">输出</h1>
<pre><code>输出逆序数</code></pre>
<span id="more"></span>
<h1 id="输入样例">输入样例</h1>
<pre><code>4
2
4
3
1</code></pre>
<h1 id="输出样例">输出样例</h1>
<h1 id="section">4</h1>
<h1 id="思路">思路</h1>
<pre><code>____考虑在每次归并两个有序序列的过程中，我们会将后面一个有序序列的部分元素前移，那么从后向前中间 **超越的元素** 与它成为一个逆序对，代码中为当前总位置j减去已经被分配的比它小的元素k，即 **超越的元素** 数。 _ _  
__</code></pre>
<p><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" /></p>
<pre><code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 1 #include&lt;iostream&gt;</span><br><span class="line"> 2 #include&lt;cstdio&gt;</span><br><span class="line"> 3 using namespace std;</span><br><span class="line"> 4 int a[50020],b[50020];</span><br><span class="line"> 5 int n;</span><br><span class="line"> 6 long long merge(int low,int mid,int high)&#123;</span><br><span class="line"> 7     int i=low,j=mid+1,k=low;</span><br><span class="line"> 8     long long count=0;</span><br><span class="line"> 9     while(i&lt;=mid&amp;&amp;j&lt;=high)&#123;</span><br><span class="line">10         if(a[i]&lt;=a[j])&#123;</span><br><span class="line">11             b[k++]=a[i++];</span><br><span class="line">12         &#125;</span><br><span class="line">13         else&#123;</span><br><span class="line">14             b[k++]=a[j++];</span><br><span class="line">15             count+=j-k;</span><br><span class="line">16         &#125;</span><br><span class="line">17     &#125;</span><br><span class="line">18     while(i&lt;=mid)&#123;</span><br><span class="line">19         b[k++]=a[i++];</span><br><span class="line">20     &#125;</span><br><span class="line">21     while(j&lt;=high)&#123;</span><br><span class="line">22         b[k++]=a[j++];</span><br><span class="line">23     &#125;</span><br><span class="line">24     for(i=low;i&lt;=high;i++)&#123;</span><br><span class="line">25         a[i]=b[i];</span><br><span class="line">26     &#125;</span><br><span class="line">27     return count;</span><br><span class="line">28 &#125;</span><br><span class="line">29 long long mergeSort(int x,int y)&#123;</span><br><span class="line">30     </span><br><span class="line">31     if(x&lt;y)&#123;</span><br><span class="line">32         int mid=(x+y)/2;</span><br><span class="line">33         long long count=0;</span><br><span class="line">34         count+=mergeSort(x,mid);</span><br><span class="line">35         count+=mergeSort(mid+1,y);</span><br><span class="line">36         count+=merge(x,mid,y);</span><br><span class="line">37         return count;</span><br><span class="line">38     &#125;</span><br><span class="line">39     return 0;</span><br><span class="line">40 &#125;</span><br><span class="line">41 int main()&#123;</span><br><span class="line">42     cin&gt;&gt;n;</span><br><span class="line">43     for(int i=0;i&lt;n;i++)&#123;</span><br><span class="line">44         scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">45     &#125;</span><br><span class="line">46     cout&lt;&lt;mergeSort(0,n-1);</span><br><span class="line">47     return 0;</span><br><span class="line">48 &#125;</span><br></pre></td></tr></table></figure></code></pre>
<p>View Code</p>
<p>三、最小的交换</p>
<p>只能相邻元素交换，求让序列升序的最小交换次数。</p>
<p>我们不可避免的让大数向后交换，那么我们考虑最大的一个数，让其向后交换，肯定会交换到最后一位，交换的次数为后面比它小的数的个数，即包含它且它更大的逆序对数，再把次小的元素向后移动......最后的移动次数即为逆序对数。</p>
<p>代码同上</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>基础算法</category>
      </categories>
  </entry>
  <entry>
    <title>扩展KMP(讲解+模版+例题)</title>
    <url>/posts/58130/</url>
    <content><![CDATA[<blockquote>
<p>在阅读这篇文章之前，我们假定你已经掌握了<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vc3otd2NjL3AvMTEzMzEzNTcuaHRtbA==">KMP:n+1次探<i class="fa fa-external-link-alt"></i></span>里的定义。</p>
</blockquote>
<h1 id="引入扩展kmp是干什么的">引入：扩展KMP是干什么的</h1>
<p>扩展KMP解决的是源串S的每一个后缀与模式串P的最长公共前缀的长度的问题，并求解出答案extend数组，例如，ababac与aba的extend数组是3 0 3 0 1 0，这里extend[i]表示s[i:5]（i从0开始）与p[0:2]的最长公共前缀的长度。</p>
<h1 id="next数组的定义">next数组的定义</h1>
<p>这里的next数组与KMP里的不同。</p>
<p>next[i]表示从i开始的p的后缀与p的最长公共前缀的长度，也就是，p对p求扩展KMP，可以参见<span class="exturl" data-url="aHR0cDovL2FjbS5oZHUuZWR1LmNuL3Nob3dwcm9ibGVtLnBocD9waWQ9NjYyOQ==">2019 Multi-University Training Contest 5 - 1006 - string matching<i class="fa fa-external-link-alt"></i></span>。</p>
<p>我们先假设已经有了next数组，来求extend，因为next数组的求法是和extend一样的。</p>
<h1 id="扩展kmp">扩展KMP</h1>
<h3 id="递推已知extendi-1如何求extendi">递推：已知extend[i-1]，如何求extend[i]？</h3>
<p>我们假设在前面匹配时，向右匹配到的最远坐标为last，是从first开始匹配的，也就是说s[first:last]=p[0:last-first]。可以推出s[i:last]=p[i-first:last-first]，但这个不是和p的开头匹配，还不能用，我们取extend[i]=min(last-i+1, next[i-first])，看看p[i-first:last-first]和p开头有多少相同。然后向后检测extend[i]能不能更大，这一块暴力，别忘了最后更新first和last。</p>
<h3 id="初始暴力大法好">初始：暴力大法好</h3>
<p>暴力检测s和p最大公共前缀长度extend[0]。</p>
<h1 id="求next数组">求next数组</h1>
<p>和上面一样。next的0位置必定是p的长度，代码中last初值设为0是为了避免初始化。</p>
<h1 id="例题">例题</h1>
<span id="more"></span>
<p><span class="exturl" data-url="aHR0cDovL2FjbS5oZHUuZWR1LmNuL3Nob3dwcm9ibGVtLnBocD9waWQ9MjMyOA==">hdu2328<i class="fa fa-external-link-alt"></i></span></p>
<p>给一堆字符串，求最长公共字串。</p>
<p>找一个最短的串，暴力求出每一个后缀，和所有串匹配，找到每个extend里最大的，取总体最小，是一个答案，找到所有答案里长度最长的字典序最小的，就是答案。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> db double</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ioss ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">int</span> n,cnt;</span><br><span class="line">ll ext[<span class="number">220</span>],nex[<span class="number">220</span>];</span><br><span class="line">string skr[<span class="number">4020</span>];</span><br><span class="line">string ans[<span class="number">4020</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getNext</span><span class="params">(string &amp;strp,ll nextt[])</span></span>&#123;</span><br><span class="line">    ll pl=strp.<span class="built_in">size</span>();</span><br><span class="line">    ll fir=<span class="number">0</span>,las=<span class="number">0</span>;</span><br><span class="line">    nextt[<span class="number">0</span>]=pl;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;pl;i++) &#123;</span><br><span class="line">        nextt[i] = <span class="built_in">min</span>(las - i + <span class="number">1</span>, nextt[i - fir]);</span><br><span class="line">        <span class="keyword">if</span> (nextt[i] &lt; <span class="number">0</span>) nextt[i] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i+nextt[i]&lt;pl &amp;&amp; strp[nextt[i]] == strp[i + nextt[i]]) &#123;</span><br><span class="line">            nextt[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i + nextt[i] - <span class="number">1</span> &gt; las) &#123;</span><br><span class="line">            las = i + nextt[i] - <span class="number">1</span>;</span><br><span class="line">            fir = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">exKMP</span><span class="params">(string &amp;strp,string &amp;strs,ll nextt[],ll extt[])</span></span>&#123;</span><br><span class="line">    <span class="comment">//cout&lt;&lt;&quot;start exKMP:&quot;&lt;&lt;endl;</span></span><br><span class="line">    <span class="built_in">getNext</span>(strp,nextt);</span><br><span class="line">    ll pl=strp.<span class="built_in">size</span>(),sl=strs.<span class="built_in">size</span>();</span><br><span class="line">    ll fir=<span class="number">0</span>,las=<span class="number">-1</span>,mnl=<span class="built_in">min</span>(sl,pl);</span><br><span class="line">    <span class="comment">//cout&lt;&lt;strp&lt;&lt;endl&lt;&lt;strs&lt;&lt;endl;</span></span><br><span class="line">    <span class="keyword">while</span>(las&lt;mnl<span class="number">-1</span>&amp;&amp;strp[las+<span class="number">1</span>]==strs[las+<span class="number">1</span>])&#123;</span><br><span class="line">        las++;</span><br><span class="line">        <span class="comment">//cout&lt;&lt;&quot;init++&quot;&lt;&lt;endl;</span></span><br><span class="line">    &#125;</span><br><span class="line">    extt[<span class="number">0</span>]=las+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(ll i=<span class="number">1</span>;i&lt;sl;i++)&#123;</span><br><span class="line">        extt[i]=<span class="built_in">min</span>(las-i+<span class="number">1</span>,nextt[i-fir]);</span><br><span class="line">        <span class="keyword">if</span>(extt[i]&lt;<span class="number">0</span>) extt[i]=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(extt[i]&lt;pl &amp;&amp; i+extt[i]&lt;sl &amp;&amp; strp[extt[i]]==strs[i+extt[i]])&#123;</span><br><span class="line">            extt[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(i+extt[i]<span class="number">-1</span>&gt;las)&#123;</span><br><span class="line">            las=i+extt[i]<span class="number">-1</span>;</span><br><span class="line">            fir=i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">//ioss;</span></span><br><span class="line">    <span class="comment">//freopen(&quot;1.in&quot;,&quot;r&quot;,stdin);</span></span><br><span class="line">    <span class="comment">//freopen(&quot;2.out&quot;,&quot;w&quot;,stdout);</span></span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n)==<span class="number">1</span>&amp;&amp;n)&#123;</span><br><span class="line">        cnt=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> mnlen=<span class="number">300</span>,mnlenx;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++) &#123;</span><br><span class="line">            cin &gt;&gt; skr[i];</span><br><span class="line">            <span class="keyword">if</span> (skr[i].<span class="built_in">size</span>() &lt; mnlen) &#123;</span><br><span class="line">                mnlen = skr[i].<span class="built_in">size</span>();</span><br><span class="line">                mnlenx = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;skr[mnlenx].<span class="built_in">size</span>();i++)&#123;</span><br><span class="line">            ll mn=<span class="number">1e10</span>;</span><br><span class="line">            string cur=skr[mnlenx].<span class="built_in">substr</span>(i);</span><br><span class="line">            <span class="comment">//out&lt;&lt;i+1&lt;&lt;&quot;: cur= &quot;&lt;&lt;cur&lt;&lt;endl;</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=n;j++)&#123;</span><br><span class="line">                ll mx=<span class="number">0</span>;</span><br><span class="line">                <span class="built_in">exKMP</span>(cur,skr[j],nex,ext);</span><br><span class="line">                <span class="comment">/*cout&lt;&lt;&quot;nex: &quot;;</span></span><br><span class="line"><span class="comment">                for(int k=0;k&lt;cur.size();k++)&#123;</span></span><br><span class="line"><span class="comment">                    cout&lt;&lt;nex[k]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                cout&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">                cout&lt;&lt;&quot;ext: &quot;;*/</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> k=<span class="number">0</span>;k&lt;skr[j].<span class="built_in">size</span>();k++)&#123;</span><br><span class="line">                    <span class="comment">//cout&lt;&lt;ext[k]&lt;&lt;&#x27; &#x27;;</span></span><br><span class="line">                    mx=<span class="built_in">max</span>(mx,ext[k]);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//cout&lt;&lt;endl;</span></span><br><span class="line">                mn=<span class="built_in">min</span>(mn,mx);</span><br><span class="line">                <span class="comment">//cout&lt;&lt;&quot;mn = &quot;&lt;&lt;mn&lt;&lt;endl;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(mn&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span>(cnt==<span class="number">0</span>||(mn==ans[<span class="number">1</span>].<span class="built_in">size</span>()))&#123;</span><br><span class="line">                    ans[++cnt]=cur.<span class="built_in">substr</span>(<span class="number">0</span>,mn);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span>(mn&gt;ans[<span class="number">1</span>].<span class="built_in">size</span>())&#123;</span><br><span class="line">                    cnt=<span class="number">0</span>;</span><br><span class="line">                    ans[++cnt]=cur.<span class="built_in">substr</span>(<span class="number">0</span>,mn);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cnt)&#123;</span><br><span class="line">            <span class="built_in">sort</span>(ans+<span class="number">1</span>,ans+<span class="number">1</span>+cnt);</span><br><span class="line">            cout&lt;&lt;ans[<span class="number">1</span>]&lt;&lt;endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;IDENTITY LOST&quot;</span>&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>字符串</category>
      </categories>
  </entry>
  <entry>
    <title>数学技巧（位运算）</title>
    <url>/posts/6899/</url>
    <content><![CDATA[<ol type="1">
<li>n mod 2^k = n&amp;((1&lt;&lt;k)-1)</li>
<li>判断n是否为2的正整数幂n&gt;1 &amp;&amp; !(n&amp;(n-1))</li>
</ol>
<h2 id="位压缩">位压缩：</h2>
<ol start="3" type="1">
<li>读取第k位：a&gt;&gt;k&amp;1</li>
<li>读取第k位并取反：~a&gt;&gt;k&amp;1</li>
<li>将第k位清0：a&amp;=~(1&lt;&lt;k)</li>
<li>将第k位置1：a|=1&lt;&lt;k</li>
<li>将第k位取反：a^=1&lt;&lt;k</li>
<li>将第k1~k2位反转：a^=((1&lt;&lt;(k2-k1+1))-1)&lt;&lt;k2 （？）</li>
<li>是否恰好只有一个true：!(x&amp;(x-1))&amp;&amp;x</li>
<li>判断是否有两个相邻的true：x&gt;&gt;1&amp;x</li>
<li>是否有三个相邻的true：x&gt;&gt;1&amp;x&gt;&gt;2&amp;x</li>
</ol>
<h2 id="打包位统计">打包位统计：</h2>
<ol start="12" type="1">
<li>统计true的个数的奇偶性：x<sup>=x&gt;&gt;1;x</sup>=x&gt;&gt;2;x<sup>=x&gt;&gt;4;x</sup>=x&gt;&gt;8;x^=x&gt;&gt;16; 之后：(x&gt;&gt;k1^x&gt;&gt;(k2+1))&amp;1</li>
<li>统计true的个数1：每次n&amp;=n-1，计数器+1</li>
<li>统计true的个数2： <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">count</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> x)</span></span>&#123;<span class="comment">//注意传入uint</span></span><br><span class="line">    x=(x&amp;<span class="number">0x55555555</span>)+(x&gt;&gt;<span class="number">1</span>&amp;<span class="number">0x55555555</span>);</span><br><span class="line">    x=(x&amp;<span class="number">0x33333333</span>)+(x&gt;&gt;<span class="number">2</span>&amp;<span class="number">0x33333333</span>);</span><br><span class="line">    x=(x&amp;<span class="number">0x0F0F0F0F</span>)+(x&gt;&gt;<span class="number">4</span>&amp;<span class="number">0x0F0F0F0F</span>);</span><br><span class="line">    x=(x&amp;<span class="number">0x00FF00FF</span>)+(x&gt;&gt;<span class="number">8</span>&amp;<span class="number">0x00FF00FF</span>);</span><br><span class="line">    x=(x&amp;<span class="number">0x0000FFFF</span>)+(x&gt;&gt;<span class="number">16</span>&amp;<span class="number">0x0000FFFF</span>);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>反转位的顺序： <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">rev</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    x=(x&amp;<span class="number">0x55555555</span>)&lt;&lt;<span class="number">1</span>|(x&gt;&gt;<span class="number">1</span>&amp;<span class="number">0x55555555</span>);</span><br><span class="line">    x=(x&amp;<span class="number">0x33333333</span>)&lt;&lt;<span class="number">2</span>|(x&gt;&gt;<span class="number">2</span>&amp;<span class="number">0x33333333</span>);</span><br><span class="line">    x=(x&amp;<span class="number">0x0F0F0F0F</span>)&lt;&lt;<span class="number">4</span>|(x&gt;&gt;<span class="number">4</span>&amp;<span class="number">0x0F0F0F0F</span>);</span><br><span class="line">    x=(x&amp;<span class="number">0x00FF00FF</span>)&lt;&lt;<span class="number">8</span>|(x&gt;&gt;<span class="number">8</span>&amp;<span class="number">0x00FF00FF</span>);</span><br><span class="line">    x=(x&amp;<span class="number">0x0000FFFF</span>)&lt;&lt;<span class="number">16</span>|(x&gt;&gt;<span class="number">16</span>&amp;<span class="number">0x0000FFFF</span>);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="消除分支">消除分支：</h2>
<ol start="16" type="1">
<li><p>计算绝对值： <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">abs</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> y=x&gt;&gt;<span class="number">31</span>;</span><br><span class="line">    <span class="keyword">return</span> (x+y)^y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li>
<li><p>求最大值： <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m=(x-y)&gt;&gt;<span class="number">31</span>;</span><br><span class="line">    <span class="keyword">return</span> y&amp;m|x&amp;~m;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></li>
</ol>
<h2 id="其他">其他：</h2>
<ol start="18" type="1">
<li>交换变量： <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>&amp; x,<span class="keyword">int</span>&amp; y)</span></span>&#123;x^=y;y^=x;x^=y;&#125;;</span><br><span class="line"><span class="comment">//C++可以写成x^=y^=x^=y</span></span><br><span class="line"><span class="comment">//Java不行</span></span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="感谢骆神犇09年的文再看还是大有收获"><strong>感谢骆神犇，09年的文再看还是大有收获。</strong></h3>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>欧几里得游戏(博弈论启蒙)</title>
    <url>/posts/50675/</url>
    <content><![CDATA[<h2 id="题目描述">题目描述</h2>
<p>小明和小红在玩欧几里得游戏。他们从两个自然数开始，第一个玩家小明，从两个数的较大数中减去较小数的尽可能大的正整数倍，只要差为非负即可。然后，第二个玩家小红，对得到的两个数进行同样的操作，然后又是小明。就这样轮流进行游戏，直至某个玩家将较大数减去较小数的某个倍数之后差为0为止，此时游戏结束，该玩家就是胜利者。</p>
<h2 id="输入">输入</h2>
<p>输入包含多组测试数据。每组输入两个正整数，表示游戏一开始的两个数，游戏总是小明先开始。 当输入两个0的时候，输入结束。</p>
<h2 id="输出">输出</h2>
<p>对于每组输入，输出最后的胜者，我们认为他们两个都是顶尖高手，每一步游戏都做出了最佳的选择。 具体输出格式见输出样例。</p>
<span id="more"></span>
<h2 id="样例输入">样例输入</h2>
<blockquote>
<p>34 12 15 24 0 0</p>
</blockquote>
<h2 id="样例输出">样例输出</h2>
<blockquote>
<p>xiaoming wins xiaohong wins</p>
</blockquote>
<h3 id="两句话能转移到必败点的是必胜点只能转移到必胜点的是必败点">两句话，能转移到必败点的是必胜点，只能转移到必胜点的是必败点。</h3>
<p><img src="https://img2018.cnblogs.com/blog/1575943/201906/1575943-20190623095542588-1832008552.png" /></p>
<p>我是这么推出来的，或者从定理出发，一个点不是必败点就是必胜点，对三角形右下角分别假设，都可以推出m/n&gt;2必胜</p>
<p><code>c++ #include&lt;cstdio&gt; #include&lt;iostream&gt; #include&lt;cstring&gt; #include&lt;string&gt; #include&lt;algorithm&gt; #define ll long long using namespace std; int n,m; int main()&#123;     while(scanf(&quot;%d%d&quot;,&amp;n,&amp;m)==2&amp;&amp;n&amp;&amp;m)&#123;         if(n&gt;m) swap(n,m);         bool flag=true;         while(m%n!=0&amp;&amp;m/n==1)&#123;             m-=n;             if(n&gt;m) swap(n,m);             flag=!flag;         &#125;         if(flag)&#123;             printf(&quot;xiaoming wins\n&quot;);         &#125;         else printf(&quot;xiaohong wins\n&quot;);     &#125;     return 0; &#125;</code></p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>欧拉函数</title>
    <url>/posts/55226/</url>
    <content><![CDATA[<h2 id="定义">定义</h2>
<p>n的欧拉函数表示小于n的数中和n互质的数。</p>
<h2 id="求法">求法</h2>
<p>定义n为正整数，ti为n唯一分解的质数基。</p>
<p>利用n的欧拉函数为n*所有的(ti-1)/ti来求。</p>
<p>第一种方法为sqrt(n)的时间单个求。</p>
<p>第二种方法利用质数筛，如果循环到一个数，其数组没被变过，说明这个数是质数，可以往后修改其他数。</p>
<span id="more"></span>
<h2 id="模版">模版</h2>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffffffffffff</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mem(a, x) memset(a,x,sizeof(a))</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span></span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; Pii;</span><br><span class="line"><span class="keyword">typedef</span> std::pair&lt;ll, ll&gt; Pll;</span><br><span class="line"><span class="function">ll <span class="title">power</span><span class="params">(ll a, ll b,ll p)</span> </span>&#123; ll res = <span class="number">1</span>; <span class="keyword">for</span> (; b &gt; <span class="number">0</span>; b &gt;&gt;= <span class="number">1</span>) &#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * a % p; &#125; <span class="keyword">return</span> res; &#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll p, ll q)</span> </span>&#123; <span class="keyword">return</span> q == <span class="number">0</span> ? p : <span class="built_in">gcd</span>(q, p % q); &#125;</span><br><span class="line">ll _abs(ll x)&#123;<span class="keyword">return</span> x &lt; <span class="number">0</span> ? -x : x;&#125;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> inf 0x7fffffffffffffff</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">euler_phi</span><span class="params">(<span class="keyword">int</span> n)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res=n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i*i&lt;=n;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n%i==<span class="number">0</span>)&#123;</span><br><span class="line">            res=res/i*(i<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">for</span>(;n%i==<span class="number">0</span>;n/=i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(n!=<span class="number">1</span>) res=res/n*(n<span class="number">-1</span>);</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAX_N=<span class="number">3000000</span>;</span><br><span class="line"><span class="keyword">int</span> euler[MAX_N+<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">euler_phi2</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=MAX_N;i++) euler[i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>;i&lt;=MAX_N;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(euler[i]==i)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=i;j&lt;=MAX_N;j+=i)&#123;</span><br><span class="line">                euler[j]=euler[j]/i*(i<span class="number">-1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    <span class="built_in">euler_phi2</span>();</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;a&gt;&gt;b)&#123;</span><br><span class="line">        ll sum=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=a;i&lt;=b;i++)&#123;</span><br><span class="line">            sum+=euler[i];</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>龟速乘&amp;可靠快速幂</title>
    <url>/posts/8041/</url>
    <content><![CDATA[<p><strong>学自<span class="exturl" data-url="aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0N5YW5fcm9zZS9hcnRpY2xlL2RldGFpbHMvODMwNjUwMjY=">【谈谈知识点】快速幂&amp;龟速乘&amp;快速乘 - Cyan_rose的博客 - CSDN博客<i class="fa fa-external-link-alt"></i></span></strong></p>
<h2 id="基础快速幂">基础快速幂</h2>
<p>直接上代码</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">ll <span class="title">speed</span><span class="params">(ll a,ll b,ll p)</span></span>&#123;</span><br><span class="line">    ll cur=a,ans=<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b&amp;<span class="number">1</span>) ans=ans*cur%p;</span><br><span class="line">        cur=cur*cur%p;</span><br><span class="line">        b&gt;&gt;=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans%p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="龟速乘">龟速乘</h2>
<p>乘法换成加法，原理差不多就是把其中一个乘数二进制拆分，每次让另一个乘数翻倍，能乘的时候就乘，因为只是翻倍，所以不会超范围。</p>
<p><code>c++ ll lowspeed(ll a,ll b,ll p)&#123;     ll cur=a,ans=0;     while(b)&#123;         if(b&amp;1) ans=(ans+cur)%p;         cur=(cur+cur)%p;         b&gt;&gt;=1;     &#125;     return ans%p; &#125; ll speed(ll a,ll b,ll p)&#123;     ll cur=a,ans=1;     while(b)&#123;         if(b&amp;1) ans=lowspeed(ans,cur,p)%p;         cur=lowspeed(cur,cur,p)%p;         b&gt;&gt;=1;     &#125;     return ans%p; &#125;</code></p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>数学</category>
      </categories>
  </entry>
  <entry>
    <title>（更新）西南民族大学第十届校赛（同步赛）</title>
    <url>/posts/35804/</url>
    <content><![CDATA[<h1 id="格式坏掉了可以去">格式坏掉了，可以去<a href="https://www.cnblogs.com/sz-wcc/p/10200732.html"></a></h1>
<p><span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvMzIyI3F1ZXN0aW9u">西南民族大学第十届校赛（同步赛）<i class="fa fa-external-link-alt"></i></span></p>
<p>打了11道，果然AK是这辈子也不可能的么QAQ</p>
<p>A <span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvMzIyL0E=">dreamstart的催促<i class="fa fa-external-link-alt"></i></span></p>
<p>快速幂。。。</p>
<span id="more"></span>
<p><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 1 #include&lt;iostream&gt;</span><br><span class="line"> 2 #include&lt;cstdio&gt;</span><br><span class="line"> 3 using namespace std;</span><br><span class="line"> 4 #define MOD 10000019</span><br><span class="line"> 5 #define ll long long</span><br><span class="line"> 6 ll n,a;</span><br><span class="line"> 7 ll ANS=0;</span><br><span class="line"> 8 ll speed(ll a,ll b)&#123;</span><br><span class="line"> 9     ll ans=1,cur=a%MOD;</span><br><span class="line">10     while(b)&#123;</span><br><span class="line">11         if(b&amp;1)&#123;</span><br><span class="line">12             ans*=cur;</span><br><span class="line">13             ans%=MOD;</span><br><span class="line">14         &#125;</span><br><span class="line">15         cur*=cur;</span><br><span class="line">16         cur%=MOD;</span><br><span class="line">17         b&gt;&gt;=1;</span><br><span class="line">18     &#125;</span><br><span class="line">19     return ans%MOD;</span><br><span class="line">20 &#125;</span><br><span class="line">21 int main()&#123;</span><br><span class="line">22     cin&gt;&gt;n;</span><br><span class="line">23     for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">24         scanf(&quot;%lld&quot;,&amp;a);</span><br><span class="line">25         ANS+=speed(a,i);</span><br><span class="line">26         ANS%=MOD;</span><br><span class="line">27     &#125;</span><br><span class="line">28     printf(&quot;%lld\n&quot;,ANS);</span><br><span class="line">29      </span><br><span class="line">30     return 0;</span><br><span class="line">31 &#125;</span><br></pre></td></tr></table></figure>
<p>A</p>
<p>B <span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvMzIyL0I=">TRDD got lost again<i class="fa fa-external-link-alt"></i></span></p>
<p>很麻烦的一道题，我的做法是先把图转成n*m的，然后用二进制记录是否可以通过，再dfs。一开始cin.getline()超时，后来用的gets()。</p>
<p><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" /></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 1 #include&lt;iostream&gt;</span><br><span class="line"> 2 #include&lt;cstdio&gt;</span><br><span class="line"> 3 #include&lt;cstring&gt;</span><br><span class="line"> 4 #include&lt;queue&gt;</span><br><span class="line"> 5 #include&lt;string&gt;</span><br><span class="line"> 6 using namespace std;</span><br><span class="line"> 7 #define MOD 10000019</span><br><span class="line"> 8 #define ll long long</span><br><span class="line"> 9 #define MAXN 1000020</span><br><span class="line">10 int a[3004][3004],n,m;</span><br><span class="line">11 char s1[6020],s2[6020],s3[6020];</span><br><span class="line">12 bool k[3004][3004];</span><br><span class="line">13 int f[6][6]=&#123;&#123;-1,0&#125;,&#123;1,0&#125;,&#123;0,1&#125;,&#123;0,-1&#125;&#125;;//上，下，右，左</span><br><span class="line">14 int sx,sy,ex,ey;</span><br><span class="line">15 struct Point&#123;</span><br><span class="line">16     int x,y,step;</span><br><span class="line">17 &#125;;</span><br><span class="line">18 int bfs()&#123;</span><br><span class="line">19     memset(k,true,sizeof(k));</span><br><span class="line">20     queue&lt;Point&gt;q;</span><br><span class="line">21     q.push((Point)&#123;sx,sy,1&#125;);</span><br><span class="line">22     k[sx][sy]=false;</span><br><span class="line">23     while(!q.empty())&#123;</span><br><span class="line">24         Point cur=q.front();q.pop();</span><br><span class="line">25         if(cur.x==ex&amp;&amp;cur.y==ey) return cur.step;</span><br><span class="line">26         for(int i=0;i&lt;4;i++)&#123;</span><br><span class="line">27             int x=cur.x+f[i][0],y=cur.y+f[i][1];</span><br><span class="line">28             if((a[cur.x][cur.y]&amp;(1&lt;&lt;i))&amp;&amp;k[x][y]&amp;&amp;x&gt;=1&amp;&amp;x&lt;=n&amp;&amp;y&gt;=1&amp;&amp;y&lt;=m)&#123;</span><br><span class="line">29                 q.push((Point)&#123;x,y,cur.step+1&#125;);</span><br><span class="line">30                 k[x][y]=false;</span><br><span class="line">31             &#125;</span><br><span class="line">32         &#125;</span><br><span class="line">33     &#125;</span><br><span class="line">34     return 0;</span><br><span class="line">35 &#125;</span><br><span class="line">36 int main()&#123;</span><br><span class="line">37     scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">38     getchar();</span><br><span class="line">39     gets(s1);</span><br><span class="line">40     //cout&lt;&lt;s1&lt;&lt;endl;</span><br><span class="line">41     for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">42         gets(s2);</span><br><span class="line">43         gets(s3);</span><br><span class="line">44         for(int j=1;j&lt;=2*m;j+=2)&#123;</span><br><span class="line">45             if(s2[j]==&#x27;S&#x27;)&#123;</span><br><span class="line">46                 sx=i;</span><br><span class="line">47                 sy=(j+1)/2;</span><br><span class="line">48             &#125;</span><br><span class="line">49             if(s2[j]==&#x27;T&#x27;)&#123;</span><br><span class="line">50                 ex=i;</span><br><span class="line">51                 ey=(j+1)/2;</span><br><span class="line">52             &#125;</span><br><span class="line">53             int temp=0;</span><br><span class="line">54             if(s1[j]==&#x27; &#x27;) temp|=1;</span><br><span class="line">55             if(s3[j]==&#x27; &#x27;) temp|=2;</span><br><span class="line">56             if(s2[j+1]==&#x27; &#x27;) temp|=4;</span><br><span class="line">57             if(s2[j-1]==&#x27; &#x27;) temp|=8;</span><br><span class="line">58             a[i][(j+1)/2]=temp;</span><br><span class="line">59         &#125;</span><br><span class="line">60         strcpy(s1,s3);</span><br><span class="line">61     &#125;</span><br><span class="line">62     /*for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">63         for(int j=1;j&lt;=m;j++)&#123;</span><br><span class="line">64             printf(&quot;%d &quot;,a[i][j]);</span><br><span class="line">65         &#125;</span><br><span class="line">66         cout&lt;&lt;endl;</span><br><span class="line">67     &#125;*/</span><br><span class="line">68     int ans=bfs();</span><br><span class="line">69     if(!ans)&#123;</span><br><span class="line">70         printf(&quot;TRDD Got lost...TAT\n&quot;);</span><br><span class="line">71     &#125;</span><br><span class="line">72     else&#123;</span><br><span class="line">73         printf(&quot;%d\n&quot;,ans);</span><br><span class="line">74     &#125;</span><br><span class="line">75     return 0;</span><br><span class="line">76 &#125;</span><br></pre></td></tr></table></figure>
<p>B</p>
<p>C <span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvMzIyL0M=">Company<i class="fa fa-external-link-alt"></i></span></p>
<p>递归，返回下面的值并记录，一开始以为先求深度，后来发现不用。。。</p>
<p><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" /></p>
<p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 1 #include&lt;iostream&gt;</span><br><span class="line"> 2 #include&lt;cstdio&gt;</span><br><span class="line"> 3 using namespace std;</span><br><span class="line"> 4 #define MOD 10000019</span><br><span class="line"> 5 #define ll long long</span><br><span class="line"> 6 #define MAXN 200020*2</span><br><span class="line"> 7 int n,k;</span><br><span class="line"> 8 int pe[MAXN];</span><br><span class="line"> 9 struct Edge&#123;</span><br><span class="line">10     int u,v,next;</span><br><span class="line">11 &#125;e[MAXN];</span><br><span class="line">12 int g[MAXN];</span><br><span class="line">13 int dep[MAXN],f[MAXN],kk[MAXN];</span><br><span class="line">14 int dfs(int cur,int d)&#123;</span><br><span class="line">15     dep[cur]=d;</span><br><span class="line">16     f[cur]=1;</span><br><span class="line">17     int ans=0;</span><br><span class="line">18     for(int i=g[cur];i&gt;0;i=e[i].next)&#123;</span><br><span class="line">19         int v=e[i].v;</span><br><span class="line">20         if(!f[v])&#123;</span><br><span class="line">21             ans+=dfs(v,d+1);</span><br><span class="line">22         &#125;</span><br><span class="line">23     &#125;</span><br><span class="line">24     if(pe[cur]&lt;=k) return kk[cur]=ans+1;</span><br><span class="line">25     return kk[cur]=ans;</span><br><span class="line">26 &#125;</span><br><span class="line">27 int main()&#123;</span><br><span class="line">28     scanf(&quot;%d%d&quot;,&amp;n,&amp;k);</span><br><span class="line">29     for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">30         scanf(&quot;%d&quot;,&amp;pe[i]);</span><br><span class="line">31     &#125;</span><br><span class="line">32     int xx,yy;</span><br><span class="line">33     for(int i=1;i&lt;=n-1;i++)&#123;</span><br><span class="line">34         scanf(&quot;%d%d&quot;,&amp;xx,&amp;yy);</span><br><span class="line">35         e[i]=(Edge)&#123;xx,yy,g[xx]&#125;;g[xx]=i;</span><br><span class="line">36         e[i+n-1]=(Edge)&#123;yy,xx,g[yy]&#125;;g[yy]=i+n-1;</span><br><span class="line">37     &#125;</span><br><span class="line">38     dfs(1,1);</span><br><span class="line">39     for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">40         printf(&quot;%d &quot;,kk[i]);</span><br><span class="line">41     &#125;</span><br><span class="line">42      </span><br><span class="line">43     return 0;</span><br><span class="line">44 &#125;</span><br></pre></td></tr></table></figure> C</p>
<p>D <span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvMzIyL0Q=">&gt;A-&gt;B-&gt;C-<i class="fa fa-external-link-alt"></i></span></p>
<p>从任意一个点能搜3个回来就可以。</p>
<p><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" /></p>
<pre><code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 1 #include&lt;iostream&gt;</span><br><span class="line"> 2 #include&lt;cstdio&gt;</span><br><span class="line"> 3 using namespace std;</span><br><span class="line"> 4 #define MOD 10000019</span><br><span class="line"> 5 #define ll long long</span><br><span class="line"> 6 #define MAXN 1000020</span><br><span class="line"> 7 int n,a[5020],f[5020],k=0;</span><br><span class="line"> 8 void dfs(int rig,int x,int d)&#123;</span><br><span class="line"> 9     if(d==4)&#123;</span><br><span class="line">10         if(rig==x)&#123;</span><br><span class="line">11             k=1;</span><br><span class="line">12         &#125;</span><br><span class="line">13         return;</span><br><span class="line">14     &#125;</span><br><span class="line">15     dfs(rig,a[x],d+1);</span><br><span class="line">16 &#125;</span><br><span class="line">17 int main()&#123;</span><br><span class="line">18     cin&gt;&gt;n;</span><br><span class="line">19     for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">20         scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">21     &#125;</span><br><span class="line">22     for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">23         dfs(i,i,1);</span><br><span class="line">24         if(k==1) break;</span><br><span class="line">25     &#125;</span><br><span class="line">26     if(k==1) printf(&quot;YES\n&quot;);</span><br><span class="line">27     else&#123;</span><br><span class="line">28         printf(&quot;NO\n&quot;);</span><br><span class="line">29     &#125;</span><br><span class="line">30     return 0;</span><br><span class="line">31 &#125;</span><br></pre></td></tr></table></figure></code></pre>
<p>D</p>
<p>E <span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvMzIyL0U=">PPY的字符串<i class="fa fa-external-link-alt"></i></span></p>
<p>模拟，数组要开大一点。</p>
<p><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" /></p>
<pre><code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     1 #include&lt;iostream&gt;</span><br><span class="line">     2 #include&lt;cstdio&gt;</span><br><span class="line">     3 #include&lt;cstring&gt;</span><br><span class="line">     4 using namespace std;</span><br><span class="line">     5 #define MOD 10000019</span><br><span class="line">     6 #define ll long long</span><br><span class="line">     7 #define MAXN 1000020</span><br><span class="line">     8 int a[500000],b[500000],l=0;</span><br><span class="line">     9 int n,aa;</span><br><span class="line">    10 void fun()&#123;</span><br><span class="line">    11     int nl=0,cur=a[1],cnt=0;</span><br><span class="line">    12     for(int i=1;i&lt;=l;i++)&#123;</span><br><span class="line">    13         if(a[i]==cur)&#123;</span><br><span class="line">    14             cnt++;</span><br><span class="line">    15         &#125;</span><br><span class="line">    16         if((a[i+1]!=cur&amp;&amp;i&lt;l)||i==l)&#123;</span><br><span class="line">    17             b[++nl]=cnt;</span><br><span class="line">    18             b[++nl]=cur;</span><br><span class="line">    19             cnt=0;</span><br><span class="line">    20             cur=a[i+1];</span><br><span class="line">    21         &#125;</span><br><span class="line">    22     &#125;</span><br><span class="line">    23      </span><br><span class="line">    24     l=nl;</span><br><span class="line">    25 &#125;</span><br><span class="line">    26 int main()&#123;</span><br><span class="line">    27     cin&gt;&gt;aa&gt;&gt;n;</span><br><span class="line">    28      </span><br><span class="line">    29     for(int i=1;aa;i++)&#123;</span><br><span class="line">    30         a[i]=aa%10;</span><br><span class="line">    31         aa/=10    ;</span><br><span class="line">    32         l++;</span><br><span class="line">    33     &#125;</span><br><span class="line">    34     for(int i=1;i&lt;=l/2;i++)&#123;</span><br><span class="line">    35         swap(a[i],a[l-i+1]);</span><br><span class="line">    36     &#125;</span><br><span class="line">    37     /*for(int i=1;i&lt;=l;i++)&#123;</span><br><span class="line">    38         printf(&quot;%d&quot;,a[i]);</span><br><span class="line">    39     &#125;*/</span><br><span class="line">    40     for(int i=1;i&lt;=n-1;i++)&#123;</span><br><span class="line">    41         memset(b,0,sizeof(b));</span><br><span class="line">    42         fun();</span><br><span class="line">    43         for(int j=1;j&lt;=l;j++)&#123;</span><br><span class="line">    44             a[j]=b[j];</span><br><span class="line">    45         &#125;</span><br><span class="line">    46     &#125;</span><br><span class="line">    47     cout&lt;&lt;l&lt;&lt;&#x27; &#x27;;</span><br><span class="line">    48     for(int i=1;i&lt;=l;i++)&#123;</span><br><span class="line">    49         printf(&quot;%d&quot;,a[i]);</span><br><span class="line">    50     &#125;</span><br><span class="line">    51     cout&lt;&lt;endl;</span><br><span class="line">    52     return 0;</span><br><span class="line">    53 &#125;```</span><br><span class="line"></span><br><span class="line">E</span><br><span class="line"></span><br><span class="line">F [集训队脱单大法：这是一道只能由学姐我自己出数据的水题](https://ac.nowcoder.com/acm/contest/322/F)</span><br><span class="line"></span><br><span class="line">左边找最大值，右边找最大值。</span><br><span class="line"></span><br><span class="line">即使分成两半也让单身狗羡慕至极呢</span><br><span class="line"></span><br><span class="line">![](http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif)![](http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif)</span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure>
 1 #include&lt;iostream&gt;
 2 #include&lt;cstdio&gt;
 3 using namespace std;
 4 #define MOD 10000019
 5 #define ll long long
 6 #define MAXN 1000020
 7 int n,ans;
 8 int a[MAXN];
 9 int lm[MAXN],rm[MAXN];
10 int abss(int a)&#123;
11     return a&gt;0?a:-a;
12 &#125;
13 int main()&#123;
14     cin&gt;&gt;n;
15     for(int i=1;i&lt;=n;i++)&#123;
16         scanf(&quot;%d&quot;,&amp;a[i]);
17     &#125;
18     for(int i=1;i&lt;=n-1;i++)&#123;
19         lm[i]=max(lm[i-1],a[i]);
20     &#125;
21     for(int i=n-1;i&gt;=1;i--)&#123;
22         rm[i]=max(a[i+1],rm[i+1]);
23     &#125;
24     for(int i=1;i&lt;=n-1;i++)&#123;
25         ans=max(ans,abss(lm[i]-rm[i]));
26     &#125;
27     cout&lt;&lt;ans&lt;&lt;endl;
28     return 0;
29 &#125;```</code></pre>
<p>F</p>
<p>G <span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvMzIyL0c=">不想再WA了<i class="fa fa-external-link-alt"></i></span></p>
<p>DFS赋值写一遍，然后愉快地打表咯。。。</p>
<p><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" /></p>
<pre><code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     1 #include&lt;iostream&gt;</span><br><span class="line">     2 #include&lt;cstdio&gt;</span><br><span class="line">     3 using namespace std;</span><br><span class="line">     4 #define MOD 10000019</span><br><span class="line">     5 #define ll long long</span><br><span class="line">     6 #define MAXN 1000020</span><br><span class="line">     7 int ANS[20]=&#123;0,3,8,21,55,144,377,987,2584,6765,17711&#125;;</span><br><span class="line">     8 int T,n;</span><br><span class="line">     9 int main()&#123;</span><br><span class="line">    10     cin&gt;&gt;T;</span><br><span class="line">    11     while(T--)&#123;</span><br><span class="line">    12         cin&gt;&gt;n;</span><br><span class="line">    13         printf(&quot;%d\n&quot;,ANS[n]);</span><br><span class="line">    14     &#125;</span><br><span class="line">    15     return 0;</span><br><span class="line">    16 &#125;```</span><br><span class="line"></span><br><span class="line">G</span><br><span class="line"></span><br><span class="line">H [Ricky&#x27;s RealDan&#x27;s Ricky](https://ac.nowcoder.com/acm/contest/322/H)</span><br><span class="line"></span><br><span class="line">更新，RealDan拥有把偶数变成奇数的神奇能力，所以只要Ricky一次不能赢，就输了。</span><br><span class="line"></span><br><span class="line">当只有一堆且为偶数是为Ricky胜</span><br><span class="line"></span><br><span class="line">![](http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif)![](http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif)</span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure>
 1 #include&lt;iostream&gt;
 2 #include&lt;cstdio&gt;
 3 using namespace std;
 4 int T,n;
 5 int a[100020];
 6 int main()&#123;
 7     cin&gt;&gt;T;
 8     while(T--)&#123;
 9         scanf(&quot;%d&quot;,&amp;n);
10         for(int i=1;i&lt;=n;i++)&#123;
11             scanf(&quot;%d&quot;,&amp;a[i]); 
12         &#125; 
13         if(n==1&amp;&amp;a[1]%2==0)&#123;
14             cout&lt;&lt;&quot;Ricky is Winner&quot;&lt;&lt;endl;
15         &#125;
16         else&#123;
17             cout&lt;&lt;&quot;RealDan is Winner&quot;&lt;&lt;endl;
18         &#125;
19     &#125;
20     return 0;
21 &#125;```</code></pre>
<p>H</p>
<p>I <span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvMzIyL0k=">小A的期末作业<i class="fa fa-external-link-alt"></i></span></p>
<p>C++语言入门题。。。</p>
<p><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" /></p>
<pre><code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     1 #include&lt;iostream&gt;</span><br><span class="line">     2 #include&lt;cstdio&gt;</span><br><span class="line">     3 using namespace std;</span><br><span class="line">     4 #define MOD 10000019</span><br><span class="line">     5 #define ll long long</span><br><span class="line">     6 #define MAXN 1000020</span><br><span class="line">     7 int n;</span><br><span class="line">     8 int main()&#123;</span><br><span class="line">     9     cin&gt;&gt;n;</span><br><span class="line">    10     for(int i=1;i&lt;=n-1;i++)&#123;</span><br><span class="line">    11         for(int j=1;j&lt;=i-1;j++)&#123;</span><br><span class="line">    12             printf(&quot; &quot;);</span><br><span class="line">    13         &#125;</span><br><span class="line">    14         for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">    15             printf(&quot;*&quot;);</span><br><span class="line">    16         &#125;</span><br><span class="line">    17         cout&lt;&lt;endl;</span><br><span class="line">    18     &#125;</span><br><span class="line">    19     for(int i=1;i&lt;=n-1;i++)&#123;</span><br><span class="line">    20         printf(&quot; &quot;);</span><br><span class="line">    21     &#125;</span><br><span class="line">    22     for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">    23         printf(&quot;*&quot;);</span><br><span class="line">    24     &#125;</span><br><span class="line">    25     cout&lt;&lt;endl;</span><br><span class="line">    26     for(int i=n-1;i&gt;=1;i--)&#123;</span><br><span class="line">    27         for(int j=1;j&lt;=i-1;j++)&#123;</span><br><span class="line">    28             printf(&quot; &quot;);</span><br><span class="line">    29         &#125;</span><br><span class="line">    30         for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">    31             printf(&quot;*&quot;);</span><br><span class="line">    32         &#125;</span><br><span class="line">    33         cout&lt;&lt;endl;</span><br><span class="line">    34     &#125;</span><br><span class="line">    35     return 0;</span><br><span class="line">    36 &#125;```</span><br><span class="line"></span><br><span class="line">I</span><br><span class="line"></span><br><span class="line">J [怪盗基德 &amp; 月之瞳宝石](https://ac.nowcoder.com/acm/contest/322/J)</span><br><span class="line"></span><br><span class="line">二分，这是伟大玄学的胜利。</span><br><span class="line"></span><br><span class="line">![](http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif)![](http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif)</span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure>
 1 #include&lt;iostream&gt;
 2 #include&lt;cstdio&gt;
 3 #include&lt;cstring&gt;
 4 #include&lt;queue&gt;
 5 #include&lt;string&gt;
 6 #include&lt;algorithm&gt;
 7 using namespace std;
 8 #define MOD 10000019
 9 #define ll long long
10 #define MAXN 1000020
11 int n,m;
12 int a[100020],b[100020];
13 bool fun(ll s)&#123;
14     int cur=1;
15     ll xl=b[1]-s,xr=b[1]+s;
16     for(int i=1;i&lt;=n;i++)&#123;
17         if(a[i]&lt;xl)&#123;
18             return false;
19         &#125;
20         if(a[i]&gt;xr)&#123;
21             while(a[i]&gt;xr||a[i]&lt;xl)&#123;
22                 cur++;
23                 xl=b[cur]-s;
24                 xr=b[cur]+s;
25                 if(cur&gt;m)&#123;
26                     return false;
27                 &#125;
28             &#125;
29         &#125;
30     &#125;
31     return true;
32 &#125;
33 int main()&#123;
34     cin&gt;&gt;n&gt;&gt;m;
35     for(int i=1;i&lt;=n;i++)&#123;
36         scanf(&quot;%d&quot;,&amp;a[i]);
37     &#125;
38     for(int j=1;j&lt;=m;j++)&#123;
39         scanf(&quot;%d&quot;,&amp;b[j]);
40     &#125;
41     sort(a+1,a+1+n);
42     sort(b+1,b+1+m);
43     ll l=0,r=4e9+1;
44     while(l&lt;r)&#123;
45         ll mid=(l+r)/2;
46         if(fun(mid))&#123;
47             r=mid;
48         &#125;
49         else&#123;
50             l=mid+1;
51         &#125;
52     &#125;
53     printf(&quot;%lld\n&quot;,l);
54 //  printf(&quot;%d&quot;,fun(4));
55     return 0;
56 &#125;```</code></pre>
<p>J</p>
<p>K <span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvMzIyL0s=">正方体<i class="fa fa-external-link-alt"></i></span></p>
<p>第一遍不知道为什么WA，修改了一下1，3行赋值就对了，图形限定这么严格也是入门题了</p>
<p><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" /></p>
<pre><code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">     1 #include&lt;iostream&gt;</span><br><span class="line">     2 #include&lt;cstdio&gt;</span><br><span class="line">     3 #include&lt;cstring&gt;</span><br><span class="line">     4 using namespace std;</span><br><span class="line">     5 #define MOD 10000019</span><br><span class="line">     6 #define ll long long</span><br><span class="line">     7 #define MAXN 1000020</span><br><span class="line">     8 ll a[10][10];</span><br><span class="line">     9 int T;</span><br><span class="line">    10 int main()&#123;</span><br><span class="line">    11     cin&gt;&gt;T;</span><br><span class="line">    12     for(int i=1;i&lt;=T;i++)&#123;</span><br><span class="line">    13         memset(a,0,sizeof(a));</span><br><span class="line">    14         ll x=0,y=0;</span><br><span class="line">    15         for(int j=1;j&lt;=3;j++)&#123;</span><br><span class="line">    16             for(int k=1;k&lt;=4;k++)&#123;</span><br><span class="line">    17                 scanf(&quot;%lld&quot;,&amp;a[j][k]);</span><br><span class="line">    18                 if(j==1&amp;&amp;a[j][k])&#123;</span><br><span class="line">    19                     x=a[j][k];</span><br><span class="line">    20                 &#125;</span><br><span class="line">    21                 if(j==3&amp;&amp;a[j][k])&#123;</span><br><span class="line">    22                     y=a[j][k];</span><br><span class="line">    23                 &#125;</span><br><span class="line">    24             &#125;</span><br><span class="line">    25         &#125;</span><br><span class="line">    26         if(x==y&amp;&amp;a[2][1]==a[2][3]&amp;&amp;a[2][2]==a[2][4])&#123;</span><br><span class="line">    27             printf(&quot;Yes!\n&quot;);</span><br><span class="line">    28         &#125;</span><br><span class="line">    29         else&#123;</span><br><span class="line">    30             printf(&quot;No!\n&quot;);</span><br><span class="line">    31         &#125;</span><br><span class="line">    32         if(i%50==0)cout&lt;&lt;endl;</span><br><span class="line">    33     &#125;</span><br><span class="line">    34     return 0;</span><br><span class="line">    35 &#125;```</span><br><span class="line"></span><br><span class="line">K</span><br><span class="line"></span><br><span class="line">L [简单的分数](https://ac.nowcoder.com/acm/contest/322/L)</span><br><span class="line"></span><br><span class="line">直接想到了GCD，也算是个模拟吧。</span><br><span class="line"></span><br><span class="line">![](http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif)![](http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif)</span><br><span class="line"></span><br><span class="line">    </span><br></pre></td></tr></table></figure>
 1 #include&lt;iostream&gt;
 2 #include&lt;cstdio&gt;
 3 using namespace std;
 4 #define MOD 10000019
 5 #define ll long long
 6 #define MAXN 1000020
 7 int T,op,a,b,c,d,e,f;
 8 int gcd(int a,int b)&#123;
 9     return b==0?a:gcd(b,a%b);
10 &#125;
11 int main()&#123;
12     cin&gt;&gt;T;
13     while(T--)&#123;
14         cin&gt;&gt;op&gt;&gt;a&gt;&gt;b&gt;&gt;c&gt;&gt;d;
15         if(op==1)&#123;
16             e=a*d+b*c;
17             f=b*d;
18             int k=gcd(e,f);
19             e/=k;
20             f/=k;
21             cout&lt;&lt;e&lt;&lt;&#39;/&#39;&lt;&lt;f&lt;&lt;endl;
22         &#125;
23         else&#123;
24             e=a*d-b*c;
25             f=b*d;
26             int kkkkk=0;
27             if(e&lt;0)&#123;
28                 e=-e;
29                 kkkkk=1;
30             &#125;
31             int k=gcd(e,f);
32             e/=k;
33             f/=k;
34             if(kkkkk==0) cout&lt;&lt;e&lt;&lt;&#39;/&#39;&lt;&lt;f&lt;&lt;endl;
35             else&#123;
36                 cout&lt;&lt;&#39;-&#39;&lt;&lt;e&lt;&lt;&#39;/&#39;&lt;&lt;f&lt;&lt;endl;
37             &#125;
38         &#125;
39     &#125;
40     return 0;
41 &#125;```</code></pre>
<p>L</p>
<p>M <span class="exturl" data-url="aHR0cHM6Ly9hYy5ub3djb2Rlci5jb20vYWNtL2NvbnRlc3QvMzIyL00=">HJ浇花<i class="fa fa-external-link-alt"></i></span></p>
<p>/*带的树状数组板子发现是坏的-&gt;_-&gt;</p>
<p>然后从左到右算改了N发还是不对。。。*/</p>
<p>emmmm没有啥树状数组，从左到右扫一遍看成爬山，用一个数组cnt[i]来统计在i位置向上还是向下，对于每组l，r，cnt[l]++，cnt[r+1]--，从0扫到max(r)+1，对于每个cnt[i]不为0的i，用i和上一个cnt不为0的位置和当前层数更新ans数组，然后更新当前层数。</p>
<p><img src="http://images.cnblogs.com/OutliningIndicators/ContractedBlock.gif" /><img src="http://images.cnblogs.com/OutliningIndicators/ExpandedBlockStart.gif" /></p>
<pre><code>```
 1 #include&lt;iostream&gt;
 2 #include&lt;cstdio&gt;
 3 using namespace std;
 4 int n,cnt[1000020],last,now,rmx,ans[1000020]; 
 5 int main()&#123;
 6     cin&gt;&gt;n;
 7     int l,r;
 8     for(int i=1;i&lt;=n;i++)&#123;
 9         scanf(&quot;%d%d&quot;,&amp;l,&amp;r);
10         rmx=max(rmx,r);
11         cnt[l]++;
12         cnt[r+1]--;
13     &#125;
14     for(int i=0;i&lt;=rmx+1;i++)&#123;
15         if(cnt[i]!=0)&#123;
16             ans[now]+=(i-last);
17             last=i;
18             now+=cnt[i];
19         &#125;
20     &#125; 
21     cout&lt;&lt;ans[1];
22     for(int i=2;i&lt;=n;i++)&#123;
23         printf(&quot; %d&quot;,ans[i]);
24     &#125;
25     return 0;
26 &#125;```</code></pre>
<p>M</p>
]]></content>
      <categories>
        <category>程序设计竞赛</category>
        <category>ACM比赛/总结</category>
      </categories>
  </entry>
</search>
