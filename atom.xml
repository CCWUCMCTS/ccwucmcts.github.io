<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CCWUCMCTS&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-11-11T02:39:40.691Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>CCWUCMCTS</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2021/11/10/hello-world/"/>
    <id>http://example.com/2021/11/10/hello-world/</id>
    <published>2021-11-10T07:16:34.023Z</published>
    <updated>2021-11-11T02:39:40.691Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><span id="more"></span><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;quick-start&quot;&gt;Quick Start&lt;/h2&gt;
&lt;h3 id=&quot;create-a-new-post&quot;&gt;Create a new post&lt;/h3&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&amp;quot;My New Post&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>1765 谷歌的恐龙</title>
    <link href="http://example.com/2020/02/20/1765%20%E8%B0%B7%E6%AD%8C%E7%9A%84%E6%81%90%E9%BE%99/"/>
    <id>http://example.com/2020/02/20/1765%20%E8%B0%B7%E6%AD%8C%E7%9A%84%E6%81%90%E9%BE%99/</id>
    <published>2020-02-20T08:47:00.000Z</published>
    <updated>2021-11-11T03:00:53.687Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>把整个游戏简化为，每次生成一个[0,n)的随机数，如果这个随机数和给出的m个数字中的其中一个数字相等，那么就停止生成随机数，否则继续生成，求出所有生成的数的和的期望。</p><h2 id="solution">Solution</h2><p><span class="math display">\[E = \sum_{i=0}^{n-1} p_i \times(i+[flag_i]\times E), p_i = \frac{1}{n}, 如果i不在m个数中, flag_i = 1, 否则为0。\]</span></p><p>化简为<span class="math display">\[E = \frac{n\times(n-1)}{2\times m}\]</span> ## Code</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;deque&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line">const int mod=998244353;</span><br><span class="line">int mo(ll a,int p)&#123;</span><br><span class="line">    return a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line">inline int rd() &#123;</span><br><span class="line">    int x = 0, f = 1;</span><br><span class="line">    char ch;</span><br><span class="line">    while (ch &lt; &#x27;0&#x27; || ch &gt; &#x27;9&#x27;) &#123;</span><br><span class="line">        if (ch == &#x27;-&#x27;)f = -1;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    while (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123;</span><br><span class="line">        x = x * 10 + ch - &#x27;0&#x27;;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    return f * x;</span><br><span class="line">&#125;</span><br><span class="line">ll n,m,x;</span><br><span class="line">int main()&#123;</span><br><span class="line">    //io_opt;</span><br><span class="line">    scanf(&quot;%lld%lld&quot;,&amp;n,&amp;m);</span><br><span class="line">    </span><br><span class="line">    printf(&quot;%.6f\n&quot;,n*(n-1)/2.0/m);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;把整个游戏简化为，每次生成一个[0,n)的随机数，如果这个随机数和给出的m个数字中的其中一个数字相等，那么就停止生成随机数，否则继续生成，求出所有生成的数的和的期望。&lt;/p&gt;
&lt;h2 id=&quot;solution&quot;</summary>
      
    
    
    
    <category term="概率论" scheme="http://example.com/categories/%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
    
    
  </entry>
  
  <entry>
    <title>2504 是子序列的个数</title>
    <link href="http://example.com/2020/02/20/2504%20%E6%98%AF%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%AA%E6%95%B0/"/>
    <id>http://example.com/2020/02/20/2504%20%E6%98%AF%E5%AD%90%E5%BA%8F%E5%88%97%E7%9A%84%E4%B8%AA%E6%95%B0/</id>
    <published>2020-02-20T05:09:00.000Z</published>
    <updated>2020-02-20T09:13:20.478Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>小b有一个字符串S和n个字符串words[1...n]，现在她想知道有多少个i满足words[i]是S的子序列。</p><p>S的长度≤50000，1≤n≤5000，words[i]长度≤50.</p><p>样例解释</p><p>a，acd，ace都是abcde的子序列，但bb不是。</p><h2 id="solution">Solution</h2><p>存一下s各个字母的位置，比较时二分查找。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line">const int mod=998244353;</span><br><span class="line">int mo(ll a,int p)&#123;</span><br><span class="line">    return a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line">inline int rd() &#123;</span><br><span class="line">    int x = 0, f = 1;</span><br><span class="line">    char ch;</span><br><span class="line">    while (ch &lt; &#x27;0&#x27; || ch &gt; &#x27;9&#x27;) &#123;</span><br><span class="line">        if (ch == &#x27;-&#x27;)f = -1;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    while (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123;</span><br><span class="line">        x = x * 10 + ch - &#x27;0&#x27;;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    return f * x;</span><br><span class="line">&#125;</span><br><span class="line">int ans,n;</span><br><span class="line">string s,x;</span><br><span class="line">int a[27][500020];</span><br><span class="line">bool fun(string &amp;cur)&#123;</span><br><span class="line">    //cout&lt;&lt;cur&lt;&lt;&quot;:\n&quot;;</span><br><span class="line">    int las=0,l,r,mid,anss;</span><br><span class="line">    for(char i : cur)&#123;</span><br><span class="line">        l=1,r=a[i-&#x27;a&#x27;][0],anss=0;</span><br><span class="line">        while(l&lt;=r)&#123;</span><br><span class="line">            mid=l+r&gt;&gt;1;</span><br><span class="line">            if(a[i-&#x27;a&#x27;][mid]&gt;las)&#123;</span><br><span class="line">                r=mid-1;</span><br><span class="line">                anss=mid;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                l=mid+1;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(!anss)&#123;</span><br><span class="line">            return false;</span><br><span class="line">        &#125;</span><br><span class="line">        las=a[i-&#x27;a&#x27;][anss];//cout&lt;&lt;las&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    return true;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;s&gt;&gt;n;</span><br><span class="line">    for(int i=0;i&lt;s.size();i++)&#123;</span><br><span class="line">        a[s[i]-&#x27;a&#x27;][++a[s[i]-&#x27;a&#x27;][0]]=i+1;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        if(fun(x))&#123;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;小b有一个字符串S和n个字符串words[1...n]，现在她想知道有多少个i满足words[i]是S的子序列。&lt;/p&gt;
&lt;p&gt;S的长度≤50000，1≤n≤5000，words[i]长度≤50.&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="字符串" scheme="http://example.com/categories/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
    
  </entry>
  
  <entry>
    <title>51Nod2386 分则能成</title>
    <link href="http://example.com/2020/01/22/51Nod2386%20%E5%88%86%E5%88%99%E8%83%BD%E6%88%90/"/>
    <id>http://example.com/2020/01/22/51Nod2386%20%E5%88%86%E5%88%99%E8%83%BD%E6%88%90/</id>
    <published>2020-01-22T03:58:00.000Z</published>
    <updated>2020-02-18T12:59:47.910Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>牛牛刚开始有一个正整数n。 每次操作牛牛可以选择一个自己有的数字x，把x分为两正整数y和z，需满足x=y+z，然后获得y*z的收益。 （当然，在这个过程中，牛牛会失去x这个数字，并且获得y和z这2个数字。）</p><p>牛牛一共可以分k次，牛牛希望最大化这k次的收益之和。 因为分割的结果y和z是正整数，所以选择的x必须&gt;=2。</p><p>对于100%的数据，1 &lt;= k &lt; n &lt;= 10^9 对于40%的数据，1 &lt;= k &lt; n &lt;= 10 对于70%的数据，1 &lt;= k &lt; n &lt;= 100</p><h2 id="solution">Solution</h2><p>问题等价于把n拆分成k+1份，然后我们设为a1，a2，...，ak+1，发现最后答案为两两相乘，n<sup>2=(a1+a2+a3...+ak+1)</sup>2=ans+2sum(ai^2)，求ans最大即为求平方和最小，可以假设2x=c，然后用两个x和(x-1)、(x+1)平方和相减，发现前者始终是最小的，于是转化为接近分组。（具体数学上好像有相关的，不过没带回书也不知道是啥）</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">typedef long long ll;</span><br><span class="line">ll n,k;</span><br><span class="line">int main()&#123;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">k++;</span><br><span class="line">int d=n/k;</span><br><span class="line">ll sum=(k-n%k)*d*d+n%k*(d+1)*(d+1);</span><br><span class="line">ll ans=(n*n-sum)/2;</span><br><span class="line">cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;牛牛刚开始有一个正整数n。 每次操作牛牛可以选择一个自己有的数字x，把x分为两正整数y和z，需满足x=y+z，然后获得y*z的收益。 （当然，在这个过程中，牛牛会失去x这个数字，并且获得y和z这2个数字。）&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod1179 最大的最大公约数</title>
    <link href="http://example.com/2019/11/02/51Nod1179%20%E6%9C%80%E5%A4%A7%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0/"/>
    <id>http://example.com/2019/11/02/51Nod1179%20%E6%9C%80%E5%A4%A7%E7%9A%84%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0/</id>
    <published>2019-11-02T05:51:00.000Z</published>
    <updated>2020-02-18T12:59:47.912Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>给出N个正整数，找出N个数两两之间最大公约数的最大值。例如：N = 4，4个数为：9 15 25 16，两两之间最大公约数的最大值是15同25的最大公约数5。</p><h2 id="solution">Solution</h2><p>把每个数所有因数搞出来，如果第二次出现就停止。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line">const int mod=998244353;</span><br><span class="line">int mo(ll a,int p)&#123;</span><br><span class="line">    return a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line">inline int rd() &#123;</span><br><span class="line">    int x = 0, f = 1;</span><br><span class="line">    char ch;</span><br><span class="line">    while (ch &lt; &#x27;0&#x27; || ch &gt; &#x27;9&#x27;) &#123;</span><br><span class="line">        if (ch == &#x27;-&#x27;)f = -1;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    while (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123;</span><br><span class="line">        x = x * 10 + ch - &#x27;0&#x27;;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    return f * x;</span><br><span class="line">&#125;</span><br><span class="line">int cnt=168;</span><br><span class="line">int pri[200]=&#123;0,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,</span><br><span class="line">        53,59,61,67,71,73,79,83,89,97,</span><br><span class="line">        101,103,107,109,113,127,131,137,139,149,</span><br><span class="line">        151,157,163,167,173,179,181,191,193,197,199,</span><br><span class="line">        211,223,227,229,233,239,241,</span><br><span class="line">        251,257,263,269,271,277,281,283,293,</span><br><span class="line">        307,311,313,317,331,337,347,349,</span><br><span class="line">        353,359,367,373,379,383,389,397,</span><br><span class="line">        401,409,419,421,431,433,439,443,449,</span><br><span class="line">        457,461,463,467,479,487,491,499,</span><br><span class="line">        503,509,521,523,541,547,</span><br><span class="line">        557,563,569,571,577,587,593,599,</span><br><span class="line">        601,607,613,617,619,631,641,643,647,</span><br><span class="line">        653,659,661,673,677,683,691,</span><br><span class="line">        701,709,719,727,733,739,743,</span><br><span class="line">        751,757,761,769,773,787,797,</span><br><span class="line">        809,811,821,823,827,829,839,</span><br><span class="line">        853,857,859,863,877,881,883,887,</span><br><span class="line">        907,911,919,929,937,941,947,</span><br><span class="line">        953,967,971,977,983,991,997&#125;;</span><br><span class="line"></span><br><span class="line">int a[50020][30];</span><br><span class="line">int ct[50020][30];</span><br><span class="line">int n,tmp,mx;</span><br><span class="line">int num[50020];</span><br><span class="line">int ans[1000020];</span><br><span class="line">inline int speed(int a,int b)&#123;</span><br><span class="line">    int cur=a,anss=1;</span><br><span class="line">    while(b)&#123;</span><br><span class="line">        if(b&amp;1) anss=anss*cur;</span><br><span class="line">        cur=cur*cur;</span><br><span class="line">        b&gt;&gt;=1;</span><br><span class="line">    &#125;</span><br><span class="line">    return anss;</span><br><span class="line">&#125;</span><br><span class="line">void dfs(int t,int cur,int anx)&#123;</span><br><span class="line">    if(cur==a[t][0]+1)&#123;</span><br><span class="line">        ans[anx]++;</span><br><span class="line">        if(ans[anx]&gt;1) mx=max(mx,anx);</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=0;i&lt;=ct[t][cur];i++)&#123;</span><br><span class="line">        dfs(t,cur+1,anx*speed(a[t][cur],i));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    //io_opt;</span><br><span class="line">    scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;num[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    sort(num+1,num+1+n);</span><br><span class="line">    for(int i=n;i&gt;=1;i--)&#123;</span><br><span class="line">        tmp=num[i];</span><br><span class="line">        for(int j=1;j&lt;=cnt;j++)&#123;</span><br><span class="line">            if(num[i]%pri[j]==0)&#123;</span><br><span class="line">                a[i][++a[i][0]]=pri[j];</span><br><span class="line">            &#125;</span><br><span class="line">            while(num[i]%pri[j]==0)&#123;</span><br><span class="line">                ct[i][a[i][0]]++;</span><br><span class="line">                num[i]/=pri[j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        if(num[i]&gt;1)&#123;</span><br><span class="line">            a[i][++a[i][0]]=num[i];</span><br><span class="line">            ct[i][a[i][0]]++;</span><br><span class="line">        &#125;</span><br><span class="line">        if(mx&gt;=tmp)&#123;</span><br><span class="line">            break;</span><br><span class="line">        &#125;dfs(i,1,1);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%d\n&quot;,mx);</span><br><span class="line"></span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;给出N个正整数，找出N个数两两之间最大公约数的最大值。例如：N = 4，4个数为：9 15 25 16，两两之间最大公约数的最大值是15同25的最大公约数5。&lt;/p&gt;
&lt;h2 id=&quot;solution&quot;&gt;Sol</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod1403 有趣的堆栈</title>
    <link href="http://example.com/2019/11/02/51Nod1403%20%E6%9C%89%E8%B6%A3%E7%9A%84%E5%A0%86%E6%A0%88/"/>
    <id>http://example.com/2019/11/02/51Nod1403%20%E6%9C%89%E8%B6%A3%E7%9A%84%E5%A0%86%E6%A0%88/</id>
    <published>2019-11-02T05:47:00.000Z</published>
    <updated>2020-02-18T12:59:47.914Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>大家都熟悉堆栈操作。一个堆栈一般有两种操作，push和pop。假设所有操作都是合法的并且最终堆栈为空。我们可以有很多方法记录堆栈的操作， （1） 对每个pop操作，我们记录它之前一共有多少个push操作。 （2） 对每个pop操作，我们记录这个被Pop的元素曾经被压上了几个。 例如：操作push, push, pop, push, push, pop, push, pop, pop, pop 用第一种方法 记录为 2, 4, 5, 5, 5 用第二种方法 记录为 0, 0, 0, 2, 4 这两种记录方法可以互相转化，我们的问题是，给定第二种记录方法的序列，请求出第一种记录方法的序列。</p><h2 id="solution">Solution</h2><p>第i个位置变成i，然后扫到几，就在他前面几个数上加1，我也不知道为啥，推出来的。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">//#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">//using namespace std;</span><br><span class="line">const int mod=998244353;</span><br><span class="line">int mo(ll a,int p)&#123;</span><br><span class="line">    return a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">inline int rd() &#123;</span><br><span class="line">    int x = 0, f = 1;</span><br><span class="line">    char ch;</span><br><span class="line">    while (ch &lt; &#x27;0&#x27; || ch &gt; &#x27;9&#x27;) &#123;</span><br><span class="line">        if (ch == &#x27;-&#x27;)f = -1;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    while (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123;</span><br><span class="line">        x = x * 10 + ch - &#x27;0&#x27;;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    return f * x;</span><br><span class="line">&#125;</span><br><span class="line">int n,x;</span><br><span class="line">int f[1000020];</span><br><span class="line">char pbuf[100000],*pp=pbuf;</span><br><span class="line">void push(const char c) &#123;</span><br><span class="line">    if(pp-pbuf==100000) fwrite(pbuf,1,100000,stdout),pp=pbuf;</span><br><span class="line">    *pp++=c;</span><br><span class="line">&#125;</span><br><span class="line">void write(int x) &#123;</span><br><span class="line">    static int sta[35];</span><br><span class="line">    int top=0;</span><br><span class="line">    do&#123;sta[top++]=x%10,x/=10;&#125;while(x);</span><br><span class="line">    while(top) push(sta[--top]+&#x27;0&#x27;);</span><br><span class="line">    push(&#x27; &#x27;);</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    //io_opt;</span><br><span class="line">    n=rd();</span><br><span class="line">    for(register int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        x=rd();</span><br><span class="line">        if(x)&#123;</span><br><span class="line">            f[i-x-1]++;</span><br><span class="line">            f[i-1]--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    register int las=0;</span><br><span class="line">    for(register int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        las=1+las+f[i-1];</span><br><span class="line">        write(las);</span><br><span class="line">    &#125;</span><br><span class="line">    fwrite(pbuf,1,pp-pbuf,stdout);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;大家都熟悉堆栈操作。一个堆栈一般有两种操作，push和pop。假设所有操作都是合法的并且最终堆栈为空。我们可以有很多方法记录堆栈的操作， （1） 对每个pop操作，我们记录它之前一共有多少个push操作。 （2）</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod2676 众里寻花</title>
    <link href="http://example.com/2019/11/02/51Nod2676%20%E4%BC%97%E9%87%8C%E5%AF%BB%E8%8A%B1/"/>
    <id>http://example.com/2019/11/02/51Nod2676%20%E4%BC%97%E9%87%8C%E5%AF%BB%E8%8A%B1/</id>
    <published>2019-11-02T05:33:00.000Z</published>
    <updated>2020-02-18T12:59:47.916Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>有𝑛个彩灯每个彩灯有一种颜色𝑐𝑜𝑙𝑖（彩灯从1到n标号），有𝑚根细线将它们连接在一起。你想用这些彩灯作出一朵美丽的花，进一步说你想从这𝑚根细线中保留𝑛−1根，且需要保证所有彩灯是连通在一起的。你希望这朵花五彩斑斓，因此你想要连接同颜色彩灯的细线越少越好。请问这个最小值是多少？</p><p>数据范围：</p><p>2≤𝑛≤100,1≤𝑚≤200,1≤𝑐𝑜𝑙𝑖≤𝑛</p><h2 id="solution">Solution</h2><p>连接同颜色的是1，否则为0，然后最小生成树。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line">const int mod=998244353;</span><br><span class="line">int mo(ll a,int p)&#123;</span><br><span class="line">    return a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line">inline int rd() &#123;</span><br><span class="line">    int x = 0, f = 1;</span><br><span class="line">    char ch;</span><br><span class="line">    while (ch &lt; &#x27;0&#x27; || ch &gt; &#x27;9&#x27;) &#123;</span><br><span class="line">        if (ch == &#x27;-&#x27;)f = -1;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    while (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123;</span><br><span class="line">        x = x * 10 + ch - &#x27;0&#x27;;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    return f * x;</span><br><span class="line">&#125;</span><br><span class="line">int n,m,f[120],ans;</span><br><span class="line">int a[120];</span><br><span class="line">int find(int x)&#123;</span><br><span class="line">    return f[x]==0?x:f[x]=find(f[x]);</span><br><span class="line">&#125;</span><br><span class="line">struct E&#123;</span><br><span class="line">    int u,v,w;</span><br><span class="line">&#125;e[220];;</span><br><span class="line">int cmp(E x,E y)&#123;</span><br><span class="line">    return x.w&lt;y.w;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    int x,y;</span><br><span class="line">    for(int i=1;i&lt;=m;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line">        if(a[x]==a[y])&#123;</span><br><span class="line">            e[i]=(E)&#123;x,y,1&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            e[i]=(E)&#123;x,y,0&#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sort(e+1,e+1+m,cmp);</span><br><span class="line">    int cnt=0;</span><br><span class="line">    for(int i=1;i&lt;=m;i++)&#123;</span><br><span class="line">        //cout&lt;&lt;e[i].w&lt;&lt;endl;</span><br><span class="line">        int u=find(e[i].u),v=find(e[i].v);</span><br><span class="line">        if(u!=v)&#123;</span><br><span class="line">            f[u]=v;</span><br><span class="line">            cnt++;</span><br><span class="line">            if(e[i].w) ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        if(cnt==n-1) break;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;有𝑛个彩灯每个彩灯有一种颜色𝑐𝑜𝑙𝑖（彩灯从1到n标号），有𝑚根细线将它们连接在一起。你想用这些彩灯作出一朵美丽的花，进一步说你想从这𝑚根细线中保留𝑛−1根，且需要保证所有彩灯是连通在一起的。你希</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod2602 树的直径</title>
    <link href="http://example.com/2019/10/29/51Nod2602%20%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/"/>
    <id>http://example.com/2019/10/29/51Nod2602%20%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/</id>
    <published>2019-10-29T04:23:00.000Z</published>
    <updated>2020-02-18T12:59:47.920Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>一棵树的直径就是这棵树上存在的最长路径。现在有一棵n个节点的树，现在想知道这棵树的直径包含的边的个数是多少？</p><h2 id="solution">Solution</h2><p>随便找一个点，找最远的，再找新的点最远的。</p><p>当然我瞎搞的树状dp，子树分支最大的和次大的加起来就行。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line">const int mod=998244353;</span><br><span class="line">int mo(ll a,int p)&#123;</span><br><span class="line">    return a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line">inline int rd() &#123;</span><br><span class="line">    int x = 0, f = 1;</span><br><span class="line">    char ch;</span><br><span class="line">    while (ch &lt; &#x27;0&#x27; || ch &gt; &#x27;9&#x27;) &#123;</span><br><span class="line">        if (ch == &#x27;-&#x27;)f = -1;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    while (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123;</span><br><span class="line">        x = x * 10 + ch - &#x27;0&#x27;;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    return f * x;</span><br><span class="line">&#125;</span><br><span class="line">int n,ans;</span><br><span class="line">struct E&#123;</span><br><span class="line">    int u,v,nex;</span><br><span class="line">&#125;e[200020];</span><br><span class="line">int g[100020];</span><br><span class="line">int f[100020];</span><br><span class="line">int dfs(int x)&#123;</span><br><span class="line">    int mx1=0,mx2=0;</span><br><span class="line">    for(int i=g[x];i&gt;0;i=e[i].nex)&#123;</span><br><span class="line">        if(!f[e[i].v])&#123;</span><br><span class="line">            f[e[i].v]=1;</span><br><span class="line">            int d=dfs(e[i].v);</span><br><span class="line">            f[e[i].v]=0;</span><br><span class="line">            if(!mx1)&#123;</span><br><span class="line">                mx1=d;</span><br><span class="line">            &#125;</span><br><span class="line">            else if(!mx2)&#123;</span><br><span class="line">                mx2=d;</span><br><span class="line">                if(mx2&gt;mx1) swap(mx1,mx2);</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                if(d&gt;mx2) mx2=d;</span><br><span class="line">                if(mx2&gt;mx1) swap(mx1,mx2);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans=max(ans,mx1+mx2+1);</span><br><span class="line">    if(!mx1&amp;&amp;!mx2)&#123;</span><br><span class="line">        return 1;</span><br><span class="line">    &#125;</span><br><span class="line">    return mx1+1;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    //io_opt;</span><br><span class="line">    n=rd();</span><br><span class="line">    int x,y;</span><br><span class="line">    for(int i=1;i&lt;=n-1;i++)&#123;</span><br><span class="line">        x=rd(),y=rd();</span><br><span class="line">        e[i]=(E)&#123;x,y,g[x]&#125;;g[x]=i;</span><br><span class="line">        e[i+n-1]=(E)&#123;y,x,g[y]&#125;;g[y]=i+n-1;</span><br><span class="line">    &#125;</span><br><span class="line">    f[1]=1;</span><br><span class="line">    dfs(1);</span><br><span class="line">    printf(&quot;%d\n&quot;,ans-1);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;一棵树的直径就是这棵树上存在的最长路径。现在有一棵n个节点的树，现在想知道这棵树的直径包含的边的个数是多少？&lt;/p&gt;
&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;随便找一个点，找最远</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod2680 争渡</title>
    <link href="http://example.com/2019/10/29/51Nod2680%20%E4%BA%89%E6%B8%A1/"/>
    <id>http://example.com/2019/10/29/51Nod2680%20%E4%BA%89%E6%B8%A1/</id>
    <published>2019-10-29T04:20:00.000Z</published>
    <updated>2020-02-18T12:59:47.923Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>人生如逆水行舟，不进则退。你一生中有𝑛个阶段，每个阶段有一个状态下限𝐿𝑖，也有一个状态上限𝑅𝑖，你想规划你的一生中各阶段的状态值，使得你的状态在𝑛个阶段中始终在变好（严格递增）。请你计算有多少种不同的人生规划。由于答案较大，只需输出答案对998244353取余的结果</p><p>数据范围：1≤𝑛≤200,1≤𝐿𝑖≤𝑅𝑖≤104</p><h2 id="solution">Solution</h2><p>解法请购买，这里谈一点优化。</p><p>反正多余的也没啥用。</p><p>对于下限l，如果前一个大，当前的可以修改为前一个。（升序）</p><p>对于上限r，如果后一个小，当前的可以修改为后一个。（降序）</p><p>对于每个i，求j=l[i]的值，即求前面i-1，j小于l[i]的和时，从l[i-1]开始求。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">//#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">//using namespace std;</span><br><span class="line">const int mod=998244353;</span><br><span class="line">int mo(ll a,int p)&#123;</span><br><span class="line">    return a&gt;=p?a%p:a;</span><br><span class="line">&#125;</span><br><span class="line">inline int rd() &#123;</span><br><span class="line">    int x = 0, f = 1;</span><br><span class="line">    char ch;</span><br><span class="line">    while (ch &lt; &#x27;0&#x27; || ch &gt; &#x27;9&#x27;) &#123;</span><br><span class="line">        if (ch == &#x27;-&#x27;)f = -1;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    while (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123;</span><br><span class="line">        x = x * 10 + ch - &#x27;0&#x27;;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    return f * x;</span><br><span class="line">&#125;</span><br><span class="line">int n,sum;</span><br><span class="line">int l[220],r[220];</span><br><span class="line">int f[220][10020];</span><br><span class="line">inline int min(int a,int b)&#123;</span><br><span class="line">    return a&lt;b?a:b;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    //io_opt;</span><br><span class="line">    n=rd();</span><br><span class="line">    f[0][0]=1;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        l[i]=rd();</span><br><span class="line">        r[i]=rd();</span><br><span class="line">        if(l[i]&lt;l[i-1]) l[i]=l[i-1];</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=n;i&gt;=2;i--)&#123;</span><br><span class="line">        if(r[i]&lt;r[i-1]) r[i-1]=r[i];</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        for(int j=l[i-1];j&lt;l[i];j++) f[i][l[i]]=mo(f[i-1][j]+f[i][l[i]],mod);</span><br><span class="line">        for(int j=l[i]+1;j&lt;=r[i];j++)&#123;</span><br><span class="line">            f[i][j]=mo((ll)f[i-1][j-1]+f[i][j-1],mod);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=l[n];i&lt;=r[n];i++)&#123;</span><br><span class="line">        sum=mo((ll)sum+f[n][i],mod);</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%d\n&quot;,sum);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;人生如逆水行舟，不进则退。你一生中有𝑛个阶段，每个阶段有一个状态下限𝐿𝑖，也有一个状态上限𝑅𝑖，你想规划你的一生中各阶段的状态值，使得你的状态在𝑛个阶段中始终在变好（严格递增）。请你计算有多少种不同的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod2671 平衡环</title>
    <link href="http://example.com/2019/10/29/51Nod2671%20%E5%B9%B3%E8%A1%A1%E7%8E%AF/"/>
    <id>http://example.com/2019/10/29/51Nod2671%20%E5%B9%B3%E8%A1%A1%E7%8E%AF/</id>
    <published>2019-10-29T04:19:00.000Z</published>
    <updated>2020-02-18T12:59:47.926Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>给定一棵𝑛个点的树，每条边有一个边权，边权只可能是4或7。你想在树上选择两个没有直接连边的点，并在这两点间加一条边权为4或7的连边。很显然，树上出现一个环，如果这个环上边权为4的边数与边权为7的边数相等，那么这个环是一个平衡环。你希望得到这样一个平衡环，请问需要连接哪两个点，并赋予什么边权。</p><p>如果有多种方案，输出任意一组解即可。如果无解，输出-1。</p><p>数据范围：1≤𝑛≤100</p><h2 id="solution">Solution</h2><p>必定是长度为3的路，一开始dfs点1留影子找，后来发现只能dfs所有点，这样就是𝑂(n^2)的了。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">inline int rd() &#123;</span><br><span class="line">    int x = 0, f = 1;</span><br><span class="line">    char ch;</span><br><span class="line">    while (ch &lt; &#x27;0&#x27; || ch &gt; &#x27;9&#x27;) &#123;</span><br><span class="line">        if (ch == &#x27;-&#x27;)f = -1;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    while (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123;</span><br><span class="line">        x = x * 10 + ch - &#x27;0&#x27;;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    return f * x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int n,g[1020];</span><br><span class="line">struct E&#123;</span><br><span class="line">    int u,v,w,nex;</span><br><span class="line">&#125;e[1020];</span><br><span class="line">int ansu=0,ansv=0;</span><br><span class="line">int f[1020];</span><br><span class="line">void dfs(int d1,int d2,int d3,int l1,int l2)&#123;</span><br><span class="line">    if(ansu&amp;&amp;ansv) return;</span><br><span class="line">    int n4=0,n7=0;</span><br><span class="line">    if(l1==4) n4++;</span><br><span class="line">    else if(l1==7) n7++;</span><br><span class="line">    if(l2==4) n4++;</span><br><span class="line">    else if(l2==7) n7++;</span><br><span class="line">    for(int i=g[d3];i&gt;0;i=e[i].nex)&#123;</span><br><span class="line">        if(f[e[i].v]) continue;</span><br><span class="line">        if(e[i].w==4) n4++;</span><br><span class="line">        else if(e[i].w==7) n7++;</span><br><span class="line">        if(n4&amp;&amp;n7&amp;&amp;n4+n7==3)&#123;</span><br><span class="line">            ansu=1,ansv=1;</span><br><span class="line">            if(n4==2)&#123;</span><br><span class="line"></span><br><span class="line">                cout&lt;&lt;d1&lt;&lt;&#x27; &#x27;&lt;&lt;e[i].v&lt;&lt;&#x27; &#x27;&lt;&lt;&quot;7&quot;&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">            else&#123;</span><br><span class="line">                cout&lt;&lt;d1&lt;&lt;&#x27; &#x27;&lt;&lt;e[i].v&lt;&lt;&#x27; &#x27;&lt;&lt;&quot;4&quot;&lt;&lt;endl;</span><br><span class="line">            &#125;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        if(e[i].w==4) n4--;</span><br><span class="line">        else if(e[i].w==7) n7--;</span><br><span class="line">        f[e[i].v]=1;</span><br><span class="line">        dfs(d2,d3,e[i].v,l2,e[i].w);</span><br><span class="line">        f[e[i].v]=0;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    int x,y,z;</span><br><span class="line">    for(int i=1;i&lt;=n-1;i++)&#123;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">        e[i]=(E)&#123;x,y,z,g[x]&#125;;g[x]=i;</span><br><span class="line">        e[i+n-1]=(E)&#123;y,x,z,g[y]&#125;;g[y]=i+n-1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        ansu=ansv=0;</span><br><span class="line">        f[i]=1;</span><br><span class="line">        dfs(0,0,i,0,0);</span><br><span class="line">        f[i]=0;</span><br><span class="line">        if((ansu&amp;&amp;ansv))&#123;</span><br><span class="line">            return 0;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;&quot;-1&quot;&lt;&lt;endl;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;给定一棵𝑛个点的树，每条边有一个边权，边权只可能是4或7。你想在树上选择两个没有直接连边的点，并在这两点间加一条边权为4或7的连边。很显然，树上出现一个环，如果这个环上边权为4的边数与边权为7的边数相等，那么这</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod2542 咖啡和作业</title>
    <link href="http://example.com/2019/10/29/51Nod2542%20%E5%92%96%E5%95%A1%E5%92%8C%E4%BD%9C%E4%B8%9A/"/>
    <id>http://example.com/2019/10/29/51Nod2542%20%E5%92%96%E5%95%A1%E5%92%8C%E4%BD%9C%E4%B8%9A/</id>
    <published>2019-10-29T04:17:00.000Z</published>
    <updated>2020-02-18T12:59:47.928Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>你要完成一个𝑚页的作业，手里有𝑛杯咖啡，每一杯咖啡有一个咖啡因强度值𝑎𝑖，能支撑你写𝑎𝑖页作业。每一天你会选择一些咖啡喝掉，对于当天喝的第i杯咖啡，咖啡因的强度会减弱𝑖−1单位，减到0就不再减小。问你最少经过几天能完成作业。</p><h2 id="solution">Solution</h2><p>贪心，二分天数，然后最大的开始往每天填。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stack&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line"></span><br><span class="line">inline int rd() &#123;</span><br><span class="line">    int x = 0, f = 1;</span><br><span class="line">    char ch;</span><br><span class="line">    while (ch &lt; &#x27;0&#x27; || ch &gt; &#x27;9&#x27;) &#123;</span><br><span class="line">        if (ch == &#x27;-&#x27;)f = -1;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    while (ch &gt;= &#x27;0&#x27; &amp;&amp; ch &lt;= &#x27;9&#x27;) &#123;</span><br><span class="line">        x = x * 10 + ch - &#x27;0&#x27;;</span><br><span class="line">        ch = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    return f * x;</span><br><span class="line">&#125;</span><br><span class="line">int n,m,sum;</span><br><span class="line">int a[120];</span><br><span class="line">int ans;</span><br><span class="line">int cnt[120];</span><br><span class="line">int sm;</span><br><span class="line">bool check(int x)&#123;</span><br><span class="line">    memset(cnt,0,sizeof(cnt));</span><br><span class="line">    sm=0;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        int num=i%x;</span><br><span class="line">        sm+=max(a[i]-cnt[num],0);</span><br><span class="line">        //cout&lt;&lt;&#x27;!&#x27;&lt;&lt;sm&lt;&lt;endl;</span><br><span class="line">        cnt[num]++;</span><br><span class="line">    &#125;</span><br><span class="line">    return sm&gt;=m;</span><br><span class="line">&#125;</span><br><span class="line">int cmp(int x,int y)&#123;</span><br><span class="line">    return x&gt;y;</span><br><span class="line">&#125;</span><br><span class="line">int main() &#123;</span><br><span class="line">    n=rd();m=rd();</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        a[i]=rd();</span><br><span class="line">        sum+=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+1,a+1+n,cmp);</span><br><span class="line">    if(sum&lt;m)&#123;</span><br><span class="line">        printf(&quot;-1\n&quot;);</span><br><span class="line">        return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    int l=1,r=n,mid;</span><br><span class="line">    //cout&lt;&lt;check(2)&lt;&lt;endl;</span><br><span class="line">    while(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)/2;</span><br><span class="line">        if(check(mid))&#123;</span><br><span class="line">            r=mid-1;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            l=mid+1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%d\n&quot;,ans);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;你要完成一个𝑚页的作业，手里有𝑛杯咖啡，每一杯咖啡有一个咖啡因强度值𝑎𝑖，能支撑你写𝑎𝑖页作业。每一天你会选择一些咖啡喝掉，对于当天喝的第i杯咖啡，咖啡因的强度会减弱𝑖−1单位，减到0就不再减小。问</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod1640 天气晴朗的魔法</title>
    <link href="http://example.com/2019/10/29/51Nod1640%20%E5%A4%A9%E6%B0%94%E6%99%B4%E6%9C%97%E7%9A%84%E9%AD%94%E6%B3%95/"/>
    <id>http://example.com/2019/10/29/51Nod1640%20%E5%A4%A9%E6%B0%94%E6%99%B4%E6%9C%97%E7%9A%84%E9%AD%94%E6%B3%95/</id>
    <published>2019-10-29T04:15:00.000Z</published>
    <updated>2020-02-18T12:59:47.931Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>51nod魔法学校近日开展了主题为“天气晴朗”的魔法交流活动。 N名魔法师按阵法站好，之后选取N - 1条魔法链将所有魔法师的魔力连接起来，形成一个魔法阵。 魔法链是做法成功与否的关键。每一条魔法链都有一个魔力值V，魔法最终的效果取决于阵中所有魔法链的魔力值的和。 由于逆天改命的魔法过于暴力，所以我们要求阵中的魔法链的魔力值最大值尽可能的小，与此同时，魔力值之和要尽可能的大。 现在给定魔法师人数N，魔法链数目M。求此魔法阵的最大效果。</p><h2 id="solution">Solution</h2><p>最小生成树求最大边最小值，然后求最小生成树。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">typedef long long ll;</span><br><span class="line">using namespace std;</span><br><span class="line">ll n,m;</span><br><span class="line">ll f[100020];</span><br><span class="line">ll f2[100020];</span><br><span class="line">struct Edge&#123;</span><br><span class="line">ll u,v,w;</span><br><span class="line">&#125;e[200020]; </span><br><span class="line">inline int cmp(Edge a,Edge b)&#123;</span><br><span class="line">return a.w&lt;b.w;</span><br><span class="line">&#125;</span><br><span class="line">inline int cmp2(Edge a,Edge b)&#123;</span><br><span class="line">return a.w&gt;b.w;</span><br><span class="line">&#125;</span><br><span class="line">inline ll find(ll x)&#123;</span><br><span class="line">return f[x]==0?x:f[x]=find(f[x]);</span><br><span class="line">&#125;</span><br><span class="line">inline ll find2(ll x)&#123;</span><br><span class="line">return f2[x]==0?x:f2[x]=find2(f2[x]);</span><br><span class="line">&#125;</span><br><span class="line">inline void read(ll &amp;x)</span><br><span class="line">&#123;</span><br><span class="line">x=0;ll f=0;char ch=getchar();</span><br><span class="line">while(ch&lt;&#x27;0&#x27;||ch&gt;&#x27;9&#x27;) &#123;f|=(ch==&#x27;-&#x27;);ch=getchar();&#125;</span><br><span class="line">while(ch&gt;=&#x27;0&#x27;&amp;&amp;ch&lt;=&#x27;9&#x27;)&#123;x=(x&lt;&lt;1)+(x&lt;&lt;3)+(ch^48);ch=getchar();&#125;</span><br><span class="line">x=f?-x:x;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">read(n);read(m);</span><br><span class="line">ll x,y,z;</span><br><span class="line">for(int i=1;i&lt;=m;i++)&#123;</span><br><span class="line">//scanf(&quot;%d%d%d&quot;,&amp;x,&amp;y,&amp;z);</span><br><span class="line">read(x);</span><br><span class="line">read(y);read(z);</span><br><span class="line">e[i]=(Edge)&#123;x,y,z&#125;;</span><br><span class="line">&#125;</span><br><span class="line">sort(e+1,e+1+m,cmp);</span><br><span class="line">ll cnt=0,sum=0,mx=0;</span><br><span class="line">for(int i=1;i&lt;=m;i++)&#123;</span><br><span class="line">ll x=find(e[i].u),y=find(e[i].v);</span><br><span class="line">if(x!=y)&#123;</span><br><span class="line">f[x]=y;</span><br><span class="line">cnt++;</span><br><span class="line">//sum+=e[i].w;</span><br><span class="line">mx=max(mx,e[i].w);</span><br><span class="line">&#125;</span><br><span class="line">if(cnt==n-1)&#123;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cnt=0;</span><br><span class="line">sort(e+1,e+1+m,cmp2);</span><br><span class="line">for(int i=1;i&lt;=m;i++)&#123;</span><br><span class="line">ll x=find2(e[i].u),y=find2(e[i].v);</span><br><span class="line">if(x!=y&amp;&amp;e[i].w&lt;=mx)&#123;</span><br><span class="line">f2[x]=y;</span><br><span class="line">cnt++;</span><br><span class="line">sum+=e[i].w;</span><br><span class="line">//mx=max(mx,e[i].w);</span><br><span class="line">&#125;</span><br><span class="line">if(cnt==n-1)&#123;</span><br><span class="line">//cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">printf(&quot;%lld\n&quot;,sum);</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;51nod魔法学校近日开展了主题为“天气晴朗”的魔法交流活动。 N名魔法师按阵法站好，之后选取N - 1条魔法链将所有魔法师的魔力连接起来，形成一个魔法阵。 魔法链是做法成功与否的关键。每一条魔法链都有一个魔力值</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod1051 最大子矩阵和</title>
    <link href="http://example.com/2019/10/23/51Nod1051%20%E6%9C%80%E5%A4%A7%E5%AD%90%E7%9F%A9%E9%98%B5%E5%92%8C/"/>
    <id>http://example.com/2019/10/23/51Nod1051%20%E6%9C%80%E5%A4%A7%E5%AD%90%E7%9F%A9%E9%98%B5%E5%92%8C/</id>
    <published>2019-10-23T01:53:00.000Z</published>
    <updated>2020-02-18T12:59:47.933Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>一个M*N的矩阵，找到此矩阵的一个子矩阵，并且这个子矩阵的元素的和是最大的，输出这个最大的值。</p><p>例如：3*3的矩阵：</p><p>-1 3 -1</p><p>2 -1 3</p><p>-3 1 2</p><p>和最大的子矩阵是：</p><p>3 -1</p><p>-1 3</p><p>1 2</p><h2 id="solution">Solution</h2><p>枚举上下边界，竖着加起来，横向算最大字段和。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">//#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">//#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line">int m,n;</span><br><span class="line">ll a[520][520];</span><br><span class="line">ll f[520];</span><br><span class="line">ll sum[520][520];</span><br><span class="line">ll mx=0;</span><br><span class="line">int main() &#123;</span><br><span class="line">    //io_opt;</span><br><span class="line">    scanf(&quot;%d%d&quot;,&amp;m,&amp;n);</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        for(int j=1;j&lt;=m;j++)&#123;</span><br><span class="line">            scanf(&quot;%lld&quot;,&amp;a[i][j]);</span><br><span class="line">            sum[i][j]=sum[i-1][j]+a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        for(int j=i;j&lt;=n;j++)&#123;</span><br><span class="line">            for(int k=1;k&lt;=m;k++)&#123;</span><br><span class="line">                f[k]=max(0LL,f[k-1]+sum[j][k]-sum[i-1][k]);</span><br><span class="line">                mx=max(mx,f[k]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%lld\n&quot;,mx);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;一个M*N的矩阵，找到此矩阵的一个子矩阵，并且这个子矩阵的元素的和是最大的，输出这个最大的值。&lt;/p&gt;
&lt;p&gt;例如：3*3的矩阵：&lt;/p&gt;
&lt;p&gt;-1 3 -1&lt;/p&gt;
&lt;p&gt;2 -1 3&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod1050 循环数组最大子段和</title>
    <link href="http://example.com/2019/10/23/51Nod1050%20%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C/"/>
    <id>http://example.com/2019/10/23/51Nod1050%20%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C/</id>
    <published>2019-10-23T01:43:00.000Z</published>
    <updated>2020-02-18T12:59:47.936Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>N个整数组成的循环序列a[1],a[2],a[3],…,a[n]，求该序列如a[i]+a[i+1]+…+a[j]的连续的子段和的最大值（循环序列是指n个数围成一个圈，因此需要考虑a[n-1],a[n],a[1],a[2]这样的序列）。当所给的整数均为负数时和为0。 例如：-2,11,-4,13,-5,-2，和最大的子段为：11,-4,13。和为20。</p><h2 id="solution">Solution</h2><p>最大字段和最大，或者去掉中间某个最小字段和剩下的最大。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line">int n;</span><br><span class="line">ll a[50020];</span><br><span class="line">ll fmn[50020],fmx[50020],mn=0,mx=0,sum;</span><br><span class="line">int main() &#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i];</span><br><span class="line">        sum+=a[i];</span><br><span class="line">        fmx[i]=max(a[i],fmx[i-1]+a[i]);</span><br><span class="line">        mx=max(mx,fmx[i]);</span><br><span class="line">        fmn[i]=min(a[i],fmn[i-1]+a[i]);</span><br><span class="line">        mn=min(mn,fmn[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;max(mx,sum-mn);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;N个整数组成的循环序列a[1],a[2],a[3],…,a[n]，求该序列如a[i]+a[i+1]+…+a[j]的连续的子段和的最大值（循环序列是指n个数围成一个圈，因此需要考虑a[n-1],a[n],a[1],</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod1496 最小异或和</title>
    <link href="http://example.com/2019/10/23/51Nod1496%20%E6%9C%80%E5%B0%8F%E5%BC%82%E6%88%96%E5%92%8C/"/>
    <id>http://example.com/2019/10/23/51Nod1496%20%E6%9C%80%E5%B0%8F%E5%BC%82%E6%88%96%E5%92%8C/</id>
    <published>2019-10-23T01:14:00.000Z</published>
    <updated>2020-02-18T12:59:47.938Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>一个集合包含一组相互不同的数字。现在我们要去寻找一个集合，他要满足如下性质：</p><p>对于所有 𝑥(𝑥∈𝑆) ，要满足l ≤ x ≤ r;</p><p>1 ≤ |S| ≤ k;</p><p>设S中第i个元素是 𝑠𝑖 ;那么 𝑓(𝑆)=𝑠1 ⨁ 𝑠2 ⨁ ... ⨁ 𝑠|𝑆| 的值要尽可能小。</p><h2 id="solution">Solution</h2><p>k=1，答案为l。</p><p>k=2，如果偶数-奇数存在为1，但有特殊情况，答案为两者异或和和两个数取最小。</p><p>k=3，至少有三个连续的数，则必然&lt;=1，只需要找是否为0，两个数异或不可能为0，考虑l的最高位，记为第i位，如果要全消除，则另外两个数第i位必有1个1，1个0，又第i位为0的数不可能比l小，则此数i+1位为1，那么第i位为1的数第i+1位也为1。</p><p>即： 1 1 0 0 0 0 0 0 1 0 X X X X X X 1 X X X X X X ——左边界l</p><p>k=4，如果可以选择的数大于4个直接为0，否则4个数暴力找。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line"></span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line">ll l, r, k;</span><br><span class="line">ll a[10];</span><br><span class="line"></span><br><span class="line">int main() &#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin &gt;&gt; l &gt;&gt; r &gt;&gt; k;</span><br><span class="line">    if (k == 1) &#123;</span><br><span class="line">        cout &lt;&lt; l &lt;&lt; endl;</span><br><span class="line">    &#125; else if (k == 2) &#123;</span><br><span class="line">        if (r - l + 1 == 2) &#123;</span><br><span class="line">            cout &lt;&lt; min(l, min(r, l ^ r));</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            cout &lt;&lt; &quot;1&quot; &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else if (k == 3) &#123;</span><br><span class="line">        int cnt = 0;</span><br><span class="line">        while (l) &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            l &gt;&gt;= 1;</span><br><span class="line">        &#125;</span><br><span class="line">        if ((3LL &lt;&lt; (cnt - 1)) &lt;= r) &#123;</span><br><span class="line">            cout &lt;&lt; &quot;0&quot; &lt;&lt; endl;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            cout &lt;&lt; &quot;1&quot; &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        if (r - l + 1 &gt; 4) &#123;</span><br><span class="line">            cout &lt;&lt; &quot;0&quot; &lt;&lt; endl;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            a[1] = l, a[2] = l + 1, a[3] = l + 2, a[4] = l + 3;</span><br><span class="line">            ll ans = 1;</span><br><span class="line">            ans = min(ans, a[1] ^ a[2] ^ a[3]);</span><br><span class="line">            ans = min(ans, a[1] ^ a[2] ^ a[4]);</span><br><span class="line">            ans = min(ans, a[1] ^ a[3] ^ a[4]);</span><br><span class="line">            ans = min(ans, a[4] ^ a[2] ^ a[3]);</span><br><span class="line">            ans = min(ans, a[1] ^ a[2] ^ a[3] ^ a[4]);</span><br><span class="line">            cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;一个集合包含一组相互不同的数字。现在我们要去寻找一个集合，他要满足如下性质：&lt;/p&gt;
&lt;p&gt;对于所有 𝑥(𝑥∈𝑆) ，要满足l ≤ x ≤ r;&lt;/p&gt;
&lt;p&gt;1 ≤ |S| ≤ k;&lt;/p&gt;
&lt;p&gt;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod1774 多重排序</title>
    <link href="http://example.com/2019/10/23/51Nod1774%20%E5%A4%9A%E9%87%8D%E6%8E%92%E5%BA%8F/"/>
    <id>http://example.com/2019/10/23/51Nod1774%20%E5%A4%9A%E9%87%8D%E6%8E%92%E5%BA%8F/</id>
    <published>2019-10-23T00:25:00.000Z</published>
    <updated>2020-02-18T12:59:47.941Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>有一个数组a，长度为n，下标从1开始。现在要对a进行m次排序，每一次排序给定两个参数t[i]，r[i]表示要对数组的前r[i]个元素进行排序，如果t[i]＝1则按照非降序排序，t[i]=2则按照非升序排序。</p><p>请输出经过m次排序之后的数组a。</p><p>样例解释：</p><p>第一个样例中，初始序列为：1 2 3。经过第一次排序之后变成了：2 1 3。</p><p>第二个样例中，初始序列为：1 2 4 3。经过第一次排序之后变成了：4 2 1 3。经过第二次排序之后变成了：2 4 1 3。</p><h2 id="solution">Solution</h2><p>搞一个r单调递减的栈，从最大的r向前赋值，t=1，赋最大的值，否则赋最小的值。</p><p>搞stdio.h居然效率最高，欢迎吊打QAQ</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">//#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">//#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">//using namespace std;</span><br><span class="line">int n,m;</span><br><span class="line">int a[200020],tmp[200020];</span><br><span class="line">struct E&#123;</span><br><span class="line">    int t,r;</span><br><span class="line">&#125;e[200020];</span><br><span class="line">E x;</span><br><span class="line">int top=0,head,tail;</span><br><span class="line">int main() &#123;</span><br><span class="line">    //io_opt;</span><br><span class="line">    scanf(&quot;%d%d&quot;,&amp;n,&amp;m);</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        scanf(&quot;%d&quot;,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;=m;i++)&#123;</span><br><span class="line">        scanf(&quot;%d%d&quot;,&amp;x.t,&amp;x.r);</span><br><span class="line">        if(top&amp;&amp;x.r&gt;=e[top].r)&#123;</span><br><span class="line">            while(top&gt;0&amp;&amp;x.r&gt;=e[top].r)&#123;</span><br><span class="line">                top--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        e[++top]=x;</span><br><span class="line">    &#125;</span><br><span class="line">    head=1,tail=e[1].r;</span><br><span class="line">    for(int i=1;i&lt;=e[1].r;i++)&#123;</span><br><span class="line">        tmp[i]=a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    std::sort(tmp+1,tmp+1+tail);</span><br><span class="line">    e[top+1].r=0;</span><br><span class="line">    for(int i=1;i&lt;=top;i++)&#123;</span><br><span class="line">        if(e[i].t==1)&#123;</span><br><span class="line">            for(int j=e[i].r;j&gt;e[i+1].r;j--)&#123;</span><br><span class="line">                a[j]=tmp[tail];</span><br><span class="line">                tail--;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            for(int j=e[i].r;j&gt;e[i+1].r;j--)&#123;</span><br><span class="line">                a[j]=tmp[head];</span><br><span class="line">                head++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        printf(&quot;%d &quot;,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;有一个数组a，长度为n，下标从1开始。现在要对a进行m次排序，每一次排序给定两个参数t[i]，r[i]表示要对数组的前r[i]个元素进行排序，如果t[i]＝1则按照非降序排序，t[i]=2则按照非升序排序。&lt;/p</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod1621 花钱买车牌</title>
    <link href="http://example.com/2019/10/21/51Nod1621%20%E8%8A%B1%E9%92%B1%E4%B9%B0%E8%BD%A6%E7%89%8C/"/>
    <id>http://example.com/2019/10/21/51Nod1621%20%E8%8A%B1%E9%92%B1%E4%B9%B0%E8%BD%A6%E7%89%8C/</id>
    <published>2019-10-21T06:43:00.000Z</published>
    <updated>2020-02-18T12:59:47.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>一个车牌号由n位数字组成。如果一个车牌至少有k位数字是相同的，那么我们就说这个车牌漂亮的车牌。现在华沙想要改变他自己的车牌，使得他的车牌变得漂亮。当然，改车牌是要花钱的。每改变一位数字所要花费的费用等于当前位上的新旧数字之差的绝对值。那么总费用就是每位上所花费用的总和。</p><p>举例如下，</p><p>旧牌为0123，新牌为7765，那么对应第一位所花费用为|0-7|＝7，第二位为|1-7|＝6，第三位为|2-6|＝4，第四位为|3-5|＝2，总和为7+6+4+2＝19</p><p>华沙想用最少的钱，使他的车牌变得漂亮起来。现在给定n，k，和旧牌的号码，计算换牌的最少费，以及新牌的号码，</p><p>如果最少费用的号码有多个，我们取字典序最小的那个。</p><p>样例解释：</p><p>在样例中，把第二个数字换成“8”花费|9-8|＝1，把第五个数字换成“8”也花了1。</p><p>把第六个数字换成“8”花费|6-8|＝2.总费用为1+1+2＝4，新号码为“888188”</p><p>两个长度为n的序列比较方法如下。</p><p>存在两个序列x，y，长度都是n。</p><p>如果存在i(1≤i≤n)和任意j(1≤j＜i)使得 xi＜yixi＜yi 并且 xj＝yjxj＝yj ，那么我们就说x比y小。</p><h2 id="solution">Solution</h2><p>0到9循环，每次排序改变前面的。</p><p>排序规则，先排差绝对值小的，相等先排数大的，这样字典序会改小，数还相等，如果小于当前循环的i，说明字典序会变大，就先排后面的，否则先排前面的。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;cstdio&gt;</span><br><span class="line">#include&lt;string&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line">int n,k;</span><br><span class="line">struct E&#123;</span><br><span class="line">char c;</span><br><span class="line">int pla;</span><br><span class="line">&#125;e[10020];</span><br><span class="line">E ans[10020];</span><br><span class="line">E cur[10020];</span><br><span class="line">int mn=1e9;</span><br><span class="line">bool Ecmp(E x[],E y[])&#123;</span><br><span class="line">for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">if(x[i].c&lt;y[i].c) return false;</span><br><span class="line">else if(x[i].c&gt;y[i].c) return true;</span><br><span class="line">&#125;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line">void cpy(E x[],E y[])&#123;</span><br><span class="line">for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">x[i]=y[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">string s;</span><br><span class="line">int tmp=0;</span><br><span class="line">int ab(int x)&#123;</span><br><span class="line">return x&gt;0?x:-x;</span><br><span class="line">&#125;</span><br><span class="line">int cmp(E x,E y)&#123;</span><br><span class="line">int xx=x.c-&#x27;0&#x27;,yy=y.c-&#x27;0&#x27;;</span><br><span class="line">if(ab(xx-tmp)==ab(yy-tmp))&#123;</span><br><span class="line">if(xx==yy)&#123;</span><br><span class="line">if(xx&gt;tmp)&#123;</span><br><span class="line">return x.pla&lt;y.pla;</span><br><span class="line">//cout&lt;&lt;x.pla&lt;&lt;&quot; before &quot;&lt;&lt;y.pla&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">return x.pla&gt;y.pla;</span><br><span class="line">//cout&lt;&lt;x.pla&lt;&lt;&quot; after &quot;&lt;&lt;y.pla&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">return xx&gt;yy;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return ab(xx-tmp)&lt;ab(yy-tmp);</span><br><span class="line">&#125;</span><br><span class="line">int cmp2(E x,E y)&#123;</span><br><span class="line">return x.pla&lt;y.pla;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">io_opt;</span><br><span class="line">cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">cin&gt;&gt;s;</span><br><span class="line">for(int i=0;i&lt;n;i++)&#123;</span><br><span class="line">e[i+1].c=s[i];</span><br><span class="line">e[i+1].pla=i+1;</span><br><span class="line">&#125;</span><br><span class="line">int cmn;</span><br><span class="line">for(int i=0;i&lt;=9;i++)&#123;</span><br><span class="line">cmn=0;</span><br><span class="line">cpy(cur,e);</span><br><span class="line">tmp=i;</span><br><span class="line">sort(cur+1,cur+1+n,cmp);</span><br><span class="line">for(int j=1;j&lt;=k;j++)&#123;</span><br><span class="line">cmn+=ab(cur[j].c-&#x27;0&#x27;-i);</span><br><span class="line">cur[j].c=&#x27;0&#x27;+i;</span><br><span class="line">&#125;</span><br><span class="line">/*if(i==2)&#123;</span><br><span class="line">for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">cout&lt;&lt;cur[j].pla&lt;&lt;&#x27; &#x27;;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;*/</span><br><span class="line">sort(cur+1,cur+1+n,cmp2);</span><br><span class="line">if(cmn&lt;mn||cmn==mn&amp;&amp;!Ecmp(cur,ans))&#123;</span><br><span class="line">mn=cmn;</span><br><span class="line">for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">ans[j]=cur[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;mn&lt;&lt;endl;</span><br><span class="line">for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">cout&lt;&lt;ans[i].c;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;一个车牌号由n位数字组成。如果一个车牌至少有k位数字是相同的，那么我们就说这个车牌漂亮的车牌。现在华沙想要改变他自己的车牌，使得他的车牌变得漂亮。当然，改车牌是要花钱的。每改变一位数字所要花费的费用等于当前位上的</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod1140 矩阵相乘结果的判断</title>
    <link href="http://example.com/2019/10/21/51Nod1140%20%E7%9F%A9%E9%98%B5%E7%9B%B8%E4%B9%98%E7%BB%93%E6%9E%9C%E7%9A%84%E5%88%A4%E6%96%AD/"/>
    <id>http://example.com/2019/10/21/51Nod1140%20%E7%9F%A9%E9%98%B5%E7%9B%B8%E4%B9%98%E7%BB%93%E6%9E%9C%E7%9A%84%E5%88%A4%E6%96%AD/</id>
    <published>2019-10-21T05:53:00.000Z</published>
    <updated>2020-02-18T12:59:47.947Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>给出三个N<em>N的矩阵A, B, C，问A </em> B是否等于C？</p><h2 id="solution">Solution</h2><p>随机找或者用向量压缩。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include &lt;time.h&gt;</span><br><span class="line">#include &lt;stdlib.h&gt;</span><br><span class="line">#define ll long long</span><br><span class="line">using namespace std;</span><br><span class="line">int n;</span><br><span class="line">int a[520][520],b[520][520],c[520][520];</span><br><span class="line">int r[520],r2[520];</span><br><span class="line">int cr[520],rc[520],br[520],ra[520],abr[520],rab[520];</span><br><span class="line">bool rd()&#123;</span><br><span class="line">srand(time(NULL));</span><br><span class="line">int x;</span><br><span class="line">int y;</span><br><span class="line">for(int i=1;i&lt;=30000;i++)&#123;</span><br><span class="line">x=rand()%n+1;</span><br><span class="line">y=rand()%n+1;</span><br><span class="line">int sum=0;</span><br><span class="line">for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">sum+=a[x][j]*b[j][y];</span><br><span class="line">&#125; </span><br><span class="line">if(sum!=c[x][y]) return false;</span><br><span class="line">&#125;</span><br><span class="line">return true;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line"></span><br><span class="line">scanf(&quot;%d&quot;,&amp;n);</span><br><span class="line"></span><br><span class="line">for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;b[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;c[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">r[i]=i*i%101;</span><br><span class="line">r2[i]=(i+3)*i%111;</span><br><span class="line">&#125;</span><br><span class="line">for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">cr[i]+=c[i][j]*r[j];</span><br><span class="line">rc[i]+=c[j][i]*r2[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">br[i]+=b[i][j]*r[j];</span><br><span class="line">ra[i]+=a[j][i]*r2[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">for(int j=1;j&lt;=n;j++)&#123;</span><br><span class="line">abr[i]+=a[i][j]*br[j];</span><br><span class="line">rab[i]+=b[j][i]*ra[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">bool f=true;</span><br><span class="line">for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">if(abr[i]!=cr[i]||rab[i]!=rc[i])&#123;</span><br><span class="line">f=false;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//cout&lt;&lt;rd();</span><br><span class="line">if(!f)&#123;</span><br><span class="line">printf(&quot;No\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">//f=f&amp;rd();</span><br><span class="line">//if(f)&#123;</span><br><span class="line">printf(&quot;Yes\n&quot;);</span><br><span class="line">//&#125;</span><br><span class="line">//else&#123;</span><br><span class="line">//printf(&quot;No\n&quot;);</span><br><span class="line">//&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;给出三个N&lt;em&gt;N的矩阵A, B, C，问A &lt;/em&gt; B是否等于C？&lt;/p&gt;
&lt;h2 id=&quot;solution&quot;&gt;Solution&lt;/h2&gt;
&lt;p&gt;随机找或者用向量压缩。&lt;/p&gt;
&lt;h2 id=&quot;co</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod1225 余数之和</title>
    <link href="http://example.com/2019/10/21/51Nod1225%20%E4%BD%99%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
    <id>http://example.com/2019/10/21/51Nod1225%20%E4%BD%99%E6%95%B0%E4%B9%8B%E5%92%8C/</id>
    <published>2019-10-21T05:50:00.000Z</published>
    <updated>2020-02-18T12:59:47.950Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>F(n) = (n % 1) + (n % 2) + (n % 3) + ...... (n % n)。其中%表示Mod，也就是余数。 例如F(6) = 6 % 1 + 6 % 2 + 6 % 3 + 6 % 4 + 6 % 5 + 6 % 6 = 0 + 0 + 0 + 2 + 1 + 0 = 3。 给出n，计算F(n), 由于结果很大，输出Mod 1000000007的结果即可。</p><h2 id="solution">Solution</h2><p>好像叫分块？不过写的不大好。。。</p><h2 id="code">Code</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">typedef __int128 ll;</span><br><span class="line">using namespace std;</span><br><span class="line">ll n;</span><br><span class="line">const ll mod=1000000007;</span><br><span class="line">ll dfs(ll cur,ll cnt)&#123;</span><br><span class="line">if(cur&lt;=4000000)&#123;</span><br><span class="line">ll ret=0;</span><br><span class="line">for(int i=1;i&lt;=cur;i++)&#123;</span><br><span class="line">ret=(ret+n%i)%mod;</span><br><span class="line">&#125;</span><br><span class="line">return ret;</span><br><span class="line">&#125;</span><br><span class="line">ll nex=n/(cnt+1);</span><br><span class="line">ll chu=2,num=cur-nex;</span><br><span class="line">if(num%2==0)&#123;</span><br><span class="line">chu=1;</span><br><span class="line">num/=2;</span><br><span class="line">&#125;</span><br><span class="line">return ((n%cur+n%(nex+1))/chu%mod*num%mod+dfs(nex,cnt+1))%mod;</span><br><span class="line">&#125;</span><br><span class="line">long long s;</span><br><span class="line">int main()&#123;</span><br><span class="line">scanf(&quot;%lld&quot;,&amp;s);</span><br><span class="line">n=s;</span><br><span class="line">long long ans=dfs(n,1)%mod;</span><br><span class="line">printf(&quot;%lld\n&quot;,ans); </span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;F(n) = (n % 1) + (n % 2) + (n % 3) + ...... (n % n)。其中%表示Mod，也就是余数。 例如F(6) = 6 % 1 + 6 % 2 + 6 % 3 + 6 % 4</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>51Nod1105 第K大的数</title>
    <link href="http://example.com/2019/10/21/51Nod1105%20%E7%AC%ACK%E5%A4%A7%E7%9A%84%E6%95%B0/"/>
    <id>http://example.com/2019/10/21/51Nod1105%20%E7%AC%ACK%E5%A4%A7%E7%9A%84%E6%95%B0/</id>
    <published>2019-10-21T05:48:00.000Z</published>
    <updated>2020-02-18T12:59:47.953Z</updated>
    
    <content type="html"><![CDATA[<h2 id="problem">Problem</h2><p>数组A和数组B，里面都有n个整数。</p><p>数组C共有n^2个整数，分别是：</p><p>A[0] * B[0],A[0] * B[1] ...... A[0] * B[n-1]</p><p>A[1] * B[0],A[1] * B[1] ...... A[1] * B[n-1]</p><p>......</p><p>A[n - 1] * B[0],A[n - 1] * B[1] ...... A[n - 1] * B[n - 1]</p><p>是数组A同数组B的组合,求数组C中第K大的数。</p><p>例如：</p><p>A：1 2 3，B：2 3 4。</p><p>A与B组合成的C为</p><pre><code>     A[0]  A[1]  A[2]</code></pre><p>B[0] 2 3 4</p><p>B[1] 4 6 8</p><p>B[2] 6 9 12</p><p>共9个数。</p><h2 id="solution">Solution</h2><p>一种二分套二分，二分答案，check的时候对每个数二分找更小的，有一些细节需要处理。</p><p>仔细考虑发现，找比二分的数小的数，只要扫一遍，另一个指针随时减。省掉一个log</p><h2 id="code1">Code1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#define mem(ss) memset(ss,0,sizeof(ss))</span><br><span class="line">#define rep(d, s, t) for(int d=s;d&lt;=t;d++)</span><br><span class="line">#define rev(d, s, t) for(int d=s;d&gt;=t;d--)</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">using namespace std;</span><br><span class="line">const int MAXN=50020;</span><br><span class="line">ll n,k,a[MAXN],b[MAXN];</span><br><span class="line">ll cont(int cur,ll num)&#123;</span><br><span class="line">    ll t=a[cur],ans=0;</span><br><span class="line">    int l=1,r=n,mid;</span><br><span class="line">    while(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)/2;</span><br><span class="line">        if(t*b[mid]&lt;=num)&#123;</span><br><span class="line">            l=mid+1;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            r=mid-1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return ans;</span><br><span class="line">&#125;</span><br><span class="line">bool check(ll x)&#123;</span><br><span class="line">    ll ans=0;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        ans+=cont(i,x);</span><br><span class="line">    &#125;</span><br><span class="line">    return ans&gt;=k;</span><br><span class="line">&#125;</span><br><span class="line">int main() &#123;</span><br><span class="line">    io_opt;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">    k=n*n-k+1;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        cin&gt;&gt;a[i]&gt;&gt;b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sort(a+1,a+1+n);</span><br><span class="line">    sort(b+1,b+1+n);</span><br><span class="line">    ll l=a[1]*b[1],r=a[n]*b[n],mid,ans;</span><br><span class="line">    while(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)/2;</span><br><span class="line">        if(check(mid))&#123;</span><br><span class="line">            r=mid-1;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            l=mid+1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="code2">Code2</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;set&gt;</span><br><span class="line">//#include&lt;iostream&gt;</span><br><span class="line">#include&lt;algorithm&gt;</span><br><span class="line">#include&lt;cstring&gt;</span><br><span class="line">#include&lt;cmath&gt;</span><br><span class="line">#include&lt;vector&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line">#include&lt;queue&gt;</span><br><span class="line">#define mem(ss) memset(ss,0,sizeof(ss))</span><br><span class="line">#define rep(d, s, t) for(int d=s;d&lt;=t;d++)</span><br><span class="line">#define rev(d, s, t) for(int d=s;d&gt;=t;d--)</span><br><span class="line">typedef long long ll;</span><br><span class="line">typedef long double ld;</span><br><span class="line">typedef double db;</span><br><span class="line">#define io_opt ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)</span><br><span class="line">//using namespace std;</span><br><span class="line">const int MAXN=50020;</span><br><span class="line">ll n,k,a[MAXN],b[MAXN];</span><br><span class="line">inline ll cont(int cur,ll num)&#123;</span><br><span class="line">    ll t=a[cur],ans=0;</span><br><span class="line">    int l=1,r=n,mid;</span><br><span class="line">    while(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)/2;</span><br><span class="line">        if(t*b[mid]&lt;=num)&#123;</span><br><span class="line">            l=mid+1;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            r=mid-1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return ans;</span><br><span class="line">&#125;</span><br><span class="line">inline bool check(ll x)&#123;</span><br><span class="line">    ll ans=0;</span><br><span class="line">    int j=n;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        while(a[i]*b[j]&gt;x) j--;</span><br><span class="line">        ans+=j;</span><br><span class="line">    &#125;</span><br><span class="line">    return ans&gt;=k;</span><br><span class="line">&#125;</span><br><span class="line">int main() &#123;</span><br><span class="line">    //io_opt;</span><br><span class="line"></span><br><span class="line">    scanf(&quot;%lld%lld&quot;,&amp;n,&amp;k);</span><br><span class="line">    k=n*n-k+1;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        scanf(&quot;%lld%lld&quot;,&amp;a[i],&amp;b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    std::sort(a+1,a+1+n);</span><br><span class="line">    std::sort(b+1,b+1+n);</span><br><span class="line">    ll l=a[1]*b[1],r=a[n]*b[n],mid,ans=r;</span><br><span class="line">    while(l&lt;=r)&#123;</span><br><span class="line">        mid=(l+r)/2;</span><br><span class="line">        if(check(mid))&#123;</span><br><span class="line">            r=mid-1;</span><br><span class="line">            ans=mid;</span><br><span class="line">        &#125;</span><br><span class="line">        else&#123;</span><br><span class="line">            l=mid+1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(&quot;%lld\n&quot;,ans);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;problem&quot;&gt;Problem&lt;/h2&gt;
&lt;p&gt;数组A和数组B，里面都有n个整数。&lt;/p&gt;
&lt;p&gt;数组C共有n^2个整数，分别是：&lt;/p&gt;
&lt;p&gt;A[0] * B[0],A[0] * B[1] ...... A[0] * B[n-1]&lt;/p&gt;
&lt;p&gt;A[</summary>
      
    
    
    
    
  </entry>
  
</feed>
